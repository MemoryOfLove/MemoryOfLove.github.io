{
    "version": "https://jsonfeed.org/version/1",
    "title": "blog",
    "subtitle": "",
    "icon": "http://jluyeyu.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://jluyeyu.com",
    "items": [
        {
            "id": "http://jluyeyu.com/ns3/10.ns3%20%E8%B7%AF%E7%94%B1%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B/",
            "url": "http://jluyeyu.com/ns3/10.ns3%20%E8%B7%AF%E7%94%B1%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B/",
            "title": "10.ns3 路由性能测试实例",
            "date_published": "2022-11-02T06:00:00.000Z",
            "content_html": "<h2 id=\"10ns3-路由性能测试实例md\"><a class=\"anchor\" href=\"#10ns3-路由性能测试实例md\">#</a> 10.ns3 <span class=\"exturl\" data-url=\"aHR0cDovL3huLS1mc3EyNzBhcnNkcTZxMmpqMHlyaTJyMzBkLm1k\">路由性能测试实例.md</span></h2>\n<p>在本节中，将介绍 <code>ns3</code>  中路由仿真，从路由选择到绘图出结果的一系列流程。</p>\n<p>PS：只是本人实验的一系列步骤，不一定是最优做法，但也是一套完整的流程吧，有更好的流程可以互相交流。</p>\n<h3 id=\"路由性能好坏的评判标准\"><a class=\"anchor\" href=\"#路由性能好坏的评判标准\">#</a> 路由性能好坏的评判标准</h3>\n<p>通常来说描述一个路由，我们会从 <code>吞吐量，时延，能耗，丢包率，交付率，平均路径长度</code> 等因素来描述路由的好坏。</p>\n<p><code>吞吐量</code> 指的是在单位时间内通过某个网络的实际的数据量。是对实际网络到底有多少数据率在信道上传输。</p>\n<p><code>时延</code> 指的是数据从信源发送到信宿所需的时间。</p>\n<p><code>交付率</code> 指的是发送过程中信宿实际接收的数据包 / 总共发送的数据包。</p>\n<p><code>丢包率</code> 是 1 - 交付率</p>\n<p><code>能耗</code> 指的是一段时间内消耗的能量</p>\n<p><code>路径长度</code> 指的是路由的跳数</p>\n<h3 id=\"仿真模拟\"><a class=\"anchor\" href=\"#仿真模拟\">#</a> 仿真模拟</h3>\n<p>为了获取节点收发包的情况，我们需要跟踪设备收发包的情况，这就需要用到 <code>Config</code>  来进行跟踪，</p>\n<p>对于 <code>onOffHelper</code>  和 <code>PacketSink</code>  做收发端的情况下，我们可以采用 <code>/NodeList/*/ApplicationList/*/$ns3::PacketSink/Rx</code>  作为 <code>tracking</code>  的地址。</p>\n<p>即通过如下方法来绑定 <code>ReceivePacket</code>  作为回调函数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ConnectWithoutContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/ApplicationList/*/$ns3::PacketSink/Rx\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>OrrpExample<span class=\"token double-colon punctuation\">::</span>ReceivePacket<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>而在 <code>ReceivePacket</code>  中，我们又可以通过</p>\n<p>类似如下的方法收集已接收的 <code>packet</code>  信息</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ReceivePacket</span><span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> Address <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> tmp<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        tmpTotal <span class=\"token operator\">+=</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> tmp<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> tmp<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"S throughoutput = \"</span> <span class=\"token operator\">&lt;&lt;</span> tmpTotal <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Mbit\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            std<span class=\"token double-colon punctuation\">::</span>ostringstream ostrStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            ostrStream <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"./result/\"</span> <span class=\"token operator\">&lt;&lt;</span> m_protocolName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test/\"</span> <span class=\"token operator\">&lt;&lt;</span> m_protocolName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test-size-\"</span> <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-seed-\"</span> <span class=\"token operator\">&lt;&lt;</span> seed <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesLocationType-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesLocationType <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesMove-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesMove <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-width-\"</span> <span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-step-\"</span> <span class=\"token operator\">&lt;&lt;</span> step <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-log\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            std<span class=\"token double-colon punctuation\">::</span>ofstream <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>ostrStream<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>app <span class=\"token operator\">|</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            file <span class=\"token operator\">&lt;&lt;</span> tmp<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> bytesTotal <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> tmpTotal <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            tmp <span class=\"token operator\">+=</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            tmpTotal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        tmpTotal <span class=\"token operator\">+=</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">></span><span class=\"token double-colon punctuation\">::</span>iterator iter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    iter <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetUid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> iter <span class=\"token operator\">-</span> sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    bytesTotal <span class=\"token operator\">+=</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    packetsReceived <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    m_delayEstimation<span class=\"token punctuation\">.</span><span class=\"token function\">RecordRx</span><span class=\"token punctuation\">(</span>packet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    m_delay <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> sendTime<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    m_jitter <span class=\"token operator\">+=</span> m_delayEstimation<span class=\"token punctuation\">.</span><span class=\"token function\">GetLastJitter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>first_pkt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        m_firstRx <span class=\"token operator\">=</span> <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        first_pkt <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    m_lastRx <span class=\"token operator\">=</span> <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>并在仿真的最后，调用自定义的 <code>ReportStatistics</code>  进行最后的分析，并存储结果到本地文件</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    OrrpExample test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">NS_FATAL_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Configuration failed. Aborted.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    test<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    test<span class=\"token punctuation\">.</span><span class=\"token function\">ReportStatistics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    test<span class=\"token punctuation\">.</span><span class=\"token function\">Report</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ReportStatistics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">double</span> Dt <span class=\"token operator\">=</span> m_lastRx<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> m_firstRx<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">double</span> kbs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bytesTotal <span class=\"token operator\">*</span> <span class=\"token number\">8.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>Dt <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    bytesTotal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>ofstream <span class=\"token function\">out</span><span class=\"token punctuation\">(</span>m_CSVfileName<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">int</span> m_nSinks <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    out <span class=\"token operator\">&lt;&lt;</span> kbs <span class=\"token operator\">/</span> m_nSinks <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> m_delay <span class=\"token operator\">/</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> m_jitter <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>packetsReceived <span class=\"token operator\">*</span> <span class=\"token number\">1000000000.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">//   &lt;&lt; routingPkts &lt;&lt; \",\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">//    &lt;&lt; m_nSinks &lt;&lt; \",\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">//    &lt;&lt; m_nWifis &lt;&lt; \",\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">//    &lt;&lt; m_protocolName &lt;&lt; \",\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">//   &lt;&lt; m_txrange &lt;&lt; \"\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"吞吐量 \"</span> <span class=\"token operator\">&lt;&lt;</span> kbs <span class=\"token operator\">/</span> m_nSinks <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" kbps ,\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"收包数\"</span> <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"发包数\"</span> <span class=\"token operator\">&lt;&lt;</span> packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"交付率\"</span> <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"时延\"</span> <span class=\"token operator\">&lt;&lt;</span> m_delay <span class=\"token operator\">/</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> m_jitter <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>packetsReceived <span class=\"token operator\">*</span> <span class=\"token number\">1000000000.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>ostringstream ostrStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    ostrStream <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"./result/\"</span> <span class=\"token operator\">&lt;&lt;</span> m_protocolName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test/\"</span> <span class=\"token operator\">&lt;&lt;</span> m_protocolName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test-size-\"</span> <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-seed-\"</span> <span class=\"token operator\">&lt;&lt;</span> seed <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesLocationType-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesLocationType <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesMove-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesMove <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-width-\"</span> <span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-step-\"</span> <span class=\"token operator\">&lt;&lt;</span> step <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-delay-log\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>ofstream <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>ostrStream<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>app <span class=\"token operator\">|</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    file <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> m_delay <span class=\"token operator\">/</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> kbs <span class=\"token operator\">/</span> m_nSinks <span class=\"token operator\">/</span> <span class=\"token number\">1e3</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    out<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    packetsReceived <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    packetsTx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    m_delay <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    m_jitter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">// routingPkts = 0;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>同理我们也可以计算点到点实时的吞吐量</p>\n<p>通过添加 <code>Simulator::Schedule (Seconds (6.0), &amp;OrrpExample::CalculateThroughput,this,endTime);</code>  来调用 <code>CalculateThroughput</code>  来计算实时的吞吐量</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CalculateThroughput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> endTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>ostringstream ostrStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ostrStream <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"./result/orrpTest/orrpTest-size-\"</span> <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-seed-\"</span> <span class=\"token operator\">&lt;&lt;</span> seed <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesLocationType-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesLocationType <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesMove-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesMove <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-width-\"</span> <span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-step-\"</span> <span class=\"token operator\">&lt;&lt;</span> step <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-log\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>ofstream file<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>ostrStream<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios_base<span class=\"token double-colon punctuation\">::</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Time now <span class=\"token operator\">=</span> <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">double</span> cur <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sink<span class=\"token operator\">-></span><span class=\"token function\">GetTotalRx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> lastTotalRx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span><span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token number\">1e6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">double</span> TotalRx <span class=\"token operator\">=</span> sink<span class=\"token operator\">-></span><span class=\"token function\">GetTotalRx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span><span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token number\">1e6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">double</span> TotalTx <span class=\"token operator\">=</span> source<span class=\"token operator\">-></span><span class=\"token function\">GetTotalTx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span><span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token number\">1e6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    file <span class=\"token operator\">&lt;&lt;</span> now<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> TotalTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> TotalRx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> cur <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">//  std::cout&lt;&lt;now.GetSeconds () &lt;&lt; \"s 发送数据: \\t\" &lt;&lt;\"send:\"&lt;&lt;source->GetTotalTx ()* (double) 8 / 1e6&lt;&lt;\"Mbit\"&lt;&lt;std::endl;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">//  std::cout&lt;&lt;now.GetSeconds () &lt;&lt; \"s 接收数据: \\t\" &lt;&lt;\"receive:\"&lt;&lt;sink->GetTotalRx ()* (double) 8 / 1e6&lt;&lt;\"Mbit\"&lt;&lt;std::endl;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> now<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"s吞吐量: \\t\"</span> <span class=\"token operator\">&lt;&lt;</span> cur <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" Mbit/s\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// throughput</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                                                                     <span class=\"token comment\">// std::cout &lt;&lt; now.GetSeconds () &lt;&lt; cur &lt;&lt; std::endl;//throughput</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    lastTotalRx <span class=\"token operator\">=</span> sink<span class=\"token operator\">-></span><span class=\"token function\">GetTotalRx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">&lt;</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>endTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">//  Simulator::Schedule (MilliSeconds (100), &amp;OrrpExample::CalculateThroughput,this,endTime);</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Schedule</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>OrrpExample<span class=\"token double-colon punctuation\">::</span>CalculateThroughput<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> endTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>详细代码如下所示</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/aodv-module.h\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/orrp-module.h\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/orrp2d-helper.h\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/core-module.h\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/network-module.h\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/internet-module.h\"</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/mobility-module.h\"</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/point-to-point-module.h\"</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/v4ping-helper.h\"</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/optical-helper.h\"</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/applications-module.h\"</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// add by yeyu</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/MyPropagationLossModel.h\"</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/stats-module.h\"</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/netanim-module.h\"</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sstream></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> ns3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//********************* stats result******************//</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 输出结果</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">//  void ReportStatistics ();</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// send callback</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">TxPacket</span><span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// 打印进度</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PrintProgress</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> TotalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 接收回调</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">// void ReceivePacket (Ptr&lt;const Packet> packet, const Address &amp;);</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">uint32_t</span> <span class=\"token function\">bytesTotal</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">uint32_t</span> <span class=\"token function\">bytesReceivedTotal</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">uint32_t</span> <span class=\"token function\">packetsReceived</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">uint32_t</span> <span class=\"token function\">packetsTx</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>DelayJitterEstimation m_delayEstimation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token function\">m_delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">uint64_t</span> <span class=\"token function\">m_jitter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">first_pkt</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token function\">m_CSVfileName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orrpTest-routing-output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>Time m_firstRx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>Time m_lastRx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>Time tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">uint32_t</span> <span class=\"token function\">tmpTotal</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>Time<span class=\"token operator\">></span> sendTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">></span> sendSeq<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">//********************* stats result******************//</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">// 接收端应用</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>Ptr<span class=\"token operator\">&lt;</span>PacketSink<span class=\"token operator\">></span> sink<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* Pointer to the packet sink application */</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">// 发送端应用</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>Ptr<span class=\"token operator\">&lt;</span>OnOffApplication<span class=\"token operator\">></span> source<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">uint64_t</span> lastTotalRx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* The value of the last total received bytes */</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">OrrpExample</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token function\">OrrpExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">bool</span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>     * Report results</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     * \\param os the output stream</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">Report</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>ostream <span class=\"token operator\">&amp;</span>os<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">printRoute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> showTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">CalculateThroughput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> endTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">PhyRxOkTrace</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> snr<span class=\"token punctuation\">,</span> WifiMode mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">WifiPreamble</span> preamble<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">DevTxTrace</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">DevRxTrace</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">ReceivePacket</span><span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> Address <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">ReportStatistics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">energyChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> oldValue<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token comment\">// parameters</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token comment\">/// 节点数量</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">uint32_t</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token comment\">/// 采用网格布局时节点的距离</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">double</span> step<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token comment\">/// 仿真总时间 (s)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">double</span> totalTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token comment\">/// Write per-device PCAP traces if true</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">bool</span> pcap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token comment\">/// 是否打印路由表</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">bool</span> printRoutes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">bool</span> nodesMove<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">double</span> m_energyCost<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">double</span> m_energyInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token comment\">// 节点布局方式 (0: 网格布局；1: 矩形随机布局)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">int</span> nodesLocationType<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token comment\">// 随机</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">int</span> seed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token comment\">// yeyu</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    WifiHelper wifi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>Ptr<span class=\"token operator\">&lt;</span>WifiPhy<span class=\"token operator\">>></span> m_phyVector<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>string m_protocolName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">int</span> m_routingProtocol<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    NodeContainer nodes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    NetDeviceContainer devices<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    Ipv4InterfaceContainer interfaces<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">CreateNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">CreateDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">InstallInternetStack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">InstallApplications</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ReceivePacket</span><span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> Address <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> tmp<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        tmpTotal <span class=\"token operator\">+=</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> tmp<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> tmp<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"S throughoutput = \"</span> <span class=\"token operator\">&lt;&lt;</span> tmpTotal <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Mbit\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            std<span class=\"token double-colon punctuation\">::</span>ostringstream ostrStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            ostrStream <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"./result/\"</span> <span class=\"token operator\">&lt;&lt;</span> m_protocolName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test/\"</span> <span class=\"token operator\">&lt;&lt;</span> m_protocolName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test-size-\"</span> <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-seed-\"</span> <span class=\"token operator\">&lt;&lt;</span> seed <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesLocationType-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesLocationType <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesMove-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesMove <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-width-\"</span> <span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-step-\"</span> <span class=\"token operator\">&lt;&lt;</span> step <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-log\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            std<span class=\"token double-colon punctuation\">::</span>ofstream <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>ostrStream<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>app <span class=\"token operator\">|</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>            file <span class=\"token operator\">&lt;&lt;</span> tmp<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> bytesTotal <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> tmpTotal <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>            file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            tmp <span class=\"token operator\">+=</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            tmpTotal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        tmpTotal <span class=\"token operator\">+=</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">uint32_t</span><span class=\"token operator\">></span><span class=\"token double-colon punctuation\">::</span>iterator iter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    iter <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetUid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> iter <span class=\"token operator\">-</span> sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    bytesTotal <span class=\"token operator\">+=</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    packetsReceived <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    m_delayEstimation<span class=\"token punctuation\">.</span><span class=\"token function\">RecordRx</span><span class=\"token punctuation\">(</span>packet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token comment\">//          m_delay += m_delayEstimation.GetLastDelay().GetNanoSeconds();</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    m_delay <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> sendTime<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    m_jitter <span class=\"token operator\">+=</span> m_delayEstimation<span class=\"token punctuation\">.</span><span class=\"token function\">GetLastJitter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token comment\">//          std::cout&lt;&lt;tmp.GetSeconds()&lt;&lt;\"s \"&lt;&lt;tmpTotal&lt;&lt;\"Byte \"&lt;&lt;Simulator::Now().GetSeconds()&lt;&lt;\"uid:\"&lt;&lt;packet->GetUid()&lt;&lt;\" received packet delay=\"&lt;&lt;(Simulator::Now()-sendTime[index]).GetSeconds()&lt;&lt;\"s size= \"&lt;&lt;packet->GetSize ()&lt;&lt;std::endl;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>first_pkt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        m_firstRx <span class=\"token operator\">=</span> <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        first_pkt <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    m_lastRx <span class=\"token operator\">=</span> <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">TxPacket</span><span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> pkt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token comment\">// trace packet</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    packetsTx <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    m_delayEstimation<span class=\"token punctuation\">.</span><span class=\"token function\">PrepareTx</span><span class=\"token punctuation\">(</span>pkt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    sendSeq<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>pkt<span class=\"token operator\">-></span><span class=\"token function\">GetUid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    sendTime<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token comment\">//    std::cout&lt;&lt;Simulator::Now().GetSeconds()&lt;&lt;\"uid:\"&lt;&lt;pkt->GetUid()&lt;&lt;\" send\"&lt;&lt;std::endl;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre></pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PrintProgress</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> TotalTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token keyword\">double</span> now <span class=\"token operator\">=</span> <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>    <span class=\"token function\">NS_LOG_UNCOND</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Progress Completed .. \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">/</span> TotalTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>    <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Schedule</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>TotalTime <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>PrintProgress<span class=\"token punctuation\">,</span> TotalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ReportStatistics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    <span class=\"token keyword\">double</span> Dt <span class=\"token operator\">=</span> m_lastRx<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> m_firstRx<span class=\"token punctuation\">.</span><span class=\"token function\">GetSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>    <span class=\"token keyword\">double</span> kbs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bytesTotal <span class=\"token operator\">*</span> <span class=\"token number\">8.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>Dt <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    bytesTotal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>ofstream <span class=\"token function\">out</span><span class=\"token punctuation\">(</span>m_CSVfileName<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token keyword\">int</span> m_nSinks <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    out <span class=\"token operator\">&lt;&lt;</span> kbs <span class=\"token operator\">/</span> m_nSinks <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> m_delay <span class=\"token operator\">/</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> m_jitter <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>packetsReceived <span class=\"token operator\">*</span> <span class=\"token number\">1000000000.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token comment\">//   &lt;&lt; routingPkts &lt;&lt; \",\"</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        <span class=\"token comment\">//    &lt;&lt; m_nSinks &lt;&lt; \",\"</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>        <span class=\"token comment\">//    &lt;&lt; m_nWifis &lt;&lt; \",\"</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>        <span class=\"token comment\">//    &lt;&lt; m_protocolName &lt;&lt; \",\"</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>        <span class=\"token comment\">//   &lt;&lt; m_txrange &lt;&lt; \"\"</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"吞吐量 \"</span> <span class=\"token operator\">&lt;&lt;</span> kbs <span class=\"token operator\">/</span> m_nSinks <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" kbps ,\"</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"收包数\"</span> <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"发包数\"</span> <span class=\"token operator\">&lt;&lt;</span> packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"交付率\"</span> <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"时延\"</span> <span class=\"token operator\">&lt;&lt;</span> m_delay <span class=\"token operator\">/</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> m_jitter <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>packetsReceived <span class=\"token operator\">*</span> <span class=\"token number\">1000000000.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>ostringstream ostrStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    ostrStream <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"./result/\"</span> <span class=\"token operator\">&lt;&lt;</span> m_protocolName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test/\"</span> <span class=\"token operator\">&lt;&lt;</span> m_protocolName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Test-size-\"</span> <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-seed-\"</span> <span class=\"token operator\">&lt;&lt;</span> seed <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesLocationType-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesLocationType <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-nodesMove-\"</span> <span class=\"token operator\">&lt;&lt;</span> nodesMove <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-width-\"</span> <span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-step-\"</span> <span class=\"token operator\">&lt;&lt;</span> step <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-delay-log\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>ofstream <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>ostrStream<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>app <span class=\"token operator\">|</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>    file <span class=\"token operator\">&lt;&lt;</span> packetsReceived <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>packetsTx <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> m_delay <span class=\"token operator\">/</span> packetsReceived <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> kbs <span class=\"token operator\">/</span> m_nSinks <span class=\"token operator\">/</span> <span class=\"token number\">1e3</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>    out<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>    packetsReceived <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>    packetsTx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>    m_delay <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>    m_jitter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>    <span class=\"token comment\">// routingPkts = 0;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre></pre></td></tr><tr><td data-num=\"227\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>    OrrpExample test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>        <span class=\"token function\">NS_FATAL_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Configuration failed. Aborted.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>    test<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>    test<span class=\"token punctuation\">.</span><span class=\"token function\">ReportStatistics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>    test<span class=\"token punctuation\">.</span><span class=\"token function\">Report</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre></pre></td></tr><tr><td data-num=\"241\"></td><td><pre><span class=\"token comment\">//-----------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre><span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OrrpExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>                             <span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>                             <span class=\"token function\">totalTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>                             <span class=\"token function\">pcap</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>                             <span class=\"token function\">printRoutes</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>                             <span class=\"token function\">seed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>                             <span class=\"token function\">width</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>                             <span class=\"token function\">nodesMove</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>                             <span class=\"token function\">nodesLocationType</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>                             <span class=\"token function\">m_energyInit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>                             <span class=\"token function\">m_energyCost</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>                             <span class=\"token function\">m_routingProtocol</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>                             <span class=\"token function\">m_protocolName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aodv\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre></pre></td></tr><tr><td data-num=\"258\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>    <span class=\"token comment\">// Enable ORRP logs by default. Comment this if too noisy</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>    <span class=\"token comment\">//   LogComponentEnable(\"OrrpNeighbors\", LOG_LEVEL_WARN);</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>    <span class=\"token comment\">//   LogComponentEnable(\"OrrpNeighbors\", LOG_LEVEL_WARN);</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>    <span class=\"token comment\">//   LogComponentEnable(\"OrrpRoutingTable\", LOG_LEVEL_WARN);</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>    <span class=\"token function\">LogComponentEnable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Orrp2dRoutingProtocol\"</span><span class=\"token punctuation\">,</span> LOG_LEVEL_ERROR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>    <span class=\"token function\">LogComponentEnable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Orrp2dNeighbors\"</span><span class=\"token punctuation\">,</span> LOG_LEVEL_ERROR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>    <span class=\"token comment\">//   LogComponentEnable(\"OrrpRoutingProtocol\", LOG_LEVEL_ALL);</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>    <span class=\"token comment\">//  LogComponentEnable(\"BasicEnergySource\", LOG_LEVEL_ALL);</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>    <span class=\"token comment\">//  LogComponentEnable(\"MyLossModel\",LOG_LEVEL_ALL);</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>    <span class=\"token comment\">//  LogComponentEnable(\"YansWifiChannel\",LOG_LEVEL_ALL);</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>    <span class=\"token comment\">//  LogComponentEnable(\"MyPacketSink\",LOG_LEVEL_ALL);</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>    <span class=\"token comment\">//  LogComponentEnable(\"OrrpRoutingProtocol\",LOG_LEVEL_ALL);</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>    CommandLine <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pcap\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Write PCAP traces.\"</span><span class=\"token punctuation\">,</span> pcap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"printRoutes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Print routing table dumps.\"</span><span class=\"token punctuation\">,</span> printRoutes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Number of nodes.\"</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Simulation time, s.\"</span><span class=\"token punctuation\">,</span> totalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"route\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"routing protocol name\"</span><span class=\"token punctuation\">,</span> m_routingProtocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"step\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Grid step, m\"</span><span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"seed\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"seed\"</span><span class=\"token punctuation\">,</span> seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"grid width\"</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodesMove\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nodes move?\"</span><span class=\"token punctuation\">,</span> nodesMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodesLocationType\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the type of nodes location\"</span><span class=\"token punctuation\">,</span> nodesLocationType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>    cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>    <span class=\"token class-name\">SeedManager</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetSeed</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre></pre></td></tr><tr><td data-num=\"292\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PhyRxOkTrace</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> snr<span class=\"token punctuation\">,</span> WifiMode mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">WifiPreamble</span> preamble<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"PHYRXOK mode=\"</span> <span class=\"token operator\">&lt;&lt;</span> mode <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" snr=\"</span> <span class=\"token operator\">&lt;&lt;</span> snr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" PacketSize= \"</span> <span class=\"token operator\">&lt;&lt;</span> packet<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DevTxTrace</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" TX p size = \"</span> <span class=\"token operator\">&lt;&lt;</span> p<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DevRxTrace</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" RX p size = : \"</span> <span class=\"token operator\">&lt;&lt;</span> p<span class=\"token operator\">-></span><span class=\"token function\">GetSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre></pre></td></tr><tr><td data-num=\"305\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetDefault</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::WifiRemoteStationManager::RtsCtsThreshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// enable rts cts all the time.</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>    <span class=\"token function\">CreateNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>    <span class=\"token function\">CreateDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>    <span class=\"token comment\">//  Config::Connect (\"/NodeList/*/DeviceList/*/Phy/State/RxOk\", MakeCallback (&amp;OrrpExample::PhyRxOkTrace,this));</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>    <span class=\"token comment\">//  Config::Connect (\"/NodeList/*/DeviceList/*/Mac/MacRx\", MakeCallback (&amp;OrrpExample::DevRxTrace,this));</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>    <span class=\"token comment\">//  Config::Connect (\"/NodeList/*/DeviceList/*/Mac/MacTx\", MakeCallback (&amp;OrrpExample::DevTxTrace,this));</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>    <span class=\"token function\">InstallInternetStack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>    <span class=\"token function\">InstallApplications</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Starting simulation for \"</span> <span class=\"token operator\">&lt;&lt;</span> totalTime <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" s ...\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>    <span class=\"token comment\">// 动画显示</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>    AnimationInterface <span class=\"token function\">anim</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2dTest.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>    anim<span class=\"token punctuation\">.</span><span class=\"token function\">SetMaxPktsPerTraceFile</span><span class=\"token punctuation\">(</span><span class=\"token number\">99999999999999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>    anim<span class=\"token punctuation\">.</span><span class=\"token function\">EnableIpv4RouteTracking</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2dTest.route\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>    <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>    <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>    <span class=\"token comment\">//  Config::Connect (\"/NodeList/*/DeviceList/*/Phy/State/RxOk\", MakeCallback (&amp;OrrpExample::PhyRxOkTrace2,this));</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>    <span class=\"token comment\">//  Config::Connect (\"/NodeList/*/DeviceList/*/Phy/State/RxOk\", MakeCallback (&amp;PhyRxOkTrace));</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>    <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre></pre></td></tr><tr><td data-num=\"331\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Report</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>ostream <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre></pre></td></tr><tr><td data-num=\"335\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Creating \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">)</span>size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" nodes \"</span> <span class=\"token operator\">&lt;&lt;</span> step <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" m apart.\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>    nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>    <span class=\"token comment\">// Name nodes</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>ostringstream os<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>        os <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"node-\"</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>        <span class=\"token class-name\">Names</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>    <span class=\"token comment\">// Create static grid</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>    MobilityHelper mobility<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>    <span class=\"token comment\">// 节点是否移动</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nodesMove<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>        mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetMobilityModel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::RandomWalk2dMobilityModel\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>                                  <span class=\"token string\">\"Mode\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>                                  <span class=\"token string\">\"Direction\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::UniformRandomVariable[Min=0.0|Max=6.283184]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>                                  <span class=\"token comment\">//                          \"Time\", StringValue(\"0.5s\"),</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>                                  <span class=\"token string\">\"Speed\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::UniformRandomVariable[Min=0.0|Max=4.0]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>                                  <span class=\"token comment\">//                           \"Speed\", StringValue(\"ns3::ConstantRandomVariable[Constant=5.0]\"),</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>                                  <span class=\"token string\">\"Bounds\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0|1000|0|1000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>    <span class=\"token comment\">// 节点初始部署位置</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>nodesLocationType<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>        mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetPositionAllocator</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::GridPositionAllocator\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>                                      <span class=\"token string\">\"MinX\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>                                      <span class=\"token string\">\"MinY\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">100.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>                                      <span class=\"token string\">\"DeltaX\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>                                      <span class=\"token string\">\"DeltaY\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>                                      <span class=\"token string\">\"GridWidth\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>                                      <span class=\"token string\">\"LayoutType\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RowFirst\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"采用网格布局 width = \"</span> <span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>        <span class=\"token keyword\">double</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>        <span class=\"token comment\">// 设置节点部署在 200*200 米随机位置</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>        mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetPositionAllocator</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::RandomBoxPositionAllocator\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>                                      <span class=\"token string\">\"X\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::UniformRandomVariable[Min=0.0|Max=200.0]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>                                      <span class=\"token string\">\"Y\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::UniformRandomVariable[Min=0.0|Max=200.0]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>                                      <span class=\"token string\">\"Z\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::UniformRandomVariable[Min=0.0|Max=0.0]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"采用200*200随机2维部署\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>    mobility<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">singleDirectionSend</span><span class=\"token punctuation\">(</span>WifiHelper wifi<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> transmitDirectAngel<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> theta<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>Ptr<span class=\"token operator\">&lt;</span>WifiPhy<span class=\"token operator\">>></span> m_phyVector <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">getPhyVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"389\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_phyVector<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>        m_phyVector<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">setTransmitMode</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"392\"></td><td><pre>        m_phyVector<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">setTransmitDirectAngel</span><span class=\"token punctuation\">(</span>transmitDirectAngel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>        m_phyVector<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">setTheta</span><span class=\"token punctuation\">(</span>theta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre></pre></td></tr><tr><td data-num=\"397\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">fourDirectionSend</span><span class=\"token punctuation\">(</span>WifiHelper wifi<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> pianzhuanAngel<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> angel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>Ptr<span class=\"token operator\">&lt;</span>WifiPhy<span class=\"token operator\">>></span> m_phyVector <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">getPhyVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_phyVector<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>        m_phyVector<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">setTransmitDirectAngel</span><span class=\"token punctuation\">(</span>pianzhuanAngel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>        m_phyVector<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">setTheta</span><span class=\"token punctuation\">(</span>angel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre></pre></td></tr><tr><td data-num=\"407\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">twoDirectionSend</span><span class=\"token punctuation\">(</span>WifiHelper wifi<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> transmitDirectAngel<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> angel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>Ptr<span class=\"token operator\">&lt;</span>WifiPhy<span class=\"token operator\">>></span> m_phyVector <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">getPhyVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_phyVector<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>        m_phyVector<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">setTransmitMode</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>        m_phyVector<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">setTransmitDirectAngel</span><span class=\"token punctuation\">(</span>transmitDirectAngel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>        m_phyVector<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">setTheta</span><span class=\"token punctuation\">(</span>angel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>    WifiMacHelper wifiMac<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre>    wifiMac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::AdhocWifiMac\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>    OpticalPhyHelper opticalPhy <span class=\"token operator\">=</span> <span class=\"token class-name\">OpticalPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>    OpticalChannelHelper opticalChannel <span class=\"token operator\">=</span> <span class=\"token class-name\">OpticalChannelHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>    <span class=\"token comment\">// add loss</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>    <span class=\"token comment\">//   Ptr&lt;MyPropagationLossModel> lossModel=CreateObject&lt;MyPropagationLossModel>();</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>    <span class=\"token comment\">//   lossModel->SetCLamada(0.151);</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>    <span class=\"token comment\">//  Ptr&lt;YansWifiChannel> myChannel=wifiChannel.Create();</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>    <span class=\"token comment\">//   myChannel->SetPropagationLossModel(lossModel);</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>    opticalPhy<span class=\"token punctuation\">.</span><span class=\"token function\">SetChannel</span><span class=\"token punctuation\">(</span>opticalChannel<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>    opticalPhy<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TxPowerStart\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">16.0206</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>    opticalPhy<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TxPowerEnd\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">16.0206</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>    opticalPhy<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TxPowerLevels\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre>    <span class=\"token comment\">//  opticalPhy.Set(\"TxGain\", DoubleValue(1));</span></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>    <span class=\"token comment\">//  opticalPhy.Set(\"RxGain\", DoubleValue(1));</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>    <span class=\"token comment\">//  opticalPhy.Set(\"RxSensitivity\", DoubleValue(-96));</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>    <span class=\"token comment\">//  opticalPhy.Set(\"CcaEdThreshold\", DoubleValue(-99));</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>    <span class=\"token comment\">// wifi.SetRemoteStationManager (\"ns3::ConstantRateWifiManager\", \"DataMode\", StringValue (\"OfdmRate6Mbps\"), \"RtsCtsThreshold\", UintegerValue (0));</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>    <span class=\"token comment\">//  wifi.SetRemoteStationManager (\"ns3::MinstrelHtWifiManager\");</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>    devices <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span><span class=\"token punctuation\">(</span>opticalPhy<span class=\"token punctuation\">,</span> wifiMac<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"440\"></td><td><pre></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>    <span class=\"token comment\">// create trace file</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre>    <span class=\"token comment\">//   AsciiTraceHelper ascii;</span></pre></td></tr><tr><td data-num=\"443\"></td><td><pre>    <span class=\"token comment\">//   wifiPhy.EnableAscii(ascii.CreateFileStream (\"orrp.tr\"),nodes);</span></pre></td></tr><tr><td data-num=\"444\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre></pre></td></tr><tr><td data-num=\"446\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">printRoute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> showTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>    Ptr<span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span> routingStream <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ArouteTest.routes\"</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>    orrp<span class=\"token punctuation\">.</span><span class=\"token function\">PrintRoutingTableAllAt</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>showTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> routingStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InstallInternetStack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>    <span class=\"token comment\">// you can configure ORRP attributes here using orrp.Set(name, value)</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>    InternetStackHelper stack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre></pre></td></tr><tr><td data-num=\"456\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>m_routingProtocol<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"459\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"460\"></td><td><pre>        Orrp2dHelper orrp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"461\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>ostringstream os<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"462\"></td><td><pre>        os <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"10.0.0.\"</span> <span class=\"token operator\">&lt;&lt;</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"463\"></td><td><pre>        orrp<span class=\"token punctuation\">.</span>m_dst <span class=\"token operator\">=</span> <span class=\"token function\">Ipv4Address</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"464\"></td><td><pre>        orrp<span class=\"token punctuation\">.</span>m_origin <span class=\"token operator\">=</span> <span class=\"token function\">Ipv4Address</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10.0.0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre>        stack<span class=\"token punctuation\">.</span><span class=\"token function\">SetRoutingHelper</span><span class=\"token punctuation\">(</span>orrp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// has effect on the next Install ()</span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>        m_protocolName <span class=\"token operator\">=</span> <span class=\"token string\">\"orrp2d\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"used orrp2d routing proto\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>printRoutes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"469\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"470\"></td><td><pre>            Ptr<span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span> routingStream <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2dTest.routes\"</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"471\"></td><td><pre>            orrp<span class=\"token punctuation\">.</span><span class=\"token function\">PrintRoutingTableAllAt</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>totalTime <span class=\"token operator\">-</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> routingStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"472\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"473\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"474\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"475\"></td><td><pre></pre></td></tr><tr><td data-num=\"476\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"477\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"478\"></td><td><pre>        OrrpHelper orrp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"479\"></td><td><pre>        stack<span class=\"token punctuation\">.</span><span class=\"token function\">SetRoutingHelper</span><span class=\"token punctuation\">(</span>orrp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// has effect on the next Install ()</span></pre></td></tr><tr><td data-num=\"480\"></td><td><pre>        m_protocolName <span class=\"token operator\">=</span> <span class=\"token string\">\"orrp\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"481\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"used orrp routing proto\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"482\"></td><td><pre></pre></td></tr><tr><td data-num=\"483\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>printRoutes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"484\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"485\"></td><td><pre>            Ptr<span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span> routingStream <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orrpTest.routes\"</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"486\"></td><td><pre>            orrp<span class=\"token punctuation\">.</span><span class=\"token function\">PrintRoutingTableAllAt</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>totalTime <span class=\"token operator\">-</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> routingStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"487\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"488\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"491\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre>        AodvHelper aodv<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>        stack<span class=\"token punctuation\">.</span><span class=\"token function\">SetRoutingHelper</span><span class=\"token punctuation\">(</span>aodv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// has effect on the next Install ()</span></pre></td></tr><tr><td data-num=\"494\"></td><td><pre>        m_protocolName <span class=\"token operator\">=</span> <span class=\"token string\">\"aodv\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"495\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"used aodv routing proto\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"496\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>printRoutes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"497\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>            Ptr<span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span> routingStream <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aodvTest.routes\"</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>            aodv<span class=\"token punctuation\">.</span><span class=\"token function\">PrintRoutingTableAllAt</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>totalTime <span class=\"token operator\">-</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> routingStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"500\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"501\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"502\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"503\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre></pre></td></tr><tr><td data-num=\"505\"></td><td><pre>    <span class=\"token comment\">//  OrrpHelper orrp;</span></pre></td></tr><tr><td data-num=\"506\"></td><td><pre>    <span class=\"token comment\">//  stack.SetRoutingHelper (orrp); // has effect on the next Install ()</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>    stack<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>    Ipv4AddressHelper address<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre>    address<span class=\"token punctuation\">.</span><span class=\"token function\">SetBase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"255.0.0.0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>    interfaces <span class=\"token operator\">=</span> address<span class=\"token punctuation\">.</span><span class=\"token function\">Assign</span><span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"511\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"512\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CalculateThroughput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> endTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"513\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"515\"></td><td><pre>   std::ostringstream ostrStream;</pre></td></tr><tr><td data-num=\"516\"></td><td><pre>   ostrStream &lt;&lt; \"./result/orrpTest/orrpTest-size-\"&lt;&lt;size&lt;&lt;\"-seed-\"&lt;&lt;seed&lt;&lt;\"-nodesLocationType-\"&lt;&lt;nodesLocationType&lt;&lt;\"-nodesMove-\"&lt;&lt;nodesMove&lt;&lt;\"-width-\"&lt;&lt;width&lt;&lt;\"-step-\"&lt;&lt;step&lt;&lt;\"-log\";</pre></td></tr><tr><td data-num=\"517\"></td><td><pre>    std::ofstream file;</pre></td></tr><tr><td data-num=\"518\"></td><td><pre>    file.open (ostrStream.str (),std::ios_base::app);</pre></td></tr><tr><td data-num=\"519\"></td><td><pre>    Time now = Simulator::Now ();</pre></td></tr><tr><td data-num=\"520\"></td><td><pre>    double cur = (sink->GetTotalRx () - lastTotalRx) * (double) 8 / 1e6;</pre></td></tr><tr><td data-num=\"521\"></td><td><pre>    double TotalRx=sink->GetTotalRx ()* (double) 8 / 1e6;</pre></td></tr><tr><td data-num=\"522\"></td><td><pre>    double TotalTx=source->GetTotalTx ()* (double) 8 / 1e6;</pre></td></tr><tr><td data-num=\"523\"></td><td><pre>    file&lt;&lt;now.GetSeconds ()&lt;&lt;\"\"&lt;&lt;TotalTx&lt;&lt;\" \"&lt;&lt;TotalRx&lt;&lt;\" \"&lt;&lt;cur&lt;&lt;\"\\n\";</pre></td></tr><tr><td data-num=\"524\"></td><td><pre></pre></td></tr><tr><td data-num=\"525\"></td><td><pre>  //  std::cout&lt;&lt;now.GetSeconds () &lt;&lt; \"s 发送数据: \\t\" &lt;&lt;\"send:\"&lt;&lt;source->GetTotalTx ()* (double) 8 / 1e6&lt;&lt;\"Mbit\"&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"526\"></td><td><pre>  //  std::cout&lt;&lt;now.GetSeconds () &lt;&lt; \"s 接收数据: \\t\" &lt;&lt;\"receive:\"&lt;&lt;sink->GetTotalRx ()* (double) 8 / 1e6&lt;&lt;\"Mbit\"&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"527\"></td><td><pre>    std::cout &lt;&lt; now.GetSeconds () &lt;&lt; \"s 吞吐量: \\t\" &lt;&lt; cur &lt;&lt; \"Mbit/s\" &lt;&lt; std::endl;//throughput</pre></td></tr><tr><td data-num=\"528\"></td><td><pre>     //std::cout &lt;&lt; now.GetSeconds () &lt;&lt; cur &lt;&lt; std::endl;//throughput</pre></td></tr><tr><td data-num=\"529\"></td><td><pre>    lastTotalRx = sink->GetTotalRx ();</pre></td></tr><tr><td data-num=\"530\"></td><td><pre>    file.close ();</pre></td></tr><tr><td data-num=\"531\"></td><td><pre>    if (now&lt;Seconds (endTime))</pre></td></tr><tr><td data-num=\"532\"></td><td><pre>      //  Simulator::Schedule (MilliSeconds (100), &amp;OrrpExample::CalculateThroughput,this,endTime);</pre></td></tr><tr><td data-num=\"533\"></td><td><pre>        Simulator::Schedule (Seconds (1), &amp;OrrpExample::CalculateThroughput,this,endTime);</pre></td></tr><tr><td data-num=\"534\"></td><td><pre>        */</span></pre></td></tr><tr><td data-num=\"535\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"536\"></td><td><pre></pre></td></tr><tr><td data-num=\"537\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"538\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"539\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"540\"></td><td><pre>      std::vector&lt;Time> sendTime=source->getSendTimeList ();</pre></td></tr><tr><td data-num=\"541\"></td><td><pre>      std::vector&lt;Time> receiveTime=sink->getReceiveTimeList ();</pre></td></tr><tr><td data-num=\"542\"></td><td><pre>      std::vector&lt;uint32_t> sendSeq=source->getSendSeqList ();</pre></td></tr><tr><td data-num=\"543\"></td><td><pre>      std::vector&lt;uint32_t> receiveSeq=sink->getReceiveSeqList ();</pre></td></tr><tr><td data-num=\"544\"></td><td><pre>      Time now = Simulator::Now ();</pre></td></tr><tr><td data-num=\"545\"></td><td><pre>      double TotalRx=sink->GetTotalRx ()* (double) 8 / 1e6;</pre></td></tr><tr><td data-num=\"546\"></td><td><pre>      double TotalTx=source->GetTotalTx ()* (double) 8 / 1e6;</pre></td></tr><tr><td data-num=\"547\"></td><td><pre>      double avgThroughput=TotalRx/(sendTime [sendTime.size ()-1]-sendTime [0]).GetSeconds ();</pre></td></tr><tr><td data-num=\"548\"></td><td><pre>      std::vector&lt;Time> delayList;</pre></td></tr><tr><td data-num=\"549\"></td><td><pre>      delayList.insert (delayList.begin (),sendTime.size (),Time ());</pre></td></tr><tr><td data-num=\"550\"></td><td><pre>      Time totalDelay=Time ();</pre></td></tr><tr><td data-num=\"551\"></td><td><pre>      for (uint32_t i=0;i&lt;receiveTime.size ();i++)&#123;</pre></td></tr><tr><td data-num=\"552\"></td><td><pre>          int seq=receiveSeq [i];</pre></td></tr><tr><td data-num=\"553\"></td><td><pre>          delayList [seq]=receiveTime [i]-sendTime [seq];</pre></td></tr><tr><td data-num=\"554\"></td><td><pre>          std::cout&lt;&lt;\"序列号:\"&lt;&lt;seq&lt;&lt;\"的包时延是\"&lt;&lt;delayList [seq].GetSeconds ()&lt;&lt;\"S\"&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"555\"></td><td><pre>          totalDelay+=delayList [seq];</pre></td></tr><tr><td data-num=\"556\"></td><td><pre>      &#125;</pre></td></tr><tr><td data-num=\"557\"></td><td><pre>      //output to file</pre></td></tr><tr><td data-num=\"558\"></td><td><pre>      std::ofstream file;</pre></td></tr><tr><td data-num=\"559\"></td><td><pre>      file.open (\"./result/orrpTest/orrpTest-delay-log\",std::ios_base::app);</pre></td></tr><tr><td data-num=\"560\"></td><td><pre>      file&lt;&lt;(double) receiveTime.size ()/sendTime.size ()&lt;&lt;\"\"&lt;&lt;(totalDelay/receiveTime.size ()).GetSeconds ()&lt;&lt;\" \"&lt;&lt;avgThroughput&lt;&lt;\"\\n\";</pre></td></tr><tr><td data-num=\"561\"></td><td><pre></pre></td></tr><tr><td data-num=\"562\"></td><td><pre>      std::cout&lt;&lt;\"丢包率:\"&lt;&lt;1-(double) receiveTime.size ()/sendTime.size ()&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"563\"></td><td><pre>      std::cout&lt;&lt;\"平均时延:\"&lt;&lt;(totalDelay/receiveTime.size ()).GetSeconds ()&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"564\"></td><td><pre>      std::cout&lt;&lt;\"平均吞吐量:\"&lt;&lt;avgThroughput&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"565\"></td><td><pre>      */</span></pre></td></tr><tr><td data-num=\"566\"></td><td><pre></pre></td></tr><tr><td data-num=\"567\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"568\"></td><td><pre>      std::cout&lt;&lt;\"数据包发送和接收时间\"&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"569\"></td><td><pre>      for (uint32_t i = 0; i &lt; sendTime.size (); i++)</pre></td></tr><tr><td data-num=\"570\"></td><td><pre>       &#123;</pre></td></tr><tr><td data-num=\"571\"></td><td><pre>          std::cout&lt;&lt;sendTime [i].GetSeconds ()&lt;&lt;\"S 发送了一个数据包\"&lt;&lt;\"序列号是\"&lt;&lt;sendSeq [i]&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"572\"></td><td><pre>       &#125;</pre></td></tr><tr><td data-num=\"573\"></td><td><pre>      for (uint32_t i = 0; i &lt; receiveTime.size (); i++)&#123;</pre></td></tr><tr><td data-num=\"574\"></td><td><pre>              std::cout&lt;&lt;receiveTime [i].GetSeconds ()&lt;&lt;\"S 接收了一个数据包\"&lt;&lt;\"序列号是\"&lt;&lt;receiveSeq [i]&lt;&lt;std::endl;</pre></td></tr><tr><td data-num=\"575\"></td><td><pre>      &#125;</pre></td></tr><tr><td data-num=\"576\"></td><td><pre>      */</span></pre></td></tr><tr><td data-num=\"577\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"578\"></td><td><pre></pre></td></tr><tr><td data-num=\"579\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">OrrpExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InstallApplications</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"580\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"581\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>string dataRate <span class=\"token operator\">=</span> <span class=\"token string\">\"1Mbps\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// size of packet, 5/8*1024*1024/1472</span></pre></td></tr><tr><td data-num=\"582\"></td><td><pre>    <span class=\"token comment\">//  std::string dataRate = \"1Mbps\";</span></pre></td></tr><tr><td data-num=\"583\"></td><td><pre>    PacketSinkHelper <span class=\"token function\">sinkHelper</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::UdpSocketFactory\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Ipv4Address</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"584\"></td><td><pre>    <span class=\"token comment\">//  sinkHelper.SetAttribute(\"EnableSeqTsSizeHeader\",BooleanValue (true));</span></pre></td></tr><tr><td data-num=\"585\"></td><td><pre></pre></td></tr><tr><td data-num=\"586\"></td><td><pre>    <span class=\"token comment\">// 目的节点 ->sinkApp</span></pre></td></tr><tr><td data-num=\"587\"></td><td><pre>    ApplicationContainer sinkApp <span class=\"token operator\">=</span> sinkHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"588\"></td><td><pre>    sink <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">StaticCast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>PacketSink<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>sinkApp<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"589\"></td><td><pre></pre></td></tr><tr><td data-num=\"590\"></td><td><pre>    Address remoteAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"591\"></td><td><pre>    remoteAddress <span class=\"token operator\">=</span> <span class=\"token function\">InetSocketAddress</span><span class=\"token punctuation\">(</span>interfaces<span class=\"token punctuation\">.</span><span class=\"token function\">GetAddress</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"592\"></td><td><pre>    <span class=\"token comment\">/* Install TCP/UDP Transmitter on the station */</span></pre></td></tr><tr><td data-num=\"593\"></td><td><pre>    OnOffHelper <span class=\"token function\">sourceHelper</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::UdpSocketFactory\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Address</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"594\"></td><td><pre>    <span class=\"token comment\">//  OnOffHelper sourceHelper (\"ns3::UdpSocketFactory\", (InetSocketAddress (interfaces.GetAddress (size-1), 9)));</span></pre></td></tr><tr><td data-num=\"595\"></td><td><pre>    sourceHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Remote\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">AddressValue</span><span class=\"token punctuation\">(</span>remoteAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"596\"></td><td><pre>    sourceHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PacketSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"597\"></td><td><pre>    sourceHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantRandomVariable[Constant=1]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"598\"></td><td><pre>    sourceHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OffTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantRandomVariable[Constant=0]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"599\"></td><td><pre>    sourceHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DataRate\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DataRateValue</span><span class=\"token punctuation\">(</span><span class=\"token function\">DataRate</span><span class=\"token punctuation\">(</span>dataRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"600\"></td><td><pre>    sourceHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EnableSeqTsSizeHeader\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"601\"></td><td><pre>    <span class=\"token comment\">// 发送节点 ->sourceHelperApp</span></pre></td></tr><tr><td data-num=\"602\"></td><td><pre>    ApplicationContainer sourceApp <span class=\"token operator\">=</span> sourceHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"603\"></td><td><pre>    sourceApp<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">TraceConnectWithoutContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tx\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>TxPacket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"604\"></td><td><pre></pre></td></tr><tr><td data-num=\"605\"></td><td><pre>    source <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">StaticCast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>OnOffApplication<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>sourceApp<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"606\"></td><td><pre></pre></td></tr><tr><td data-num=\"607\"></td><td><pre>    <span class=\"token comment\">// 接收应用启动时间</span></pre></td></tr><tr><td data-num=\"608\"></td><td><pre>    sinkApp<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"609\"></td><td><pre>    <span class=\"token comment\">// 发送应用启动时间</span></pre></td></tr><tr><td data-num=\"610\"></td><td><pre>    sourceApp<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"611\"></td><td><pre></pre></td></tr><tr><td data-num=\"612\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ConnectWithoutContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/ApplicationList/*/$ns3::PacketSink/Rx\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>OrrpExample<span class=\"token double-colon punctuation\">::</span>ReceivePacket<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"613\"></td><td><pre>    <span class=\"token comment\">// progress</span></pre></td></tr><tr><td data-num=\"614\"></td><td><pre>    <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Schedule</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>totalTime <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>PrintProgress<span class=\"token punctuation\">,</span> totalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"615\"></td><td><pre></pre></td></tr><tr><td data-num=\"616\"></td><td><pre>    <span class=\"token comment\">//  Simulator::Schedule (Seconds (6.0), &amp;OrrpExample::CalculateThroughput,this,totalTime-0.5);</span></pre></td></tr><tr><td data-num=\"617\"></td><td><pre>    <span class=\"token comment\">//  Simulator::Schedule(Seconds(totalTime)-Seconds(0.1),&amp;writeData);</span></pre></td></tr><tr><td data-num=\"618\"></td><td><pre>    sinkApp<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"619\"></td><td><pre>    sourceApp<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">Seconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"620\"></td><td><pre>    <span class=\"token comment\">//  printRoute(1.02017);</span></pre></td></tr><tr><td data-num=\"621\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"结果分析\"><a class=\"anchor\" href=\"#结果分析\">#</a> 结果分析</h3>\n<p>从上述的代码也可以看出 <code>ns3</code>  的仿真结果可以输出到文件，所以我们可以对文件进行操作，获取想要的结果并生成对应的图像</p>\n<h4 id=\"gawk统计\"><a class=\"anchor\" href=\"#gawk统计\">#</a> gawk 统计</h4>\n<p>我们可以通过 <code>gawk</code>  来统计文件中数据的均值以做分析。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> fillName <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;if($8!=\"-nan\")&#123;sum+=$5;size=$2+2;n+=1;delay+=$6;cost+=$7;path+=$8&#125;&#125; END &#123;print \"Pdr=\",sum/n,\"reachable =\",n/NR,\"energyCost=\",cost*size/n,\"avgCost=\",cost/n,\"pathLength=\",path/n,\"delay=\",delay/n,\"\\n\",sum/n,\"\\t\",n/NR,\"\\t\",cost*size/n,\"\\t\",cost/n\"\\t\",path/n,\"\\t\",delay/n&#125;'</span></pre></td></tr></table></figure><p>事实上同样的场景需要做多次，所以我们可以通过 <code>shell</code>  来进行 <code>seed</code>  等变量的改变，然后通过另一个 <code>shell</code>  脚本进行统计</p>\n<p>运行脚本例子如下所示：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">NODES</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span> <span class=\"token number\">100</span> <span class=\"token number\">125</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">INTERFACE</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">ROUTEPROTO</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">0</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">SEEDS</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">500</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">NODESMOVE</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">RANGE</span><span class=\"token operator\">=</span><span class=\"token number\">250</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">NODESLOCATIONTYPE</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">TRIALS</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">TOTALTIMES</span><span class=\"token operator\">=</span><span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span><span class=\"token variable\">$LD_LIBRARY_PATH</span>:bin/</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">interNum</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;INTERFACE<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">nodeMove</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;NODESMOVE<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">range</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;RANGE<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">size</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;NODES<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">proto</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;ROUTEPROTO<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">seed</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;SEEDS<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    ./waf -v --run <span class=\"token string\">\"25dTest --nodeSize=<span class=\"token variable\">$size</span> --nodesMove=<span class=\"token variable\">$nodeMove</span> --nodesLocationType=<span class=\"token variable\">$NODESLOCATIONTYPE</span>  --seed=<span class=\"token variable\">$seed</span> --time=<span class=\"token variable\">$TOTALTIMES</span> --range=<span class=\"token variable\">$range</span> --route=<span class=\"token variable\">$proto</span> --interfaceNum=<span class=\"token variable\">$interNum</span>\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                      <span class=\"token builtin class-name\">echo</span> a task has <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">#            sleep $TOTALTIMES</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                 <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>             <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>awk 统计例子如下所示：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">NODES</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span> <span class=\"token number\">100</span> <span class=\"token number\">125</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">INTERFACE</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">RANGE</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">TOTALTIMES</span><span class=\"token operator\">=</span><span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">ROUTEPROTO</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span><span class=\"token variable\">$LD_LIBRARY_PATH</span>:bin/</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">IFS</span></span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> -en <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\b\">\\b</span>\"</span><span class=\"token variable\">)</span></span><span class=\"token comment\">#注意这里 \\n 前面没有空格</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">interNum</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;INTERFACE<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">range</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;RANGE<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">size</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;NODES<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">proto</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$&#123;ROUTEPROTO<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token assign-left variable\">pname</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token variable\">$proto</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token assign-left variable\">pname</span><span class=\"token operator\">=</span><span class=\"token string\">\"VBF实验结果\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token assign-left variable\">resFile</span><span class=\"token operator\">=</span><span class=\"token string\">\"VBF\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token assign-left variable\">pname</span><span class=\"token operator\">=</span><span class=\"token string\">\"CORRP实验结果\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token assign-left variable\">resFile</span><span class=\"token operator\">=</span><span class=\"token string\">\"CORRP\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token assign-left variable\">pname</span><span class=\"token operator\">=</span><span class=\"token string\">\"HH VBF实验结果\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token assign-left variable\">resFile</span><span class=\"token operator\">=</span><span class=\"token string\">\"HH-VBF\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token assign-left variable\">pname</span><span class=\"token operator\">=</span><span class=\"token string\">\"o orrp实验结果\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token assign-left variable\">resFile</span><span class=\"token operator\">=</span><span class=\"token string\">\"ORRP\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token assign-left variable\">pname</span><span class=\"token operator\">=</span><span class=\"token string\">\"vorrp实验结果\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token assign-left variable\">resFile</span><span class=\"token operator\">=</span><span class=\"token string\">\"VORR\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    <span class=\"token assign-left variable\">pname</span><span class=\"token operator\">=</span><span class=\"token string\">\"R-orrp实验结果\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                    <span class=\"token assign-left variable\">resFile</span><span class=\"token operator\">=</span><span class=\"token string\">\"RORR\"</span>                   </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">esac</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token comment\">#echo $RANGE\"m 范围 -\"$size\"节点 -\"$interNum\"interfaceNum-\"$TOTALTIMES\"S\"--$pname</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token comment\">#cat $RANGE\"m 范围 -\"$size\"节点 -\"$interNum\"interfaceNum-\"$TOTALTIMES\"S\"--$&#123;pname&#125; | awk '&#123;if ($8!=\"-nan\")&#123;sum+=$5;size=$2+2;n+=1;delay+=$6;cost+=$7;path+=$8&#125;&#125; END &#123;print \"Pdr=\",sum/n,\"reachable =\",n/NR,\"energyCost=\",cost*size/n,\"avgCost=\",cost/n,\"pathLength=\",path/n,\"delay=\",delay/n,\"\\n\",sum/n,\"\\t\",n/NR,\"\\t\",cost*size/n,\"\\t\",cost/n\"\\t\",path/n,\"\\t\",delay/n&#125;'</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token function\">cat</span> <span class=\"token variable\">$RANGE</span><span class=\"token string\">\"m范围-\"</span><span class=\"token variable\">$size</span><span class=\"token string\">\"节点-\"</span><span class=\"token variable\">$interNum</span><span class=\"token string\">\"interfaceNum-\"</span><span class=\"token variable\">$TOTALTIMES</span><span class=\"token string\">\"S\"</span>--<span class=\"token variable\">$&#123;pname&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'&#123;if($8!=\"-nan\")&#123;sum+=$5;size=$2+2;n+=1;delay+=$6;cost+=$7;path+=$8&#125;&#125; END &#123;print size-2,\"\\t\",sum/n,\"\\t\",n/NR,\"\\t\",cost*size/n,\"\\t\",cost/n\"\\t\",path/n,\"\\t\",delay/n&#125;'</span><span class=\"token operator\">>></span><span class=\"token variable\">$&#123;resFile&#125;</span>.txt</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token comment\">#echo a task has done</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token builtin class-name\">echo</span> a task has <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">IFS</span></span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> -en <span class=\"token string\">\" <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\t\">\\t</span>\"</span><span class=\"token variable\">)</span></span><span class=\"token comment\">#注意这里 \\n 前面有个空格</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"end\"</span></pre></td></tr></table></figure><h4 id=\"gnuplot绘制结果图\"><a class=\"anchor\" href=\"#gnuplot绘制结果图\">#</a> gnuplot 绘制结果图</h4>\n<p>我们可以采用类似于这样的脚本来绘制图像</p>\n<pre><code>set style line 80 lt rgb &quot;#000000&quot; lw 5\nset style line 81 lt 0  # dashed\nset style line 81 lt rgb &quot;#000000&quot;  # grey\nset grid back linestyle 81\nset ytics 0.1\nset xtics 5\nset style line 1 lt rgb &quot;#00A000&quot; lw 2 pt 9 pointsize 2\nset style line 2 lt rgb &quot;#A00000&quot; lw 2 pt 11 pointsize 2\nset style line 3 lt rgb &quot;#5060D0&quot; lw 2 pt 1 pointsize 2\nset style line 4 lt rgb &quot;#F25900&quot; lw 2 pt 2 pointsize 2\nset style line 5 lt rgb &quot;#A00000&quot; lw 1 pt 8 pointsize 2\nset style line 6 lt rgb &quot;#00A000&quot; lw 1 pt 2 pointsize 2\nset style line 7 lt rgb &quot;#5060D0&quot; lw 1 pt 4 pointsize 2\nset style line 8 lt rgb &quot;#F25900&quot; lw 1 pt 6 pointsize 2\n\n\n#set output &quot;.pdf&quot;\nset xlabel &quot;Numbers of nodes&quot; font &quot;,20&quot;\nset ylabel &quot;Packet delivery ratio(%)&quot; font &quot;,20&quot; offset 1.5,0,0\nset key at 85,0.4 font &quot;,20&quot; height 0.9 width 0.5 spacing 1\nset key box \nset xrange [40:90]\nset yrange [0:1]\nplot  &quot;0.5-20-15-orrp2d.txt&quot; u 1:2 title &quot;RR&quot; w lp ls 2, &quot;0.5-20-15-o-orrp.txt&quot; u 1:2 title &quot;ORRP&quot; w lp ls 1,  &quot;0.5-20-15-R-ORR.txt&quot; u 1:2 title &quot;  R-ORR&quot; w lp ls 7, &quot;v-orrp.txt&quot; u 1:2 title &quot;  V-ORR&quot; w lp ls 8\nset terminal postscript eps color solid linewidth 2 &quot;Helvetica&quot; 20\nset output &quot;pdr.eps&quot;\nreplot\nset output\n</code></pre>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/gnuplot%E7%BB%98%E5%9B%BE%E4%BE%8B%E5%AD%90.jpg\" alt=\"绘图例子\" /></p>\n",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/8.ns3%20wifi%E8%AE%BE%E5%A4%87%E5%AE%9A%E5%90%91%E5%8F%91%E9%80%81%E7%9A%84%E5%AE%9E%E7%8E%B0/",
            "url": "http://jluyeyu.com/ns3/8.ns3%20wifi%E8%AE%BE%E5%A4%87%E5%AE%9A%E5%90%91%E5%8F%91%E9%80%81%E7%9A%84%E5%AE%9E%E7%8E%B0/",
            "title": "8.ns3 wifi设备定向发送的实现",
            "date_published": "2022-11-02T02:00:00.000Z",
            "content_html": "<h2 id=\"8ns3-wifi设备定向发送的实现\"><a class=\"anchor\" href=\"#8ns3-wifi设备定向发送的实现\">#</a> 8.ns3 wifi 设备定向发送的实现</h2>\n<p>在本节中，将介绍 <code>ns3</code>  中 wifi 设备定向发送的实现方案</p>\n<h3 id=\"起因\"><a class=\"anchor\" href=\"#起因\">#</a> 起因</h3>\n<p>由于研究需求，需要用到节点具有定向发送，全向接收的功能，但 ns3 自带的功能没有定向实现，所以就写了一种定向的实现方法。</p>\n<h3 id=\"修改思路\"><a class=\"anchor\" href=\"#修改思路\">#</a> 修改思路</h3>\n<p>第一想法是修改天线模块的代码，使其完成定向的功能，但是看了以下源码，感觉实现难度较大，修改比较困难，故 <code>pass</code>  了<br />\n第二想法是修改物理层或者数据链路层，在节点收到数据包时，底层判断发送节点的位置与接收节点的位置，只接收从指定方向传来的数据包，从而实现定向接收的功能。</p>\n<p>于是就开始找数据发送的函数，与数据接收的处理函数，<br />\n最终发现在 <code>yans-wifi-channel.cc</code>  里发现有 <code>send</code>  函数和 <code>receive</code>  函数<br />\n <code>yans-wifi-channel.cc</code> :</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token class-name\">YansWifiChannel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Send</span> <span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span>YansWifiPhy<span class=\"token operator\">></span> sender<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> WifiPpdu<span class=\"token operator\">></span> ppdu<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> txPowerDbm<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token function\">NS_LOG_FUNCTION</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&lt;&lt;</span> sender <span class=\"token operator\">&lt;&lt;</span> ppdu <span class=\"token operator\">&lt;&lt;</span> txPowerDbm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> senderMobility <span class=\"token operator\">=</span> sender<span class=\"token operator\">-></span><span class=\"token function\">GetMobility</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token function\">NS_ASSERT</span> <span class=\"token punctuation\">(</span>senderMobility <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>PhyList<span class=\"token double-colon punctuation\">::</span>const_iterator i <span class=\"token operator\">=</span> m_phyList<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> m_phyList<span class=\"token punctuation\">.</span><span class=\"token function\">end</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sender <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>           <span class=\"token comment\">//For now don't account for inter channel interference nor channel bonding</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetChannelNumber</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> sender<span class=\"token operator\">-></span><span class=\"token function\">GetChannelNumber</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>               <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>             <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>           Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> receiverMobility <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetMobility</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">GetObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>           Time delay <span class=\"token operator\">=</span> m_delay<span class=\"token operator\">-></span><span class=\"token function\">GetDelay</span> <span class=\"token punctuation\">(</span>senderMobility<span class=\"token punctuation\">,</span> receiverMobility<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>           <span class=\"token keyword\">double</span> rxPowerDbm <span class=\"token operator\">=</span> m_loss<span class=\"token operator\">-></span><span class=\"token function\">CalcRxPower</span> <span class=\"token punctuation\">(</span>txPowerDbm<span class=\"token punctuation\">,</span> senderMobility<span class=\"token punctuation\">,</span> receiverMobility<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>           <span class=\"token function\">NS_LOG_DEBUG</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"propagation: txPower=\"</span> <span class=\"token operator\">&lt;&lt;</span> txPowerDbm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"dbm, rxPower=\"</span> <span class=\"token operator\">&lt;&lt;</span> rxPowerDbm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"dbm, \"</span> <span class=\"token operator\">&lt;&lt;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                         <span class=\"token string\">\"distance=\"</span> <span class=\"token operator\">&lt;&lt;</span> senderMobility<span class=\"token operator\">-></span><span class=\"token function\">GetDistanceFrom</span> <span class=\"token punctuation\">(</span>receiverMobility<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"m, delay=\"</span> <span class=\"token operator\">&lt;&lt;</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>           Ptr<span class=\"token operator\">&lt;</span>WifiPpdu<span class=\"token operator\">></span> copy <span class=\"token operator\">=</span> <span class=\"token function\">Copy</span> <span class=\"token punctuation\">(</span>ppdu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>           Ptr<span class=\"token operator\">&lt;</span>NetDevice<span class=\"token operator\">></span> dstNetDevice <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDevice</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>           <span class=\"token keyword\">uint32_t</span> dstNode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dstNetDevice <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>               dstNode <span class=\"token operator\">=</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>             <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>           <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>               dstNode <span class=\"token operator\">=</span> dstNetDevice<span class=\"token operator\">-></span><span class=\"token function\">GetNode</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetId</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>             <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>           <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ScheduleWithContext</span> <span class=\"token punctuation\">(</span>dstNode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                                           delay<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>YansWifiChannel<span class=\"token double-colon punctuation\">::</span>Receive<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                                           <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> copy<span class=\"token punctuation\">,</span> rxPowerDbm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre> <span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre> <span class=\"token class-name\">YansWifiChannel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Receive</span> <span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span>YansWifiPhy<span class=\"token operator\">></span> phy<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span>WifiPpdu<span class=\"token operator\">></span> ppdu<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> rxPowerDbm<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   <span class=\"token function\">NS_LOG_FUNCTION</span> <span class=\"token punctuation\">(</span>phy <span class=\"token operator\">&lt;&lt;</span> ppdu <span class=\"token operator\">&lt;&lt;</span> rxPowerDbm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>   <span class=\"token comment\">// Do no further processing if signal is too weak</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>   <span class=\"token comment\">// Current implementation assumes constant RX power over the PPDU duration</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>rxPowerDbm <span class=\"token operator\">+</span> phy<span class=\"token operator\">-></span><span class=\"token function\">GetRxGain</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> phy<span class=\"token operator\">-></span><span class=\"token function\">GetRxSensitivity</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>       <span class=\"token function\">NS_LOG_INFO</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Received signal too weak to process: \"</span> <span class=\"token operator\">&lt;&lt;</span> rxPowerDbm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" dBm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>       <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>   RxPowerWattPerChannelBand rxPowerW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>   rxPowerW<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">make_pair</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token function\">DbmToW</span> <span class=\"token punctuation\">(</span>rxPowerDbm <span class=\"token operator\">+</span> phy<span class=\"token operator\">-></span><span class=\"token function\">GetRxGain</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//dummy band for YANS</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>   phy<span class=\"token operator\">-></span><span class=\"token function\">StartReceivePreamble</span> <span class=\"token punctuation\">(</span>ppdu<span class=\"token punctuation\">,</span> rxPowerW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>阅读源码可以发现， <code>ns3</code>  中发送数据包的流程如下，遍历与发送数据包的节点物理层 ( <code>YanWifiPhy</code> ) 相连的节点。根据每个邻居节点与发送节点之间的距离和衰减模型中定义的公式来计算衰减。然后回调 <code>receive</code>  函数，来判断衰减后是否可以被接收。这为我们的想法提供了很好的条件。因为发送和接收节点的位置信息是可以由 <code>MobilityModel</code>  得到的，而控制是否接收该数据包，也可以通过修改衰减或者之间控制是否进行回调来解决。</p>\n<h3 id=\"第一版代码\"><a class=\"anchor\" href=\"#第一版代码\">#</a> 第一版代码</h3>\n<p>所以自然而然的，第一版定向天线的代码就出来了<br />\n只需要在 send 函数里，计算以下发送节点与接收节点之间形成的方向向量与自定义的坐标轴之间的夹角，然后，控制指定方向内的向量衰竭结果不变，其余方向的衰减结果减去一个大值即可。即通过衰减来实现其他方向的节点无法收到数据</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">YansWifiChannel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Send</span> <span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span>YansWifiPhy<span class=\"token operator\">></span> sender<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> WifiPpdu<span class=\"token operator\">></span> ppdu<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> txPowerDbm<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">NS_LOG_FUNCTION</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&lt;&lt;</span> sender <span class=\"token operator\">&lt;&lt;</span> ppdu <span class=\"token operator\">&lt;&lt;</span> txPowerDbm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> senderMobility <span class=\"token operator\">=</span> sender<span class=\"token operator\">-></span><span class=\"token function\">GetMobility</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">NS_ASSERT</span> <span class=\"token punctuation\">(</span>senderMobility <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>PhyList<span class=\"token double-colon punctuation\">::</span>const_iterator i <span class=\"token operator\">=</span> m_phyList<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> m_phyList<span class=\"token punctuation\">.</span><span class=\"token function\">end</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sender <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token comment\">//For now don't account for inter channel interference nor channel bonding</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetChannelNumber</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> sender<span class=\"token operator\">-></span><span class=\"token function\">GetChannelNumber</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>              <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> receiverMobility <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetMobility</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">GetObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          Time delay <span class=\"token operator\">=</span> m_delay<span class=\"token operator\">-></span><span class=\"token function\">GetDelay</span> <span class=\"token punctuation\">(</span>senderMobility<span class=\"token punctuation\">,</span> receiverMobility<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token keyword\">double</span> rxPowerDbm <span class=\"token operator\">=</span> m_loss<span class=\"token operator\">-></span><span class=\"token function\">CalcRxPower</span> <span class=\"token punctuation\">(</span>txPowerDbm<span class=\"token punctuation\">,</span> senderMobility<span class=\"token punctuation\">,</span> receiverMobility<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token function\">NS_LOG_DEBUG</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"propagation: txPower=\"</span> <span class=\"token operator\">&lt;&lt;</span> txPowerDbm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"dbm, rxPower=\"</span> <span class=\"token operator\">&lt;&lt;</span> rxPowerDbm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"dbm, \"</span> <span class=\"token operator\">&lt;&lt;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                        <span class=\"token string\">\"distance=\"</span> <span class=\"token operator\">&lt;&lt;</span> senderMobility<span class=\"token operator\">-></span><span class=\"token function\">GetDistanceFrom</span> <span class=\"token punctuation\">(</span>receiverMobility<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"m, delay=\"</span> <span class=\"token operator\">&lt;&lt;</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token comment\">//motified by yeyu</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token comment\">// 发送节点的位置</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          Vector sendVector<span class=\"token operator\">=</span>senderMobility<span class=\"token operator\">-></span><span class=\"token function\">GetPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          Vector sendVelocityVector<span class=\"token operator\">=</span>senderMobility<span class=\"token operator\">-></span><span class=\"token function\">GetVelocity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token comment\">// 接收节点的位置</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          Vector receiverVector<span class=\"token operator\">=</span>receiverMobility<span class=\"token operator\">-></span><span class=\"token function\">GetPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          Vector receiverVelocityVector<span class=\"token operator\">=</span>receiverMobility<span class=\"token operator\">-></span><span class=\"token function\">GetVelocity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          <span class=\"token function\">NS_LOG_INFO</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送节点坐标:\"</span><span class=\"token operator\">&lt;&lt;</span>sendVector<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"  速度矢量:\"</span><span class=\"token operator\">&lt;&lt;</span>sendVelocityVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token function\">NS_LOG_INFO</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"接收节点坐标:\"</span><span class=\"token operator\">&lt;&lt;</span>receiverVector<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"  速度矢量:\"</span><span class=\"token operator\">&lt;&lt;</span>receiverVelocityVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>         <span class=\"token comment\">// double angel=atan(receiverVector.x-sendVector.x,receiverVector.y-sendVector.y);</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>         <span class=\"token keyword\">double</span> tan<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>receiverVector<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>sendVector<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>receiverVector<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>sendVector<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token keyword\">double</span> angel<span class=\"token operator\">=</span><span class=\"token function\">atan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>receiverVector<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>sendVector<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>receiverVector<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>sendVector<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          angel<span class=\"token operator\">=</span>angel<span class=\"token operator\">*</span><span class=\"token number\">180</span><span class=\"token operator\">/</span>M_PI<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>angel<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            angel<span class=\"token operator\">=</span>angel<span class=\"token operator\">+</span><span class=\"token number\">360</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          <span class=\"token keyword\">double</span> angelLimit<span class=\"token operator\">=</span>sender<span class=\"token operator\">-></span><span class=\"token function\">getAngel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          <span class=\"token keyword\">int</span> canSend<span class=\"token operator\">=</span><span class=\"token function\">NondirectionalLoss</span><span class=\"token punctuation\">(</span>angel<span class=\"token punctuation\">,</span>angelLimit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>          <span class=\"token function\">NS_LOG_INFO</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tan:\"</span><span class=\"token operator\">&lt;&lt;</span>tan<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" angel: \"</span><span class=\"token operator\">&lt;&lt;</span>angel<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" canSend:\"</span><span class=\"token operator\">&lt;&lt;</span>canSend<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"angel limit:\"</span><span class=\"token operator\">&lt;&lt;</span> angelLimit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          <span class=\"token comment\">// 上下左右，每个方向 2*theta 度的接收角 (theta&lt;45)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>         <span class=\"token comment\">// rxPowerDbm=rxPowerDbm-NondirectionalLoss(angel,5);</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>canSend<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token function\">NS_LOG_INFO</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不在指定方向内，跳过\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          <span class=\"token comment\">//motified by yeyu</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>WifiPpdu<span class=\"token operator\">></span> copy <span class=\"token operator\">=</span> <span class=\"token function\">Copy</span> <span class=\"token punctuation\">(</span>ppdu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>NetDevice<span class=\"token operator\">></span> dstNetDevice <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetDevice</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>          <span class=\"token keyword\">uint32_t</span> dstNode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dstNetDevice <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>              dstNode <span class=\"token operator\">=</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>              dstNode <span class=\"token operator\">=</span> dstNetDevice<span class=\"token operator\">-></span><span class=\"token function\">GetNode</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetId</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>          <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ScheduleWithContext</span> <span class=\"token punctuation\">(</span>dstNode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                                          delay<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>YansWifiChannel<span class=\"token double-colon punctuation\">::</span>Receive<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                                          <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> copy<span class=\"token punctuation\">,</span> rxPowerDbm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>其中  <code>NondirectionalLoss</code>  是自定义的控制接收角度的函数，规定向下为 0 度，逆时针方向增长，angel 范围 0-360 度，theta 是上下左右四个方向接收角度的一半</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">NondirectionalLoss</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> angel<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> theta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>theta<span class=\"token operator\">&lt;</span>angel <span class=\"token operator\">&amp;&amp;</span> angel <span class=\"token operator\">&lt;</span><span class=\"token number\">90</span><span class=\"token operator\">-</span>theta<span class=\"token punctuation\">)</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token operator\">+</span>theta<span class=\"token operator\">&lt;</span>angel <span class=\"token operator\">&amp;&amp;</span> angel<span class=\"token operator\">&lt;</span><span class=\"token number\">180</span><span class=\"token operator\">-</span>theta<span class=\"token punctuation\">)</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token number\">180</span><span class=\"token operator\">+</span>theta<span class=\"token operator\">&lt;</span>angel <span class=\"token operator\">&amp;&amp;</span> angel<span class=\"token operator\">&lt;</span><span class=\"token number\">270</span><span class=\"token operator\">-</span>theta<span class=\"token punctuation\">)</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token number\">270</span><span class=\"token operator\">+</span>theta<span class=\"token operator\">&lt;</span>angel <span class=\"token operator\">&amp;&amp;</span> angel<span class=\"token operator\">&lt;</span><span class=\"token number\">360</span><span class=\"token operator\">-</span>theta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">999999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这样修改完之后，确实可以定向发送，但是存在一个问题，所有的节点都是这样。没法单独设置单个节点。显然不能满足需求。于是接下来需要进一步修改。</p>\n<h3 id=\"改进方案\"><a class=\"anchor\" href=\"#改进方案\">#</a> 改进方案</h3>\n<p>观察 send 函数，可以发现它是遍历 <code>YansWifiPhy</code> , 大胆猜测，每个节点都有与之对应的 <code>YansWifiPhy</code> 。经过验证确实如此。<br />\n那么下面的任务就简单了，修改 <code>YansWifiPhy</code>  的源码，添加几个自定义的变量，对外提供对应的 <code>get,set</code>  函数。就可以修改指定节点的发送范围。</p>\n<p>但是又出现了新的问题，如何获得单个节点的 <code>YansWifiPhy</code>  呢？<br />\n由于 <code>ns3</code>  封装的很好，不提供对单个节点 <code>YansWifiPhy</code>  的访问。<br />\n一个想法是找到绑定 <code>node</code>  与 <code>YansWifiPhy</code>  的地方，自己提供对外访问的方法。<br />\n于是就找到了 <code>YansWifiHelper</code> , 从源码可以看出，就是这了，每个 <code>node</code>  都有与之对应的 <code>YansWifiPhyHelper</code> 。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Ptr<span class=\"token operator\">&lt;</span>WifiPhy<span class=\"token operator\">></span> <span class=\"token class-name\">YansWifiPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">></span> node<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span>NetDevice<span class=\"token operator\">></span> device<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>YansWifiPhy<span class=\"token operator\">></span> phy <span class=\"token operator\">=</span> m_phy<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>YansWifiPhy<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>ErrorRateModel<span class=\"token operator\">></span> error <span class=\"token operator\">=</span> m_errorRateModel<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ErrorRateModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  phy<span class=\"token operator\">-></span><span class=\"token function\">SetErrorRateModel</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_frameCaptureModel<span class=\"token punctuation\">.</span><span class=\"token function\">IsTypeIdSet</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>FrameCaptureModel<span class=\"token operator\">></span> capture <span class=\"token operator\">=</span> m_frameCaptureModel<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>FrameCaptureModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      phy<span class=\"token operator\">-></span><span class=\"token function\">SetFrameCaptureModel</span> <span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_preambleDetectionModel<span class=\"token punctuation\">.</span><span class=\"token function\">IsTypeIdSet</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>PreambleDetectionModel<span class=\"token operator\">></span> capture <span class=\"token operator\">=</span> m_preambleDetectionModel<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>PreambleDetectionModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      phy<span class=\"token operator\">-></span><span class=\"token function\">SetPreambleDetectionModel</span> <span class=\"token punctuation\">(</span>capture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  phy<span class=\"token operator\">-></span><span class=\"token function\">SetChannel</span> <span class=\"token punctuation\">(</span>m_channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  phy<span class=\"token operator\">-></span><span class=\"token function\">SetDevice</span> <span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">return</span> phy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>那么接下来的事情就很简单了，在 <code>YansWifiHelper</code>  里添加一个存储 <code>YansWifiPhy</code>  的 <code>vector</code> , 在 <code>send</code>  函数里将获得的 <code>YansWifiPhy</code>  添加到 <code>vector</code>  里，对外提供 <code>get方法</code> 。<br />\n理论上这样就可以了。但是事情并不像想象中的那么简单。<br />\n这样改完之后，并没有什么效果<br />\n经过一番查找。最后发现， <code>YansWifiHelper</code>  是继承 <code>WifiHelper</code>  的， <code>YansWifiHelper</code>  中的 <code>Create</code>  方法是由 <code>WifiHelper</code>  中的 <code>install</code>  方法调用的，并且返回的是 <code>YansWifyPhy</code>  的父类 <code>WifiPhy</code> 。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NetDeviceContainer</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">WifiHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> WifiPhyHelper <span class=\"token operator\">&amp;</span>phyHelper<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                     <span class=\"token keyword\">const</span> WifiMacHelper <span class=\"token operator\">&amp;</span>macHelper<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                     NodeContainer<span class=\"token double-colon punctuation\">::</span>Iterator first<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                     NodeContainer<span class=\"token double-colon punctuation\">::</span>Iterator last<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  NetDeviceContainer devices<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>NodeContainer<span class=\"token double-colon punctuation\">::</span>Iterator i <span class=\"token operator\">=</span> first<span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> last<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">></span> node <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>WifiNetDevice<span class=\"token operator\">></span> device <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>WifiNetDevice<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">auto</span> it <span class=\"token operator\">=</span> wifiStandards<span class=\"token punctuation\">.</span><span class=\"token function\">find</span> <span class=\"token punctuation\">(</span>m_standard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>it <span class=\"token operator\">==</span> wifiStandards<span class=\"token punctuation\">.</span><span class=\"token function\">end</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token function\">NS_FATAL_ERROR</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Selected standard is not defined!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token keyword\">return</span> devices<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>it<span class=\"token operator\">-></span>second<span class=\"token punctuation\">.</span>phyStandard <span class=\"token operator\">>=</span> WIFI_PHY_STANDARD_80211n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>HtConfiguration<span class=\"token operator\">></span> htConfiguration <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HtConfiguration<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          device<span class=\"token operator\">-></span><span class=\"token function\">SetHtConfiguration</span> <span class=\"token punctuation\">(</span>htConfiguration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>it<span class=\"token operator\">-></span>second<span class=\"token punctuation\">.</span>phyStandard <span class=\"token operator\">>=</span> WIFI_PHY_STANDARD_80211ac<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>it<span class=\"token operator\">-></span>second<span class=\"token punctuation\">.</span>phyBand <span class=\"token operator\">!=</span> WIFI_PHY_BAND_2_4GHZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>VhtConfiguration<span class=\"token operator\">></span> vhtConfiguration <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>VhtConfiguration<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          device<span class=\"token operator\">-></span><span class=\"token function\">SetVhtConfiguration</span> <span class=\"token punctuation\">(</span>vhtConfiguration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>it<span class=\"token operator\">-></span>second<span class=\"token punctuation\">.</span>phyStandard <span class=\"token operator\">>=</span> WIFI_PHY_STANDARD_80211ax<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>HeConfiguration<span class=\"token operator\">></span> heConfiguration <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HeConfiguration<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          device<span class=\"token operator\">-></span><span class=\"token function\">SetHeConfiguration</span> <span class=\"token punctuation\">(</span>heConfiguration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>WifiRemoteStationManager<span class=\"token operator\">></span> manager <span class=\"token operator\">=</span> m_stationManager<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>WifiRemoteStationManager<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>WifiMac<span class=\"token operator\">></span> mac <span class=\"token operator\">=</span> macHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>WifiPhy<span class=\"token operator\">></span> phy <span class=\"token operator\">=</span> phyHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token comment\">//add by yeyu</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      m_phyVector<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>phy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token comment\">//add by yeyu</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      mac<span class=\"token operator\">-></span><span class=\"token function\">SetAddress</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Mac48Address</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Allocate</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      mac<span class=\"token operator\">-></span><span class=\"token function\">ConfigureStandard</span> <span class=\"token punctuation\">(</span>m_standard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      phy<span class=\"token operator\">-></span><span class=\"token function\">ConfigureStandardAndBand</span> <span class=\"token punctuation\">(</span>it<span class=\"token operator\">-></span>second<span class=\"token punctuation\">.</span>phyStandard<span class=\"token punctuation\">,</span> it<span class=\"token operator\">-></span>second<span class=\"token punctuation\">.</span>phyBand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      device<span class=\"token operator\">-></span><span class=\"token function\">SetMac</span> <span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      device<span class=\"token operator\">-></span><span class=\"token function\">SetPhy</span> <span class=\"token punctuation\">(</span>phy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      device<span class=\"token operator\">-></span><span class=\"token function\">SetRemoteStationManager</span> <span class=\"token punctuation\">(</span>manager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      node<span class=\"token operator\">-></span><span class=\"token function\">AddDevice</span> <span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>it<span class=\"token operator\">-></span>second<span class=\"token punctuation\">.</span>phyStandard <span class=\"token operator\">>=</span> WIFI_PHY_STANDARD_80211ax<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>m_obssPdAlgorithm<span class=\"token punctuation\">.</span><span class=\"token function\">IsTypeIdSet</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>ObssPdAlgorithm<span class=\"token operator\">></span> obssPdAlgorithm <span class=\"token operator\">=</span> m_obssPdAlgorithm<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ObssPdAlgorithm<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          device<span class=\"token operator\">-></span><span class=\"token function\">AggregateObject</span> <span class=\"token punctuation\">(</span>obssPdAlgorithm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          obssPdAlgorithm<span class=\"token operator\">-></span><span class=\"token function\">ConnectWifiNetDevice</span> <span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      devices<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token function\">NS_LOG_DEBUG</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"node=\"</span> <span class=\"token operator\">&lt;&lt;</span> node <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", mob=\"</span> <span class=\"token operator\">&lt;&lt;</span> node<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">GetObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token comment\">// Aggregate a NetDeviceQueueInterface object if a RegularWifiMac is installed</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>RegularWifiMac<span class=\"token operator\">></span> rmac <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">DynamicCast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>RegularWifiMac<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rmac<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>NetDeviceQueueInterface<span class=\"token operator\">></span> ndqi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>          BooleanValue qosSupported<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>          PointerValue ptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>WifiMacQueue<span class=\"token operator\">></span> wmq<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>          Ptr<span class=\"token operator\">&lt;</span>WifiAckPolicySelector<span class=\"token operator\">></span> ackSelector<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>          rmac<span class=\"token operator\">-></span><span class=\"token function\">GetAttributeFailSafe</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"QosSupported\"</span><span class=\"token punctuation\">,</span> qosSupported<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>qosSupported<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>              ndqi <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateObjectWithAttributes</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NetDeviceQueueInterface<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"NTxQueues\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                                                                          <span class=\"token function\">UintegerValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>              rmac<span class=\"token operator\">-></span><span class=\"token function\">GetAttributeFailSafe</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"BE_Txop\"</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>              ackSelector <span class=\"token operator\">=</span> m_ackPolicySelector<span class=\"token punctuation\">[</span>AC_BE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>WifiAckPolicySelector<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>              ackSelector<span class=\"token operator\">-></span><span class=\"token function\">SetQosTxop</span> <span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>              ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">SetAckPolicySelector</span> <span class=\"token punctuation\">(</span>ackSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>              wmq <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetWifiMacQueue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>              ndqi<span class=\"token operator\">-></span><span class=\"token function\">GetTxQueue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">ConnectQueueTraces</span> <span class=\"token punctuation\">(</span>wmq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>              rmac<span class=\"token operator\">-></span><span class=\"token function\">GetAttributeFailSafe</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"BK_Txop\"</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>              ackSelector <span class=\"token operator\">=</span> m_ackPolicySelector<span class=\"token punctuation\">[</span>AC_BK<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>WifiAckPolicySelector<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>              ackSelector<span class=\"token operator\">-></span><span class=\"token function\">SetQosTxop</span> <span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>              ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">SetAckPolicySelector</span> <span class=\"token punctuation\">(</span>ackSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>              wmq <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetWifiMacQueue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>              ndqi<span class=\"token operator\">-></span><span class=\"token function\">GetTxQueue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">ConnectQueueTraces</span> <span class=\"token punctuation\">(</span>wmq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>              rmac<span class=\"token operator\">-></span><span class=\"token function\">GetAttributeFailSafe</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"VI_Txop\"</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>              ackSelector <span class=\"token operator\">=</span> m_ackPolicySelector<span class=\"token punctuation\">[</span>AC_VI<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>WifiAckPolicySelector<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>              ackSelector<span class=\"token operator\">-></span><span class=\"token function\">SetQosTxop</span> <span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>              ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">SetAckPolicySelector</span> <span class=\"token punctuation\">(</span>ackSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>              wmq <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetWifiMacQueue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>              ndqi<span class=\"token operator\">-></span><span class=\"token function\">GetTxQueue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">ConnectQueueTraces</span> <span class=\"token punctuation\">(</span>wmq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>              rmac<span class=\"token operator\">-></span><span class=\"token function\">GetAttributeFailSafe</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"VO_Txop\"</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>              ackSelector <span class=\"token operator\">=</span> m_ackPolicySelector<span class=\"token punctuation\">[</span>AC_VO<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>WifiAckPolicySelector<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>              ackSelector<span class=\"token operator\">-></span><span class=\"token function\">SetQosTxop</span> <span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>              ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">SetAckPolicySelector</span> <span class=\"token punctuation\">(</span>ackSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>              wmq <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>QosTxop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetWifiMacQueue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>              ndqi<span class=\"token operator\">-></span><span class=\"token function\">GetTxQueue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">ConnectQueueTraces</span> <span class=\"token punctuation\">(</span>wmq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>              ndqi<span class=\"token operator\">-></span><span class=\"token function\">SetSelectQueueCallback</span> <span class=\"token punctuation\">(</span>m_selectQueueCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>          <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>              ndqi <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NetDeviceQueueInterface<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>              rmac<span class=\"token operator\">-></span><span class=\"token function\">GetAttributeFailSafe</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Txop\"</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>              wmq <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">Get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Txop<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetWifiMacQueue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>              ndqi<span class=\"token operator\">-></span><span class=\"token function\">GetTxQueue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">ConnectQueueTraces</span> <span class=\"token punctuation\">(</span>wmq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>          device<span class=\"token operator\">-></span><span class=\"token function\">AggregateObject</span> <span class=\"token punctuation\">(</span>ndqi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  <span class=\"token keyword\">return</span> devices<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>那么现在就很简单了，直接修改 <code>WifiPhy</code> , <code>WifiHelper</code> <br />\n <code>WifiPhy.h</code>  中添加下面代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   *motified by yeyu</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">//0&lt;m_angel&lt;45</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">double</span> m_angel<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">void</span> <span class=\"token function\">setAngel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> angel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">double</span> <span class=\"token function\">getAngel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token comment\">//motified by yeyu</span></pre></td></tr></table></figure><p><code>WifiPhy.cc</code>  中添加下面代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//add by yeyu</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">WifiPhy</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setAngel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> angel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    m_angel<span class=\"token operator\">=</span>angel<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token class-name\">WifiPhy</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getAngel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> m_angel<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//add by yeyu</span></pre></td></tr></table></figure><p><code>WifiHelper.h</code>  中添加下面代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//add by yeyu</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//add by yeyu</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   *add by yeyu,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   * 存储节点与 Ptr&lt;WiFiPhy > 的对应关系</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">mutable</span> std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>Ptr<span class=\"token operator\">&lt;</span>WifiPhy<span class=\"token operator\">>></span> m_phyVector<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>WifiHelper.cc</code>  中添加下面代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//add by yeyu</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>Ptr<span class=\"token operator\">&lt;</span>WifiPhy<span class=\"token operator\">>></span> <span class=\"token class-name\">WifiHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getPhyVector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> m_phyVector<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//add by yeyu</span></pre></td></tr></table></figure><p><code>WifiHelper.cc</code>  中的 send 函数修改如下</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NetDeviceContainer</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">WifiHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> WifiPhyHelper <span class=\"token operator\">&amp;</span>phyHelper<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                     <span class=\"token keyword\">const</span> WifiMacHelper <span class=\"token operator\">&amp;</span>macHelper<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                     NodeContainer<span class=\"token double-colon punctuation\">::</span>Iterator first<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                     NodeContainer<span class=\"token double-colon punctuation\">::</span>Iterator last<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token comment\">// 上面默认代码</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">//add by yeyu</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      m_phyVector<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>phy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\">//add by yeyu</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token comment\">// 下面是默认代码</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再加上 <code>YansWifiChannel</code>  里 <code>send</code>  函数里的修改，即可以实现自己想要的定向发送功能</p>\n",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/9.ns3%20Config%E7%B1%BBAPI%E8%AF%B4%E6%98%8E/",
            "url": "http://jluyeyu.com/ns3/9.ns3%20Config%E7%B1%BBAPI%E8%AF%B4%E6%98%8E/",
            "title": "9.ns3 Config类API说明",
            "date_published": "2022-11-02T02:00:00.000Z",
            "content_html": "<h2 id=\"9ns3-config类api说明\"><a class=\"anchor\" href=\"#9ns3-config类api说明\">#</a> 9.ns3 Config 类 API 说明</h2>\n<p>在本节中，将介绍 <code>ns3</code>  中 <code>Config</code>  类的使用， <code>它可以用来配置仿真参数和跟踪，在统计结果方面十分有用</code></p>\n<p>源文件位置：<br />\n <code>src/core/model/config.h</code> <br />\n <code>config.cc</code></p>\n<h3 id=\"函数原型\"><a class=\"anchor\" href=\"#函数原型\">#</a> 函数原型</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Connect</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> CallbackBase <span class=\"token operator\">&amp;</span>cb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>此函数将尝试查找与输入路径匹配的所有跟踪源，然后将输入回调连接到它们，以使回调在跟踪事件通知时接收到一个额外的上下文字符串。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ConnectWithoutContext</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> CallbackBase <span class=\"token operator\">&amp;</span>cb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>此函数将尝试查找与输入路径匹配的所有跟踪源，然后将输入回调连接到它们。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Disconnect</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> CallbackBase <span class=\"token operator\">&amp;</span>cb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>此函数撤消Config <span class=\"token double-colon punctuation\">::</span> ConnectWithContext的工作。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DisconnectWithoutContext</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> CallbackBase <span class=\"token operator\">&amp;</span>cb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>此函数撤消Config <span class=\"token double-colon punctuation\">::</span> Connect的工作。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Ptr<span class=\"token operator\">&lt;</span> Object <span class=\"token operator\">></span>   ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetRootNamespaceObject</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>请求的根命名空间对象</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">uint32_t</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetRootNamespaceObjectN</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>注册的根命名空间对象的数量。</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Config<span class=\"token double-colon punctuation\">::</span>MatchContainer  ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">LookupMatches</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>包含与输入路径匹配的所有对象的容器。</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RegisterRootNamespaceObject</span> <span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span> Object <span class=\"token operator\">></span> obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>每个根对象在路径匹配期间用作Config <span class=\"token double-colon punctuation\">::</span> Connect和Config <span class=\"token double-colon punctuation\">::</span> Set的路径的根。</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Reset</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    Reset the initial value of every attribute as well as the value of </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>       every global to what they were before any call to SetDefault <span class=\"token operator\">and</span> SetGlobal<span class=\"token punctuation\">.</span> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>将每个属性的初始值以及每个全局的值重置为在调用SetDefault和SetGlobal之前的值。</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> AttributeValue <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>此函数将尝试查找与输入路径匹配的属性，然后将其值设置为输入值。</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetDefault</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> AttributeValue <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>此方法覆盖匹配属性的初始值。 此方法不能失败：如果输入属性名称或值无效，它将崩溃。</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">bool</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetDefaultFailSafe</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> AttributeValue <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>如果值设置成功，则为<span class=\"token boolean\">true</span>，否则为<span class=\"token boolean\">false</span>。</pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetGlobal</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> AttributeValue <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>此方法等同于GlobalValue <span class=\"token double-colon punctuation\">::</span> Bind</pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">bool</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetGlobalFailSafe</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> AttributeValue <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>如果可以设置GlobalValue，则为<span class=\"token boolean\">true</span>。</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">void</span>    ns3<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">UnregisterRootNamespaceObject</span> <span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span> Object <span class=\"token operator\">></span> obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>此函数撤消Config <span class=\"token double-colon punctuation\">::</span> RegisterRootNamespaceObject的工作。</pre></td></tr></table></figure><h3 id=\"用法实例\"><a class=\"anchor\" href=\"#用法实例\">#</a> 用法实例</h3>\n<h4 id=\"connect函数的用法\"><a class=\"anchor\" href=\"#connect函数的用法\">#</a> Connect 函数的用法：</h4>\n<p>第二个参数是回调函数，回调函数的参数根据第一个参数的属性来设置。需要注意的是，第二个参数所设置的回调函数，其第一个参数是 string 类型的 context。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Connect</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/Mac/MacTx\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>DevTxTrace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Connect</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/Mac/MacRx\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>DevRxTrace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Connect</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/Phy/State/RxOk\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>PhyRxOkTrace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Connect</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/Phy/State/RxError\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>PhyRxErrorTrace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Connect</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/Phy/State/Tx\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>PhyTxTrace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Connect</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/Phy/State/State\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>PhyStateTrace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">DevTxTrace</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g_verbose<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" TX p: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">DevRxTrace</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g_verbose<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" RX p: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">PhyRxOkTrace</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string context<span class=\"token punctuation\">,</span> Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> snr<span class=\"token punctuation\">,</span> WifiMode mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">WifiPreamble</span> preamble<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g_verbose<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"PHYRXOK mode=\"</span> <span class=\"token operator\">&lt;&lt;</span> mode <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" snr=\"</span> <span class=\"token operator\">&lt;&lt;</span> snr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>packet <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"connectwithoutcontext的用法\"><a class=\"anchor\" href=\"#connectwithoutcontext的用法\">#</a> ConnectWithoutContext 的用法：</h4>\n<p>第二个参数是回调函数，参数的设置依赖与第一个参数设置的属性。与 Connect 函数不同的是，这里的回调函数的第一个参数没有 string 类型的 context。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ConnectWithoutContext</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/0/DeviceList/*/Phy/MonitorSnifferRx\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>MonitorSniffRx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MonitorSniffRx</span> <span class=\"token punctuation\">(</span>Ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> Packet<span class=\"token operator\">></span> packet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint16_t</span> channelFreqMhz<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                     <span class=\"token keyword\">uint16_t</span> channelNumber<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> rate<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                     WifiPreamble preamble<span class=\"token punctuation\">,</span> WifiTxVector txVector<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                     <span class=\"token keyword\">struct</span> <span class=\"token class-name\">mpduInfo</span> aMpdu<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">signalNoiseDbm</span> signalNoise<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  g_samples<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  g_signalDbmAvg <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>signalNoise<span class=\"token punctuation\">.</span>signal <span class=\"token operator\">-</span> g_signalDbmAvg<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> g_samples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  g_noiseDbmAvg <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>signalNoise<span class=\"token punctuation\">.</span>noise <span class=\"token operator\">-</span> g_noiseDbmAvg<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> g_samples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  g_rate <span class=\"token operator\">=</span> rate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  g_channelNumber <span class=\"token operator\">=</span> channelNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"setglobal的用法\"><a class=\"anchor\" href=\"#setglobal的用法\">#</a> SetGlobal 的用法：</h4>\n<p>这与 SetGlobalFailSafe 函数的用法类似。设置全局值。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetGlobal</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"SimulatorImplementationType\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span>m_simulatorType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"setdefault函数的用法\"><a class=\"anchor\" href=\"#setdefault函数的用法\">#</a> SetDefault 函数的用法：</h4>\n<p>这与 SetDefaultFailSafe 函数用法类似。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetDefault</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::WifiRemoteStationManager::RtsCtsThreshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// disable fragmentation</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetDefault</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::WifiRemoteStationManager::FragmentationThreshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"2200\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"set函数的用法\"><a class=\"anchor\" href=\"#set函数的用法\">#</a> Set 函数的用法：</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/Slot\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>              <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>slot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/Sifs\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>              <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>sifs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/AckTimeout\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>              <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>ackTimeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/CtsTimeout\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>ctsTimeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/Rifs\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>              <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>rifs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/BasicBlockAckTimeout\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>             <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>basicBlockAckTimeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/CompressedBlockAckTimeout\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>             <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>compressedBlockAckTimeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/7.ns3%20%E6%8D%9F%E5%A4%B1%E6%A8%A1%E5%9E%8B%E4%BF%AE%E6%94%B9/",
            "url": "http://jluyeyu.com/ns3/7.ns3%20%E6%8D%9F%E5%A4%B1%E6%A8%A1%E5%9E%8B%E4%BF%AE%E6%94%B9/",
            "title": "7.ns3 损失模型修改",
            "date_published": "2022-11-02T00:18:52.000Z",
            "content_html": "<h2 id=\"7ns3-损失模型修改\"><a class=\"anchor\" href=\"#7ns3-损失模型修改\">#</a> 7.ns3 损失模型修改</h2>\n<p>在本节中，将介绍 <code>ns3</code>  中 wifi 损失模型模型修改 / 新增所需的一些内容，</p>\n<h3 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h3>\n<p>信道损失模型的源码位置如下</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ns-3.xx/src/propagation/model</pre></td></tr></table></figure><p>可以将自己的定义的信道损失模型添加到该路径，更改 <code>wscript</code>  文件，然后重新 <code>build</code>  一下 <code>ns3</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./waf build</pre></td></tr></table></figure><p (4\\pi=\"\" d)^2L=\"\">主要更改<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>o</mi><mi>C</mi><mi>a</mi><mi>l</mi><mi>c</mi><mi>R</mi><mi>x</mi><mi>P</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">DoCalcRxPower</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 函数即可<br />\n无线默认的损失模型是P_r=\\frac{P_tG_tG_r\\lambda^2}</p>\n<ul>\n<li>Gt: tx gain (unit-less)</li>\n<li>Gr: rx gain (unit-less)</li>\n<li>Pt: tx power (W)</li>\n<li>d: distance (m)</li>\n<li>L: system loss</li>\n<li>lambda: wavelength (m)<br />\n 我改成了水下光学传播损耗模型中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mo>=</mo><msub><mi>P</mi><mi>t</mi></msub><msup><mi>e</mi><mrow><mo>−</mo><mi>c</mi><mo stretchy=\"false\">(</mo><mi>λ</mi><mo stretchy=\"false\">)</mo><mi>d</mi></mrow></msup><msub><mi>η</mi><mi>r</mi></msub><msub><mi>η</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_r=P_te^{-c(\\lambda)d}\\eta_r\\eta_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0824399999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">λ</span><span class=\"mclose mtight\">)</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>η</mi><mi>r</mi></msub><mo separator=\"true\">,</mo><msub><mi>η</mi><mi>t</mi></msub><mtext>表示发射机的发射效率和接收机的接收效率</mtext></mrow><annotation encoding=\"application/x-tex\">\\eta_r,\\eta_t表示发射机的发射效率和接收机的接收效率</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">射</span><span class=\"mord cjk_fallback\">机</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">射</span><span class=\"mord cjk_fallback\">效</span><span class=\"mord cjk_fallback\">率</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord cjk_fallback\">接</span><span class=\"mord cjk_fallback\">收</span><span class=\"mord cjk_fallback\">机</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">接</span><span class=\"mord cjk_fallback\">收</span><span class=\"mord cjk_fallback\">效</span><span class=\"mord cjk_fallback\">率</span></span></span></span><br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo stretchy=\"false\">(</mo><mi>λ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">c(\\lambda)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">λ</span><span class=\"mclose\">)</span></span></span></span> 表示海水的衰减系数</li>\n</ul>\n<p>以下是我定义的损失模型<br />\n <code>MyPropagationLossModel.h</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*************************************************************************</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    > File Name: myLossModel.h</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    > Author: yeyu</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    > Mail: 554377661@qq.com </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    > Created Time: Sun 17 Jan 2021 01:20:27 AM PST</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> ************************************************************************/</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/propagation-loss-model.h\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/propagation-cache.h\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">namespace</span> ns3 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyPropagationLossModel</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">PropagationLossModel</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token comment\">//m_cLamada 海水的总衰减系数</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token keyword\">double</span> m_cLamada<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token comment\">//m_nt 表示通信系统中发射机的发射效率，m_nr 表示通信系统中接收机的接收效率。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token keyword\">double</span> m_nt<span class=\"token punctuation\">,</span>m_nr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   * \\brief Get the type ID.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   * \\return the object TypeId</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">static</span> TypeId <span class=\"token function\">GetTypeId</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token function\">MyPropagationLossModel</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">// 设置发送接收效率 (&lt;=1)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">SetSendReceiveEfficiency</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> nt<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> nr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token comment\">//get 发送接收效率</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">double</span> <span class=\"token function\">GetReceiveEfficiency</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">double</span> <span class=\"token function\">GetSendEfficiency</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  * set CLamada</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">SetCLamada</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> cLamada<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  * get CLamada</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">double</span> <span class=\"token function\">GetCLamada</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>   * \\param frequency (Hz)</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   *</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>   * Set the carrier frequency used in the Friis model </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>   * calculation.</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">SetFrequency</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>   * \\param systemLoss (dimension-less)</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>   *</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>   * Set the system loss used by the Friis propagation model.</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">SetSystemLoss</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> systemLoss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>   * \\param minLoss the minimum loss (dB)</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>   *</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>   * no matter how short the distance, the total propagation loss (in</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>   * dB) will always be greater or equal than this value </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">SetMinLoss</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> minLoss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>   * \\return the minimum loss.</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token keyword\">double</span> <span class=\"token function\">GetMinLoss</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>   * \\returns the current frequency (Hz)</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">double</span> <span class=\"token function\">GetFrequency</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>   * \\returns the current system loss (dimension-less)</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token keyword\">double</span> <span class=\"token function\">GetSystemLoss</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>   * \\brief Copy constructor</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>   *</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>   * Defined and unimplemented to avoid misuse</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  <span class=\"token function\">MyPropagationLossModel</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> MyPropagationLossModel <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>   * \\brief Copy constructor</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>   *</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>   * Defined and unimplemented to avoid misuse</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>   * \\returns</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  MyPropagationLossModel <span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> MyPropagationLossModel <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">double</span> <span class=\"token function\">DoCalcRxPower</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> txPowerDbm<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                                Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> a<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                                Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int64_t</span> <span class=\"token function\">DoAssignStreams</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int64_t</span> stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>   * Transforms a Dbm value to Watt</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>   * \\param dbm the Dbm value</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>   * \\return the Watts</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  <span class=\"token keyword\">double</span> <span class=\"token function\">DbmToW</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> dbm<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>   * Transforms a Watt value to Dbm</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>   * \\param w the Watt value</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>   * \\return the Dbm</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  <span class=\"token keyword\">double</span> <span class=\"token function\">DbmFromW</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> w<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>  <span class=\"token keyword\">double</span> m_lambda<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//!&lt; the carrier wavelength</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  <span class=\"token keyword\">double</span> m_frequency<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//!&lt; the carrier frequency</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token keyword\">double</span> m_systemLoss<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//!&lt; the system loss</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  <span class=\"token keyword\">double</span> m_minLoss<span class=\"token punctuation\">;</span>       <span class=\"token comment\">//!&lt; the minimum loss</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//end of namespace ns3</span></pre></td></tr></table></figure><p><code>MyPropagationLossModel.cc</code>  的具体实现</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MyPropagationLossModel.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/log.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/mobility-model.h\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/boolean.h\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/double.h\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/string.h\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/pointer.h\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">namespace</span> ns3 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">NS_LOG_COMPONENT_DEFINE</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"MyLossModel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">NS_OBJECT_ENSURE_REGISTERED</span> <span class=\"token punctuation\">(</span>MyPropagationLossModel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>TypeId</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetTypeId</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">static</span> TypeId tid <span class=\"token operator\">=</span> <span class=\"token function\">TypeId</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::MyPropagationLossModel\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">SetParent</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>PropagationLossModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">SetGroupName</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Propagation\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">AddConstructor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>MyPropagationLossModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">AddAttribute</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Frequency\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token string\">\"The carrier frequency (in Hz) at which propagation occurs  (default is 5.15 GHz).\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                   <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5.150e9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                   <span class=\"token function\">MakeDoubleAccessor</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>MyPropagationLossModel<span class=\"token double-colon punctuation\">::</span>SetFrequency<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                                       <span class=\"token operator\">&amp;</span>MyPropagationLossModel<span class=\"token double-colon punctuation\">::</span>GetFrequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                   <span class=\"token generic-function\"><span class=\"token function\">MakeDoubleChecker</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">AddAttribute</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"SystemLoss\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"The system loss\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                   <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                   <span class=\"token function\">MakeDoubleAccessor</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>MyPropagationLossModel<span class=\"token double-colon punctuation\">::</span>m_systemLoss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token generic-function\"><span class=\"token function\">MakeDoubleChecker</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">AddAttribute</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"MinLoss\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                   <span class=\"token string\">\"The minimum value (dB) of the total loss, used at short ranges. Note: \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                   <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                   <span class=\"token function\">MakeDoubleAccessor</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>MyPropagationLossModel<span class=\"token double-colon punctuation\">::</span>SetMinLoss<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                                       <span class=\"token operator\">&amp;</span>MyPropagationLossModel<span class=\"token double-colon punctuation\">::</span>GetMinLoss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token generic-function\"><span class=\"token function\">MakeDoubleChecker</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    .AddAttribute(\"CLamada\",</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                  \"CLamada is a double value\",</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                  DoubleValue(0.056),</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                  MakeDoubleAccessor (&amp;MyPropagationLossModel::m_cLamada,</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                      &amp;MyPropagationLossModel::GetCLamada),</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                  MakeDoubleChecker&lt;double> ()</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            )</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">return</span> tid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MyPropagationLossModel</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    m_cLamada<span class=\"token operator\">=</span><span class=\"token number\">0.056</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    m_nr<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    m_nt<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token comment\">// 设置发送接收效率 (&lt;=1)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetSendReceiveEfficiency</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> nt<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> nr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    m_nt<span class=\"token operator\">=</span>nt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    m_nr<span class=\"token operator\">=</span>nr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetSendEfficiency</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">return</span> m_nt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetReceiveEfficiency</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">return</span> m_nr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  * set CLamada</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetCLamada</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> cLamada<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    m_cLamada<span class=\"token operator\">=</span>cLamada<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  * get CLamada</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetCLamada</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">return</span> m_cLamada<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetSystemLoss</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> systemLoss<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>  m_systemLoss <span class=\"token operator\">=</span> systemLoss<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token keyword\">double</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetSystemLoss</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  <span class=\"token keyword\">return</span> m_systemLoss<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetMinLoss</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> minLoss<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  m_minLoss <span class=\"token operator\">=</span> minLoss<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">double</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetMinLoss</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  <span class=\"token keyword\">return</span> m_minLoss<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetFrequency</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> frequency<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  m_frequency <span class=\"token operator\">=</span> frequency<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">double</span> C <span class=\"token operator\">=</span> <span class=\"token number\">299792458.0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// speed of light in vacuum</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>  m_lambda <span class=\"token operator\">=</span> C <span class=\"token operator\">/</span> frequency<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">double</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetFrequency</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  <span class=\"token keyword\">return</span> m_frequency<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token keyword\">double</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DbmToW</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> dbm<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>  <span class=\"token keyword\">double</span> mw <span class=\"token operator\">=</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">pow</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">,</span>dbm<span class=\"token operator\">/</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>  <span class=\"token keyword\">return</span> mw <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token keyword\">double</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DbmFromW</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> w<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>  <span class=\"token keyword\">double</span> dbm <span class=\"token operator\">=</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">log10</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">*</span> <span class=\"token number\">1000.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  <span class=\"token keyword\">return</span> dbm<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token keyword\">double</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DoCalcRxPower</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> txPowerDbm<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                                          Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> a<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>                                          Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>  <span class=\"token function\">NS_LOG_WARN</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this a test model\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>  <span class=\"token keyword\">double</span> distance <span class=\"token operator\">=</span> a<span class=\"token operator\">-></span><span class=\"token function\">GetDistanceFrom</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>      <span class=\"token keyword\">return</span> txPowerDbm <span class=\"token operator\">-</span> m_minLoss<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>  <span class=\"token keyword\">double</span> myLossDb<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token function\">log10</span> <span class=\"token punctuation\">(</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>M_E<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>m_cLamada<span class=\"token operator\">*</span>distance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token comment\">//NS_LOG_WARN (\"distance=\" &lt;&lt; distance&lt;&lt; \"m, loss=\" &lt;&lt; myLossDb &lt;&lt;\"dB\");</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token comment\">//return txPowerDbm - std::max (myLossDb, m_minLoss);</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>  <span class=\"token keyword\">double</span> tmp<span class=\"token operator\">=</span>txPowerDbm <span class=\"token operator\">-</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">max</span> <span class=\"token punctuation\">(</span>myLossDb<span class=\"token punctuation\">,</span> m_minLoss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>  <span class=\"token function\">NS_LOG_WARN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"发射dbm=\"</span><span class=\"token operator\">&lt;&lt;</span>txPowerDbm <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\", distance=\"</span> <span class=\"token operator\">&lt;&lt;</span>distance<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"m, loss=\"</span> <span class=\"token operator\">&lt;&lt;</span> myLossDb <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"dB\"</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" 实际损失为:\"</span><span class=\"token operator\">&lt;&lt;</span> tmp<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"dB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>  <span class=\"token keyword\">return</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token keyword\">int64_t</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token class-name\">MyPropagationLossModel</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DoAssignStreams</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int64_t</span> stream<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用方法<br />\n修改 <code>wscript</code>  文件，将 <code>MyPropagationLossModel.h</code>  和 <code>MyPropagationLossModel.cc</code>  添加到对应的位置<br />\n然后重新编译</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 先导入已经编译好的头文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/MyPropagationLossModel.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/applications-module.h\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  WifiMacHelper wifiMac<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  wifiMac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::AdhocWifiMac\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  YansWifiPhyHelper wifiPhy <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  YansWifiChannelHelper wifiChannel<span class=\"token operator\">=</span><span class=\"token class-name\">YansWifiChannelHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>MyPropagationLossModel<span class=\"token operator\">></span> lossModel<span class=\"token operator\">=</span><span class=\"token generic-function\"><span class=\"token function\">CreateObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>MyPropagationLossModel<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  lossModel<span class=\"token operator\">-></span><span class=\"token function\">SetCLamada</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.398</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clamada:%f\\n\"</span><span class=\"token punctuation\">,</span>lossModel<span class=\"token operator\">-></span><span class=\"token function\">GetCLamada</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>YansWifiChannel<span class=\"token operator\">></span> myChannel<span class=\"token operator\">=</span>wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  myChannel<span class=\"token operator\">-></span><span class=\"token function\">SetPropagationLossModel</span><span class=\"token punctuation\">(</span>lossModel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">SetChannel</span> <span class=\"token punctuation\">(</span>myChannel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>结果展示<br />\n最后的结果都是 dbm，之前写错了，一直没改 ==<br />\n<img data-src=\"https://leanote.com/api/file/getImage?fileId=600ed99bab6441511b000340\" alt=\"图片标题\" /></p>\n",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/6.ns3%20wifi%20%E6%A8%A1%E5%9E%8B%E9%85%8D%E7%BD%AE/",
            "url": "http://jluyeyu.com/ns3/6.ns3%20wifi%20%E6%A8%A1%E5%9E%8B%E9%85%8D%E7%BD%AE/",
            "title": "6.wifi模型扩展",
            "date_published": "2022-11-01T07:18:52.000Z",
            "content_html": "<h2 id=\"6ns3-wifi模型配置\"><a class=\"anchor\" href=\"#6ns3-wifi模型配置\">#</a> 6.ns3 wifi 模型配置</h2>\n<p>在本节中，将介绍 <code>ns3</code>  中 wifi 模型扩展所需的一些内容，</p>\n<h3 id=\"using-the-wifinetdevice\"><a class=\"anchor\" href=\"#using-the-wifinetdevice\">#</a> Using the WifiNetDevice</h3>\n<p>使用底层 <code>ns3 API</code>  添加一个 <code>WifiNetDevice</code>  到节点上，必须创建一个 <code>WifiNetDevice</code>  实例，和许多构成的对象，以一种合适的方式绑定在一起（ <code>WifiNetDevice</code>  为未来的可扩展性，在某种程度上已经非常模块化）。在底层 api，这需要大约 20 行代码（ <code>ns3::WifiHelper::Install,ns3::YansWifiPhyHelper::Create</code> ）。一个信道 <code>WifiChannel</code>  必须被创建，也包含了一些构成的对象（请看 <code>ns3::YansWifiChannelHelper::Create</code> ）。</p>\n<p>然而，一些可用的帮助类可以使用，如果愿意使用默认值的话，添加设备和信道只用几行代码就能完成。当然也可以使用额外的 <code>api</code>  允许通过属性系统来改变默认值。</p>\n<p>接下来，我们描述创建一个 <code>WifiNetDevice</code>  从底层 <code>(WifiChannel)</code>  到设备层 <code>(WifiNetDevice)</code>  的通常的步骤。</p>\n<p>为了创建一个 <code>WifiNetDevice</code> ，用户主要需要配置五步：</p>\n<ol>\n<li>配置 <code>WifiChannel:WifiChannel</code>  关系到信号在相同的信道上从一个设备到另一个设备。 <code>WifiChannel</code>  主要的配置是传播损耗模型和传播延时模型。</li>\n<li>配置 <code>WifiPhy</code> ： <code>WifiPhy</code>  关系到从 <code>WifiChannel</code>  发送和接收无线信号。这里， <code>WifiPhy</code>  依赖于接收的信号的强度和噪声决定每一帧是否被成功解码。所以， <code>WifiPhy</code>  的主要配置是误码率模型，该模型就是最后计算基于信号的成功解码帧的概率。</li>\n<li>配置 <code>WifiMac</code> ：这一步更多的是与 <code>the architecture and device level</code>  有关。用户配置 <code>wifi architecture</code> （例如 <code>adhoc or ap-sta</code> ）和是否支持 <code>Qos（802.11e），HT（802.11n），VHT（802.11ac）</code> 特性。</li>\n<li>创建 <code>WifiDevice</code> : 在这一步，用户配置期望的 <code>wifi</code>  标准（例如 <code>802.11b,802.11g,802.11a,802.11n or 802.11ac</code> ）和速率控制算法。</li>\n<li>配置 <code>mobility</code> : 最后， <code>mobility</code>  模型通常需要在 <code>WifiNetDevice</code>  可用之前配置。</li>\n</ol>\n<h4 id=\"yanswifichannelhelper\"><a class=\"anchor\" href=\"#yanswifichannelhelper\">#</a> YansWifiChannelHelper</h4>\n<p><code>YansWifiChannelHelper</code>  具有一个不同寻常的名字。读者可能会疑惑为什么使用这样的名字。该模型是从 <code>yans simulator</code>  提取出来的，名字也是引用自它。该帮助类可以创建一个带有默认传播损耗模型 <code>（PropagationLoss）</code> 和传播延时模型 <code>（PropagationDelay）</code> 的 <code>WifiChannel</code> 。</p>\n<p>用户所使用的经典代码如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>YansWifiChannelHelper wifiChannelHelper <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiChannelHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Ptr<span class=\"token operator\">&lt;</span>WifiChannel<span class=\"token operator\">></span> wifiChannel <span class=\"token operator\">=</span> wifiChannelHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>特别的是，默认的信道模型使用的是 3 的指数的信道模型，所用的传播时延等于一个常数值，就是光速 <code>（ns3::ConstantSpeedPropagationDelayModel）</code> ，所用的传播损耗是基于一个默认的 <code>log distance model(ns3::LogDistancePropagationLossModel)</code> 。请注意，默认的 <code>log distance model is configured with a reference loss of 46.6777 dB at reference distance of 1m</code> 。 <code>The reference loss of 46.6777 dB was calculated using Friis propagation loss model at 5.15 GHz</code> . <code>The reference loss</code>  模型如果使用 <code>802.11b,802.11g,802.11n</code>  (由于它们工作在 <code>2.4GHZ</code> ) 必须被改变。</p>\n<p>注意上面在创建一个帮助对象和一个实际的仿真对象的区别。在 <code>ns3</code>  中，帮助对象（仅仅用于帮助 APP）是在栈（它们可以使用 new 操作符创建和使用 deleted 销毁）中创建的。然而，实际的 <code>ns3</code>  对象继承自 <code>ns3::Object</code>  类，并且分配一个智能指针。</p>\n<p>下面的两个方法在配置 <code>YansWifiChannelHelper</code>  是有用的：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>• YansWifiChannelHelper<span class=\"token double-colon punctuation\">::</span>AddPropagationLoss adds a PropagationLossModel to a chain of PropagationLossModel</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>• YansWifiChannelHelper<span class=\"token double-colon punctuation\">::</span>SetPropagationDelay sets a PropagationDelayModel</pre></td></tr></table></figure><h4 id=\"yanswifiphyhelper\"><a class=\"anchor\" href=\"#yanswifiphyhelper\">#</a> YansWifiPhyHelper</h4>\n<p>物理层设备（基类 <code>ns3::WifiPhy</code> ）在 <code>ns3</code>  中是与 <code>ns3::WifiChannel</code>  相连接的。我们需要为 <code>YansWifiChannel</code>  创建合适的 <code>WifiPhy</code>  对象。这里 <code>YansWifiPhyHelper</code>  就可以胜任这个工作。</p>\n<p><code>YansWifiPhyHelper</code>  类配置了一个对象工厂来创建一个 <code>YansWifiPhy</code>  实例，并添加一些其他的对象到该实例中，包括可能补充的 <code>ErrorRateModel</code>  误码率模型和指向 <code>MobilityModel</code>  移动模型的指针。典型的用户代码如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>YansWifiPhyHelper wifiPhyHelper <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wifiPhyHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetChannel</span> <span class=\"token punctuation\">(</span>wifiChannel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>YansWifiPhyHelper</code>  默认配置 <code>NistErrorRateModel（ns3::NistErrorRateModel）</code> 误码率模型。你可以使用 <code>YansWifiPhyHelper::SetErrorRateModel</code>  方法更改误码率模型。</p>\n<p>可选的是，如果 <code>pcap</code>  跟踪记录是需要的话，用户可以使用下面的代码使得 <code>pcap</code>  跟踪可用：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">YansWifiPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetPcapDataLinkType</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">enum</span> <span class=\"token class-name\">SupportedPcapDataLinkTypes</span> dlt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    ns3支持<span class=\"token number\">802.11</span>的RadioTap和Prism轨迹扩展。</pre></td></tr></table></figure><p>注意，我们还没有实际创建一个 <code>WifiPhy</code>  对象；我们只是准备了告诉 <code>YansWifiPhyHelper</code>  与之连接的信道。 <code>Phy</code>  对象会在下一步创建。</p>\n<p><code>802.11n/ac PHY</code>  层可以使用长 <code>800ns</code>  或者短 <code>400ns</code>  的 <code>OFDM guard intervals</code> 。为了配置这个参数，可以使用下面的一行的代码（这个例子中，使用的是 <code>short guard interval</code>  的支持）：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wifiPhyHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ShortGuardEnabled\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>更多的是， <code>802.11</code>  提供了一种可选的模式 <code>（GreenField mode）</code> 来减少 <code>preamble durations</code> （前沿持续时间），并且这也是唯一一种与 <code>802.11n</code>  设备兼容的模式。可以使用下面的代码启用这种模式：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wifiPhyHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"GreenfieldEnabled\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">BooleanValue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>802.11nPHY</code>  层可以支持 20（默认）或者 40MHZ 信道带宽， <code>802.11ac PHY</code>  层可以使用 20，40，80（默认），160MHZ 信道带宽。由于信道带宽值被 <code>WifiHelper::SetStandard</code>  重写，可以使用下面 <code>Config::Set</code>  代码在安装后进行配置：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WifiHelper wifi <span class=\"token operator\">=</span> <span class=\"token class-name\">WifiHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetStandard</span> <span class=\"token punctuation\">(</span>WIFI_PHY_STANDARD_80211ac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetRemoteStationManager</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantRateWifiManager\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"DataMode\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                  <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VHtMcs9\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ControlMode\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VHtMcs9\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    VhtWifiMacHelper mac <span class=\"token operator\">=</span> <span class=\"token class-name\">VhtWifiMacHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">//Install PHY and MAC</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Ssid ssid <span class=\"token operator\">=</span> <span class=\"token function\">Ssid</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3-wifi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    mac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::StaWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">\"ActiveProbing\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    NetDeviceContainer staDevice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    staDevice <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>phy<span class=\"token punctuation\">,</span> mac<span class=\"token punctuation\">,</span> wifiStaNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    mac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ApWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    NetDeviceContainer apDevice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    apDevice <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>phy<span class=\"token punctuation\">,</span> mac<span class=\"token punctuation\">,</span> wifiApNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">//Once install is done, we overwrite the channel width value</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">//(一旦安装之后，我们可以重写信道带宽)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Phy/ChannelWidth\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"wifimachelper\"><a class=\"anchor\" href=\"#wifimachelper\">#</a> WifiMacHelper</h4>\n<p>下一步是配置 MAC 模型。我们使用 <code>WifiMacHelper</code>  来完成。 <code>WifiMacHelper</code>  可以完成 <code>MAC low</code>  模型和 <code>MAC high</code>  模型。用户必须决定采用哪种模型： <code>802.11/WMM-style Qos</code> ， <code>802.11n-style Hight throughput（HT）</code> ， <code>802.11ac-style Very High throughput（VHT）</code></p>\n<h5 id=\"nqoswifimachelper-and-qoswifimachelper\"><a class=\"anchor\" href=\"#nqoswifimachelper-and-qoswifimachelper\">#</a> NqosWifiMacHelper and QosWifiMacHelper</h5>\n<p><code>ns3::NqosWifiMacHelper</code>  和 <code>ns3::QosWifiMacHelper</code>  均可以配置一个对象工厂来创建一个 <code>ns3::WifiMac</code>  实例。它们用来配置像 MAC 类型的参数。<br />\n前者 <code>ns3::NqosWifiMacHelper</code>  不支持以下类型的 MAC 实例的创建： <code>802.11e/WMM-style QoS，802.11n-style High throughput (HT)，802.11ac-style Very High throughput (VHT)</code> 。<br />\n例如下面的用户代码配置了一个不支持 <code>QOs</code>  和 <code>HT</code>  的 <code>MAC</code>  类型实例，并且没有 <code>AP</code> ，仅有 <code>STA</code>  的一个基础设施网络， <code>SSID</code>  设置为 <code>ns-3-ssid</code> :</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NqosWifiMacHelper wifiMacHelper <span class=\"token operator\">=</span> <span class=\"token class-name\">NqosWifiMacHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Ssid ssid <span class=\"token operator\">=</span> <span class=\"token function\">Ssid</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns-3-ssid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    wifiMacHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::StaWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token string\">\"ActiveProbing\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>可以使用ns3<span class=\"token double-colon punctuation\">::</span>QosWifiMacHelper来代替ns3<span class=\"token double-colon punctuation\">::</span>NqosWifiMacHelper来创建一个支持Qos的MAC实例。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>下面的代码使用ns3<span class=\"token double-colon punctuation\">::</span>QosWifiMacHelper创建了一个支持Qos的AP：</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>QosWifiMacHelper wifiMacHelper <span class=\"token operator\">=</span> <span class=\"token class-name\">QosWifiMacHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    wifiMacHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ApWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token string\">\"BeaconGeneration\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">\"BeaconInterval\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>支持 Qos 的 MAC 模型可以工作在流量属于四种不同访问策略下： <code>AC_VO</code>  语音流， <code>AC_VI</code>  视频流， <code>AC_BE</code>  尽最大努力流， <code>AC_BK</code>  后台流。为了使 <code>MAC</code>  为 <code>MSDU</code>  决定一个合适的 <code>AC</code> ，转发到这些 <code>MAC</code>  层的包应该被使用一个 <code>TID（traffic id）</code> 的 <code>ns3::QosTag</code>  标记，否则该包将被属于 <code>AC_BE</code>  策略。</p>\n<p>为了创建一个 <code>ad-hoc MAC</code>  实例，简单的使用 <code>ns3::AdhocWifiMac</code>  代替 <code>ns3::StaWifiMac</code>  和 <code>ns3::ApWifiMac</code>  即可。</p>\n<h5 id=\"htwifimachelper\"><a class=\"anchor\" href=\"#htwifimachelper\">#</a> HtWifiMacHelper</h5>\n<p><code>ns3::HtWifiMacHelper</code>  配置一个对象工厂来创建一个 <code>ns3::WifiMac</code>  实例。它用于支持创建 <code>802.11n-style High throughput (HT)</code>  和支持 <code>QoS</code>  类型的 <code>MAC</code>  实例。特别的，该对象也可以用来设置：</p>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>1. 为了使用802.11n MSDU聚合特性，为特定的访问策略AC设置MSDU聚合</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>2. 可以设置像threshold（阈值）（块ACK机制应该被使用的包的数量）的块ACK参数和闲置超时。</pre></td></tr></table></figure><p>例如，下面的代码配置了一个 <code>HT MAC</code> ，不支持 <code>AP</code> ，支持 <code>STA</code> ， <code>QOS</code>  保证，聚合 <code>AC_VO</code> , 和 <code>AC_BE</code>  的块 <code>ACK</code> ，这样的基础设施网络，它的 <code>AP</code>  的 <code>SSID</code>  为 <code>ns-3-ssid</code> ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HtWifiMacHelper wifiMacHelper <span class=\"token operator\">=</span> <span class=\"token class-name\">HtWifiMacHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Ssid ssid <span class=\"token operator\">=</span> <span class=\"token function\">Ssid</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns-3-ssid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    wifiMacHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::StaWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token string\">\"ActiveProbing\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    wifiMacHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetMsduAggregatorForAc</span> <span class=\"token punctuation\">(</span>AC_VO<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ns3::MsduStandardAggregator\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token string\">\"MaxAmsduSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3839</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    wifiMacHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetBlockAckThresholdForAc</span> <span class=\"token punctuation\">(</span>AC_BE<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    wifiMacHelper<span class=\"token punctuation\">.</span><span class=\"token function\">SetBlockAckInactivityTimeoutForAc</span> <span class=\"token punctuation\">(</span>AC_BE<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个对象也可以使用 <code>ns3::QosWifiMacHelper</code>  以相同的方式进行设置。</p>\n<h5 id=\"vhtwifimachelper\"><a class=\"anchor\" href=\"#vhtwifimachelper\">#</a> VhtWifiMacHelper</h5>\n<p><code>ns3::VhtWifiMacHelper</code>  配置一个对象工厂来创建一个 <code>ns3::WifiMac</code>  实例。用于支持创建以下类型的 <code>MAC</code>  实例： <code>802.11ac-style Very High throughput (VHT)</code>  和支持  <code>QoS</code>  保证。这个对象与 <code>HtWifiMacHelper</code>  很相似。</p>\n<h4 id=\"wifihelper\"><a class=\"anchor\" href=\"#wifihelper\">#</a> WifiHelper</h4>\n<p>我们现在准备创建 <code>WifiNetDevices</code> . 首先，让我们创建一个默认设置的 <code>WifiHelper</code> ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WifiHelper wifiHelper <span class=\"token operator\">=</span> <span class=\"token class-name\">WifiHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这一步都做了什么呢？它默认设置 <code>802.11a WIFI</code>  标准，和设置 <code>ns3::ArfWifiManager</code>  作为 <code>RemoteStationManager</code> 。你可以通过调用 <code>WifiHelper::SetRemoteStationManager</code>  方法改变 <code>RemoteStationManager</code> 。为了改变采用的 <code>wifi</code>  标准，可以调用 <code>WifiHelper::SetStandard</code>  方法来设置想要的标准。</p>\n<p>现在，让我们使用上面所描述的对象 <code>wifiPhyHelper</code>  和 <code>wifiMacHelper</code> ，安装到在一系列节点 <code>c</code>  上的 <code>WifiNetDevices</code> ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NetDeviceContainer wifiContainer <span class=\"token operator\">=</span> <span class=\"token class-name\">WifiHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>wifiPhyHelper<span class=\"token punctuation\">,</span> wifiMacHelper<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这样就创建了一个 WifiNetDevice，它包含 WifiRemoteStationManager,WifiMac,WifiPhy（连接到匹配的 WifiChannel 上的）。<br />\nWifiHelper::SetStandard 方法设置了定义在已选的标准版本中的可变的默认的定时参数，可重写已经存在的或者已经配置过的值。为了改变已经给 WifiHelper::SetStandard 重写的参数，应该在安装后使用 Config::Set 来配置：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WifiHelper wifi <span class=\"token operator\">=</span> <span class=\"token class-name\">WifiHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetStandard</span> <span class=\"token punctuation\">(</span>WIFI_PHY_STANDARD_80211n_2_4GHZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetRemoteStationManager</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantRateWifiManager\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"DataMode\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                  <span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HtMcs7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ControlMode\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">StringValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HtMcs7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    HtWifiMacHelper mac <span class=\"token operator\">=</span> <span class=\"token class-name\">HtWifiMacHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">//Install PHY and MAC</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Ssid ssid <span class=\"token operator\">=</span> <span class=\"token function\">Ssid</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3-wifi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    mac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::StaWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token string\">\"ActiveProbing\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    NetDeviceContainer staDevice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    staDevice <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>phy<span class=\"token punctuation\">,</span> mac<span class=\"token punctuation\">,</span> wifiStaNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    mac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ApWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    NetDeviceContainer apDevice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    apDevice <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>phy<span class=\"token punctuation\">,</span> mac<span class=\"token punctuation\">,</span> wifiApNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">//Once install is done, we overwrite the standard timing values</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/Slot\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>slot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/Sifs\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>sifs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/AckTimeout\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/CtsTimeout\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/Rifs\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span><span class=\"token function\">MicroSeconds</span> <span class=\"token punctuation\">(</span>rifs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/BasicBlockAckTimeout\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">TimeValue</span> <span class=\"token punctuation\">(</span>Micr</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token class-name\">Config</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Set</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/NodeList/*/DeviceList/*/$ns3::WifiNetDevice/Mac/CompressedBlockAckTimeout\"</span><span class=\"token punctuation\">,</span> TimeValue</pre></td></tr></table></figure><p>有许多 ns3 属性可以被上面的 <code>helpers</code>  对象使用来改变默认的行为，例子脚本程序展示了如何改变默认行为。</p>\n<h5 id=\"mobility-configuration\"><a class=\"anchor\" href=\"#mobility-configuration\">#</a> Mobility configuration</h5>\n<p>最后，一个移动模型必须在 <code>wifi device</code>  上进行配置。移动模型被用于计算传播损耗和传播时延。在下一节中提供了两个例子。用户可以引用 <code>Mobility</code>  模块一章获取更多细节。</p>\n<h5 id=\"example-configuration\"><a class=\"anchor\" href=\"#example-configuration\">#</a> Example configuration</h5>\n<p><code>ns3</code>  提供了两个典型的配置 <code>wifi</code>  网络的例子程序 - 一个例子程序使用 <code>adhoc</code>  网络，一个例子程序使用基础设施网络。两个例子程序在 <code>examples/wireless</code>  目录（ <code>wifi-simple-adhoc.cc</code>  和  <code>wifi-simple-infra.cc</code> ）。鼓励用户学习 <code>examples/wireless</code>  目录下的例子。</p>\n<h5 id=\"adhoc-wifinetdevice-configuration\"><a class=\"anchor\" href=\"#adhoc-wifinetdevice-configuration\">#</a> AdHoc WifiNetDevice configuration</h5>\n<p>在这个例子中，我们创建了两个 adhoc 节点，配置了 <code>802.11a wifi</code>  设备。我们使用 <code>ns3::ConstantSpeedPropagationDelayModel</code>  作为传播延时模型，使用带有 3 的指数的 <code>ns3::LogDistancePropagationLossModel</code>  作为传播损耗模型。两个设备都配置 12Mbps 固定速率的 <code>ConstantRateWifiManager</code> 。最后，我们使用 <code>ns3::ListPositionAllocator</code>  手动放置节点位置：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token function\">phyMode</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"OfdmRate12Mbps\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    NodeContainer c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    c<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    WifiHelper wifi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetStandard</span> <span class=\"token punctuation\">(</span>WIFI_PHY_STANDARD_80211a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    YansWifiPhyHelper wifiPhy <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// ns-3 supports RadioTap and Prism tracing extensions for 802.11</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">SetPcapDataLinkType</span> <span class=\"token punctuation\">(</span>YansWifiPhyHelper<span class=\"token double-colon punctuation\">::</span>DLT_IEEE802_11_RADIO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    YansWifiChannelHelper wifiChannel<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">SetPropagationDelay</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantSpeedPropagationDelayModel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">AddPropagationLoss</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::LogDistancePropagationLossModel\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token string\">\"Exponent\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">SetChannel</span> <span class=\"token punctuation\">(</span>wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// Add a non-QoS upper mac, and disable rate control (i.e. ConstantRateWifiManager)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    NqosWifiMacHelper wifiMac <span class=\"token operator\">=</span> <span class=\"token class-name\">NqosWifiMacHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetRemoteStationManager</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantRateWifiManager\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token string\">\"DataMode\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span>phyMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token string\">\"ControlMode\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span>phyMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// Set it to adhoc mode</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    wifiMac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::AdhocWifiMac\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    NetDeviceContainer devices <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>wifiPhy<span class=\"token punctuation\">,</span> wifiMac<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// Configure mobility</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    MobilityHelper mobility<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    Ptr<span class=\"token operator\">&lt;</span>ListPositionAllocator<span class=\"token operator\">></span> positionAlloc <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ListPositionAllocator<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    positionAlloc<span class=\"token operator\">-></span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Vector</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    positionAlloc<span class=\"token operator\">-></span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Vector</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetPositionAllocator</span> <span class=\"token punctuation\">(</span>positionAlloc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetMobilityModel</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantPositionMobilityModel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    mobility<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// other set up (e.g. InternetStack, Application)Infrastructure (access point and clients) </span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">//  WifiNetDevice configuration</span></pre></td></tr></table></figure><p>这是一个典型的代码，展示了用户如何配置一个接入点 AP 和一系列客户端。在这个例子中，我们创建一个接入点和两个客户端。每一个节点配置 <code>802.11 b wifi</code>  设备：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token function\">phyMode</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"DsssRate1Mbps\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    NodeContainer ap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ap<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    NodeContainer sta<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    sta<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    WifiHelper wifi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetStandard</span> <span class=\"token punctuation\">(</span>WIFI_PHY_STANDARD_80211b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    YansWifiPhyHelper wifiPhy <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// ns-3 supports RadioTap and Prism tracing extensions for 802.11</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">SetPcapDataLinkType</span> <span class=\"token punctuation\">(</span>YansWifiPhyHelper<span class=\"token double-colon punctuation\">::</span>DLT_IEEE802_11_RADIO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    YansWifiChannelHelper wifiChannel<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// reference loss must be changed since 802.11b is operating at 2.4GHz</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">SetPropagationDelay</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantSpeedPropagationDelayModel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">AddPropagationLoss</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::LogDistancePropagationLossModel\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token string\">\"Exponent\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token string\">\"ReferenceLoss\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">40.0459</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">SetChannel</span> <span class=\"token punctuation\">(</span>wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// Add a non-QoS upper mac, and disable rate control</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    NqosWifiMacHelper wifiMac <span class=\"token operator\">=</span> <span class=\"token class-name\">NqosWifiMacHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetRemoteStationManager</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantRateWifiManager\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token string\">\"DataMode\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span>phyMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token string\">\"ControlMode\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span>phyMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// Setup the rest of the upper mac</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    Ssid ssid <span class=\"token operator\">=</span> <span class=\"token function\">Ssid</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"wifi-default\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// setup ap.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    wifiMac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ApWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    NetDeviceContainer apDevice <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>wifiPhy<span class=\"token punctuation\">,</span> wifiMac<span class=\"token punctuation\">,</span> ap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    NetDeviceContainer devices <span class=\"token operator\">=</span> apDevice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// setup sta.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    wifiMac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::StaWifiMac\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token string\">\"Ssid\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SsidValue</span> <span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token string\">\"ActiveProbing\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    NetDeviceContainer staDevice <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>wifiPhy<span class=\"token punctuation\">,</span> wifiMac<span class=\"token punctuation\">,</span> sta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    devices<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span>staDevice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">// Configure mobility</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    MobilityHelper mobility<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    Ptr<span class=\"token operator\">&lt;</span>ListPositionAllocator<span class=\"token operator\">></span> positionAlloc <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">CreateObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ListPositionAllocator<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    positionAlloc<span class=\"token operator\">-></span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Vector</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    positionAlloc<span class=\"token operator\">-></span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Vector</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    positionAlloc<span class=\"token operator\">-></span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Vector</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetPositionAllocator</span> <span class=\"token punctuation\">(</span>positionAlloc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetMobilityModel</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantPositionMobilityModel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    mobility<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>ap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    mobility<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>sta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\">// other set up (e.g. InternetStack, Application)</span></pre></td></tr></table></figure>",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/5.ns3%20wifi%E6%A8%A1%E5%9E%8B/",
            "url": "http://jluyeyu.com/ns3/5.ns3%20wifi%E6%A8%A1%E5%9E%8B/",
            "title": "5.ns3 wifi模型",
            "date_published": "2022-11-01T02:18:52.000Z",
            "content_html": "<h2 id=\"5ns3-wifi模型文档\"><a class=\"anchor\" href=\"#5ns3-wifi模型文档\">#</a> 5.ns3 wifi 模型文档</h2>\n<p>在本节中，将介绍 <code>ns3</code>  中 wifi 模型，</p>\n<h3 id=\"design-documentation\"><a class=\"anchor\" href=\"#design-documentation\">#</a> Design Documentation</h3>\n<p>ns3 节点 ( <code>nodes</code> ) 能够包含一系列网络设备（ <code>NetDevice</code> ）对象，就像实际的计算机包含单独的接口卡一样，例如，以太网卡，WiFi，蓝牙等。通过添加 <code>WifiNetDevice</code>  对象到 ns3 的节点（ <code>nodes</code> ）中，它就可以创建基于 <code>802.11</code>  的基础设施和 <code>adhoc</code>  网络模型。</p>\n<h4 id=\"overview-of-the-model\"><a class=\"anchor\" href=\"#overview-of-the-model\">#</a> Overview of the model</h4>\n<p><code>WifiNetDevice</code>  模型是一个基于 <code>IEEE 802.11</code>  标准的无线网络接口控制器。我们将会更加详细的看到它的细节，但只是简略的细节，ns3 提供了 <code>802.11</code>  模型的这些方面：</p>\n<pre><code>基本的802.11 DCF（Distributed coordination function）基础设施和adhoc模式\n802.11a 802.11b 802.11g 802.11n(包括2.4和5GHz带宽) 和802.11ac物理层\n延伸与802.11n的MSDU aggregation and MPDU aggregation ，同时支持两种聚合的结合\n延伸于802.11e的QoS-based EDCA and queueing\n使用不同的传播损耗模型和传播延迟模型的能力，请参见章（Propagation）传播获取更多细节\n不同的速率控制算法，包括Aarf,Arf,Cara,Onoe,Rraa,ConstantRate,Minstrel\n802.11s(mesh),该协议在其他章节有描述\n</code></pre>\n<p>在 <code>ns3</code>  中提供的一系列 <code>802.11</code>  模型提供了一个精确的 <code>802.11</code>  规范的 <code>MAC</code>  层，并提供了 <code>802.11a/b/g/n/ac</code>  规范的不那么慢的 <code>PHY</code>  层模型。</p>\n<p>在 <code>ns3</code> ，节点可以在不同的信道上有不同的 <code>WifiNetDevices</code> ，同时 <code>WifiNetDevices</code>  可以与其他的设备类型共存；这消除了在 <code>ns2</code>  中结构的限制。然而，现在，还不存在交叉信道干扰或耦合的模型。</p>\n<p><code>WifiNetDevices</code>  的源码在目录 <code>src/wifi</code>  下。</p>\n<p>代码的实现是模块化的，大约提供了四个级别的模型：</p>\n<pre><code>    1.PHY layer models\n    2.MAC low models: they implement DCF and EDCAF\n    3.MAC high models:they implement the MAC-level beacon generation, probing, and association state machines\n    4.可以被MAC low models使用的Rate control algorithms\n</code></pre>\n<p>下面，我们介绍每一层的概述。关于更多的细节稍候会讨论。</p>\n<p><strong>MAC high models</strong></p>\n<p>现在已有三个 <code>MAC high models</code> ，该模型提供了三个无线拓扑元素 ( <code>non-mesh,mesh equivalent</code> , 都是 <code>ns3::RegularWifiMac</code>  的子类，不再这里讨论它)： <code>Access Point(AP)(ns3::ApWifiMac),non-AP Station(STA)(ns3::StaWifiMac)</code> , 和独立于基础服务设备的 <code>STA（ns3::AdhocWifiMac）</code> .</p>\n<p>三种模型中最简单的是 <code>ns3::AdhocWifiMac</code> , 它实现了无任何种类的信标的产生，探测和关联的 <code>WIFI MAC</code> 。</p>\n<pre><code>     The ns3::StaWifiMac class implements an active probing and association state machine that handles automatic re-association whenever too many beacons are missed. Finally, ns3::ApWifiMac implements an AP that generates periodic beacons, and that accepts every attempt to associate.\n</code></pre>\n<p>这三种 <code>MAC high models</code>  共享同一个父类 <code>ns3::RegularWifiMac</code> , 它暴露出 <code>MAC</code>  配置的几个属性： <code>QosSupported</code>  属性，允许配置 <code>802.11e/WMM-STYPE QOS</code>  支持； <code>HtSupported</code>  属性，允许配置 <code>802.11n</code>  高吞吐量形式； <code>VhtSupported</code>  属性，允许配置 <code>802.11ac</code>  更高吞吐量样式支持。</p>\n<p><strong>MAC low layer</strong></p>\n<p><code>MAC low layer</code>  分为以下三个组件：</p>\n<pre><code>1. ns3::MacLow 该类管理 RTS/CTS/DATA/ACK交互。\n2. ns3::DcfManager和ns3::DcfState,实现了DCF和EDCAF功能。\n3. ns3::DcaTxop和ns3::EdcaTxopN,用于处理在需要的情况下的包队列，包分组，包重传等。The ns3::DcaTxop object is used high MACs that are not QoS-enabled,and for transmission of frames (e.g., of type Management) that the standard says should access the medium using the DCF. ns3::EdcaTxopN is is used by QoS-enabled high MACs and also performs 802.11n-style MSDU aggregation.\n</code></pre>\n<p><strong>Rate control algorithms</strong></p>\n<p>有几种 <code>MAC low layer</code>  使用的 <code>rate control algorithms</code> 。完整的可以使用的速率控制算法将会在一个单独的一节中提供。</p>\n<p><strong>PHY layer models</strong></p>\n<p><code>PHY</code>  层是在 <code>ns3::WifiPhy</code>  类中单独实现的。物理层模型的实现的完整的描述是在论文： <code>Yet Another Network Simulator</code>  中，基于 802.11b 的可用的结果的验证报告在 <code>techinical report</code>  中。</p>\n<h4 id=\"the-wifichannel-and-wifiphy-models\"><a class=\"anchor\" href=\"#the-wifichannel-and-wifiphy-models\">#</a> The WifiChannel and WifiPhy models</h4>\n<p>无线信道 <code>wifichannel</code>  可以使用一组 <code>ns3::WifiNetDevice</code>  网络接口连接在一起。 <code>ns3::WifiPhy</code>  对象是在 <code>wifinetdevice</code>  中的，用于接收从信道接收的数据比特。对于信道的传播模型，可以使用传播模块 <code>Propagation</code> 。<br />\n本节总结了误码率计算的描述，该误码率在论文中把在 802.11a 协议中的前向纠错考虑了进去，并描述了一个包是否被成功接收所实现的算法。请参阅 <code>Yet Another Network Simulator</code>  的更多细节。</p>\n<p>PHY 层的状态会是下面五种其中的一种：</p>\n<ol>\n<li>TX： <code>the PHY is currently transmitting a signal on behalf of its associated MAC</code> （phy 层正在发送与之关联的 MAC 的信号）</li>\n<li>RX： <code>the PHY is synchronized on a signal and is waiting until it has received its last bit to forward it to the MAC.</code> （ <code>phy</code>  已经同步了信号，正在等待止到接收到最后一个比特位，然后转发到 MAC 层）</li>\n<li>IDLE： <code>the PHY is not in the TX, RX, or CCA BUSY states</code> .（PHY 层空闲）</li>\n<li>CCA Busy： <code>the PHY is not in TX or RX state but the measured energy is higher than the energy detection threshold</code> .（PHY 不在 TX，RX 状态，但是测得的能量高于能量探测阈值）</li>\n<li>SLEEP： <code>the PHY is in a power save mode and cannot send nor receive frames</code> .（PHY 处于节能状态，不发送也不接收）</li>\n</ol>\n<p>当 <code>PHY</code>  不是 <code>IDLE</code>  状态时（也就是说，另外的更早的包已经在接收器中同步了，或者他自己在发送数据），一个新的包的第一个比特位被接收，此时，接收的包将被丢弃。否则，如果 <code>PHY</code>  处于 <code>IDLE</code>  或者 <code>CCA Busy</code>  状态，我们计算这个新的信号的第一位比特的接收能量，并于能量探测阈值进行比较 <code>（as defined by the Clear Channel Assessment function mode 1）</code> 。如果包的能量高， <code>PHY</code>  则转移状态到 <code>RX</code> ，并且当包的最后一个比特位被接收时发起一个事件。否则， <code>PHY</code>  停留在 IDLE 或者 <code>CCA Busy</code>  状态，并丢弃这个包。</p>\n<p><strong>WifiChannel configuration</strong></p>\n<p><code>WifiChannel</code>  的实现使用了传播损耗模型和传播延时模型，这两个模型在 <code>ns3</code>  的 <code>Propagation</code>  模块中有提供。</p>\n<h4 id=\"the-mac-model\"><a class=\"anchor\" href=\"#the-mac-model\">#</a> The MAC model</h4>\n<p><code>802.11</code>  分布式协调功能（ <code>DCF</code> ）是用来计算当授予访问传输介质的时候。如果我们使用一个经过每一个时隙的周期性的定时器，那么实现 DCF 将会特别的容易，</p>\n<p>DCF 程序的回退在【ieee80211】的 9.2.5.2 节中描述的。</p>\n<ol>\n<li>无论由物理层或者虚拟 CS 机制所指示的发现媒质忙，回退程序应为 STA 调用来传送一个帧。</li>\n<li>即使没有另外传输任务在当前队列中，A backoff procedure shall be performed immediately after the end of every transmission with the More Frag-ments bit set to 0 of an MPDU of type Data, Management, or Control with subtype PS-Poll</li>\n</ol>\n<p>总之，如果队列空，一个新到的包应该在信道感知空闲 DIFS 后，马上被传输。如果队列不空，并且在一个成功的 MPDU 之后没有更多的分组，节点应该开始回退定时器。</p>\n<p>一些用户观察到，802.11MAC 与空队列的空闲信道将会马上发送达到该模型的第一帧，而无须等待 DIFS 或者回退，并想知道这是否合规。根据协议标准， <code>The backoff procedure shall be invoked for a STA to transfer a frame when finding the medium busy as indicated by either the physical or virtual CS mechanism.</code>  因此在这种情况下，媒介并不能发现在当前忙，站点将会马上传输。</p>\n<p>更高层的 MAC 功能的实现是在一系列 C++ 类中，功能：</p>\n<pre><code>• packet fragmentation and defragmentation,\n• use of the RTS/CTS protocol,\n• rate control algorithm,\n• connection and disconnection to and from an Access Point,\n• the MAC transmission queue,\n• beacon generation,\n• MSDU aggregation,\n• etc.\n</code></pre>\n<h4 id=\"rate-control-algorithms\"><a class=\"anchor\" href=\"#rate-control-algorithms\">#</a> Rate control algorithms</h4>\n<p>多种速率控制算法在 <code>ns3</code>  中是可用的。一些速率控制算法是用在真实设备中的实际算法；其他一些算法是在文献中找到的。下面的速率控制算法是在 <code>MAC low layer</code>  中使用的：</p>\n<p>真实设备中的算法有：</p>\n<pre><code>ArfWifiManager(WifiHelper的默认算法)【Automatic Rate Fallback(ARF) algorithm 自动速率回退算法 1997年】\nOnoeWifiManager\nConstantRateWifiManager\nMinstrelWifiManager\n文献中的算法：\nIdealWifiManager\nAarfWifiManager【2004年】\nAmrrWifiManager\nCaraWifiManager\nRraaWifiManager【2006年】\nAarfcdWifiManager\nParfWifiManager\nAparfWifiManager\n</code></pre>\n<p><strong>ConstantRateWifiManager</strong></p>\n<p>该算法对每一个包使用相同的传输模式。用户可以设置对于所有 <code>unicast</code>  包的期望的 <code>DataMode</code>  和所有 <code>request</code>  控制包的 <code>ControlMode</code>  (例如 <code>RTS</code> ).</p>\n<p>控制响应帧（比如 <code>CTS，ACK</code> ）的传输参数的选择规则在 <code>802.11</code>  标准中是相当清晰的。 <code>ns3</code>  遵从了这样的标准和从一系列正常速率或者强制性速率选择作为控制响应帧的速率的选择性。这就意味着，即使 <code>ConstantRateWifiManager</code>  被使用，控制响应帧也可能使用不同的速率进行发送。</p>\n<p><code>ConstantRateWifiManager</code>  的 <code>ControlMode</code>  属性仅仅别用与 <code>RTS</code>  帧。 <code>CTS</code>  和 <code>ACK</code>  帧的速率是根据 <code>802.11</code>  标准进行选择的。然而，用户仍然可以手动添加 <code>WifiMode</code>  到基本的速率中，这将允许控制响应帧以其他的速率进行发送。请参考 <code>project wiki</code>  进一步了解这是如何实现的。</p>\n<pre><code>可用的属性有：\nDataMode：（默认WifiMode::OfdmRate6Mbps）specify a mode for all non-unicast packets\nControlMode：（默认WifiMode::OfdmRate6Mbps）specify a mode for all ‘request’ control packets\n</code></pre>\n<p><strong>IdealWifiManager</strong></p>\n<p>这个速率控制算法根据前一个包的发送的信噪比 <code>SNR</code>  来选择最好的模式。考虑节点 A 发送单播包到节点 B。当 B 成功接收到从 A 发送的包时，B 记录所接受的包的 <code>SNR</code>  到 <code>ns3::SnrTag</code> , 然后，添加标签到 ACK 并返回给 A。通过这样做，A 能够了解发送到 B 的包的信噪比 <code>SNR</code> ，并使用一种带宽之外的机制（因此算法名字就是 <code>ideal</code> ）。然后 A 使用 <code>SNR</code>  从一个一系列 SNR 阈值中选择一个传输模式，而这个阈值是从目标 BER 和特定模式的 SNR/BER 曲线构建的。<br />\n可以的属性有：<br />\n <code>BerThreshold</code> （默认 10e-6）： <code>The maximum Bit Error Rate that is used to calculate the SNR threshold for each mode</code> . 最大误码率，用于计算每种模式的 SNR 阈值。</p>\n<p><strong>MinstrelWifiManager</strong></p>\n<p>该算法是源于 <code>madwifi</code>  工程的速率控制算法。它是 <code>Linux</code>  内核默认的速率控制算法。<br />\n <code>Minstre</code> l 跟踪每个成功发送可用速率帧的概率。然后通过乘以速率的概率计算期望的吞吐量。这种方法被选择用于确保不会选择最低速率而趋向于最高速率（尽管最低速率具有更高的概率）。<br />\n在 <code>monstre</code> l 中，大致 10% 的传输是在所谓的 <code>lookaround rate</code>  发送的。 <code>lookaround rate</code>  的目标就是迫使 <code>minstrel</code>  尝试使用比当前速率更高的速率。</p>\n<p><code>IEEE 802.11</code>  标准在物理层支持利用多种速率进行传输，但是并未规定速率选择策略。速率自适应的速率选择算法核心是及时获取能够实时反映信道状态的信息。<br />\n目前获取信道信息的方法主要有两大类：</p>\n<pre><code>1. 信道物理信息直接获取。 比如获取信噪比SNR，接受信号强度，误码率BER\n2. 基于统计的方法.\n</code></pre>\n<p>目前的速率自适应可分为以下 4 类：</p>\n<ol>\n<li>\n<p>利用传送帧连续的成功和失败次数来估计信道质量。比如 ARF 算法，如果连续没有收到两个 ACK，则降低一档速率，发送下面的数据并启动一个定时器；如果连续收到 10 个帧或者定时器时间到，则提高发送速率。缺点：连续成功或失败的次数很难及时适应信道的快速变化。</p>\n</li>\n<li>\n<p>利用物理层指标 (如 SNIR,RSS) 估计信道质量。缺点：已有文献证明 SNIR,RSS 等指标和丢帧率并没有很强的对应关系，而且基于跨层的设计思想在实际应用中存在困难。</p>\n</li>\n<li>\n<p>每隔一段时间以不同速率发送一个或者一些试探帧，用来估计不同数量在信道中的表现。这种方法提高了对其他速率的实时估计能力，但是因为不能发送过多的试探帧，导致个别试探帧的成败决定了速率选择，容易造成误判。如 <code>SampleRate</code> 。</p>\n</li>\n<li>\n<p>利用近一段时间的数据帧的统计特征来决定发送速率。比如 <code>RRAA</code> 。 <code>RRAA</code>  在一段时间（窗口）内统计丢帧率等信息，并将其与相应的门限进行比较。这种方法屏蔽了因为随机丢帧而导致的误判，如果窗口选择合适，能够对信道变化作出及时反应。</p>\n</li>\n</ol>\n<p>内容来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tP3Q9aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZm9yc2lueS9hcnRpY2xlL2RldGFpbHMvNDgwNTc4Mw==\">http://blog.csdn.net/forsiny/article/details/4805783</span></p>\n",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/4.%E4%BB%BF%E7%9C%9F%E6%B5%81%E7%A8%8B/",
            "url": "http://jluyeyu.com/ns3/4.%E4%BB%BF%E7%9C%9F%E6%B5%81%E7%A8%8B/",
            "title": "4.仿真流程",
            "date_published": "2022-10-29T02:18:52.000Z",
            "content_html": "<h2 id=\"4仿真流程\"><a class=\"anchor\" href=\"#4仿真流程\">#</a> 4. 仿真流程</h2>\n<p>在本节中，将介绍 <code>ns3</code>  中仿真的流程，</p>\n<h3 id=\"基本流程\"><a class=\"anchor\" href=\"#基本流程\">#</a> 基本流程</h3>\n<p>使用 <code>ns3</code>  仿真时，一般经过以下 4 个步骤。</p>\n<h4 id=\"1-选择或开发相应的模块\"><a class=\"anchor\" href=\"#1-选择或开发相应的模块\">#</a> 1. 选择或开发相应的模块</h4>\n<p>根据实际仿真对象和仿真场景选择相应的仿真模块：如有线网或还是无线网 ( <code>Wi-Fi</code> )，节点移动性 <code>mobility</code> ，能量 <code>energy</code> , 路由协议，应用程序 <code>application</code>  等，若是没有相应模块，那就需要自己编写 (在后续章节中讲述)。</p>\n<h4 id=\"2编写网络仿真脚本\"><a class=\"anchor\" href=\"#2编写网络仿真脚本\">#</a> 2. 编写网络仿真脚本</h4>\n<p>若是有了相应的模块，那么我们就可以搭建网络仿真环境，ns-3 仿真脚本支持 2 种语言：C<ins> 和 Python，两种语言接口的 API 接口是一样的，但是部分 API 可能没有 Python 的接口。所以，仿真主要还是采用 C</ins> 进行编写。</p>\n<p>编写 ns-3 仿真脚本的大体过程如下【具体的例子查看 <code>examples/tutorial/</code>  下面 的示例，后面也会分析一些】：</p>\n<ul>\n<li>\n<p><strong>生成节点</strong>：ns-3 中节点相当于一个空的计算机外壳，我们需要根据需求给这个计算机安装网络所需要的软硬件，如网卡、应用程序、协议栈等。</p>\n</li>\n<li>\n<p><strong>安装网卡设备</strong>：不同的网络类型有不同的网络设备，从而提供不同的通信、物理层和 MAC 层，如 <code>CSMA WI-FI WIMAX</code>  和 <code>point-to-point</code>  等。</p>\n</li>\n<li>\n<p><strong>安装协议栈</strong>： <code>ns-3</code>  网络中一般是 <code>TCP/IP</code>  协议栈，依据网络选择具体协议，如是 <code>UDP</code>  还是 <code>TCP</code> ，选择何种不同的路由协议（ <code>OLSR</code>   <code>AODV</code>  和 <code>Global</code>  等）并为其配置相应的 IP 地址， <code>ns3</code>  既支持 <code>IPv4</code>  也支持 <code>IPv6</code>  。</p>\n</li>\n<li>\n<p><strong>安装应用层协议</strong>：依据选择的传输层协议选择相应的应用层协议，但是有时需要自己编写应用层产生数据流量的代码。</p>\n</li>\n<li>\n<p>其他配置：如节点是否移动，是否需要能量管理等</p>\n</li>\n<li>\n<p><strong>启动仿真</strong>：整个网络场景配置完毕，启动仿真</p>\n</li>\n</ul>\n<h4 id=\"3仿真结果分析\"><a class=\"anchor\" href=\"#3仿真结果分析\">#</a> 3. 仿真结果分析</h4>\n<p>仿真结果一般有两种：一种是网络场景，二是网络数据。网络场景如节点拓扑结构、移动模型等，一般通过可视化界面（ <code>PyViz</code>  或者 <code>NetAnim</code> ）可直接观测到。网络数据可以在可视化界面进行简单统计，此外还可以通过专门的统计框架 <code>status</code>  或者自行通过 <code>ns3</code>  提供的追踪框架收集、统计和分析相应的网络数据，如数据分组的延迟、网络流量、分组丢失和节点消息缓存队列的等，<strong> 但是上述统计结果对于一些新的开源模块可能不一定有用，所以更推荐的是采用 track 自行分析。</strong>。</p>\n<h4 id=\"4依据仿真结果调整网络配置参数或者修改源代码\"><a class=\"anchor\" href=\"#4依据仿真结果调整网络配置参数或者修改源代码\">#</a> 4. 依据仿真结果调整网络配置参数或者修改源代码。</h4>\n<h3 id=\"例子\"><a class=\"anchor\" href=\"#例子\">#</a> 例子</h3>\n<p>为了更好的展示上述流程，样例代码是 <code>aodv</code>  的实例代码，位于 <code>ns-3.xx/src/aodv/examples</code></p>\n<p>完整代码如下所示：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/aodv-module.h\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/core-module.h\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/network-module.h\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/internet-module.h\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/mobility-module.h\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/point-to-point-module.h\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/v4ping-helper.h\"</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/yans-wifi-helper.h\"</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> ns3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * \\ingroup aodv-examples</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * \\ingroup examples</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * \\brief Test script.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * This script creates 1-dimensional grid topology and then ping last node from the first one:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * [10.0.0.1] &lt;-- step --> [10.0.0.2] &lt;-- step --> [10.0.0.3] &lt;-- step --> [10.0.0.4]</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * ping 10.0.0.4</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> * When 1/3 of simulation time has elapsed, one of the nodes is moved out of</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> * range, thereby breaking the topology.  By default, this will result in</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> * only 34 of 100 pings being received.  If the step size is reduced</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> * to cover the gap, then all pings can be received.</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">AodvExample</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token function\">AodvExample</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   * \\brief Configure script parameters</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   * \\param argc is the command line argument count</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   * \\param argv is the command line arguments</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   * \\return true on successful configuration</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">bool</span> <span class=\"token function\">Configure</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token comment\">/// Run simulation</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">Run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   * Report results</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>   * \\param os the output stream</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">Report</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>ostream <span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token comment\">// parameters</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token comment\">/// Number of nodes</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token keyword\">uint32_t</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token comment\">/// Distance between nodes, meters</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token keyword\">double</span> step<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token comment\">/// Simulation time, seconds</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token keyword\">double</span> totalTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token comment\">/// Write per-device PCAP traces if true</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token keyword\">bool</span> pcap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token comment\">/// Print routes if true</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">bool</span> printRoutes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token comment\">// network</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token comment\">/// nodes used in the example</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  NodeContainer nodes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token comment\">/// devices used in the example</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  NetDeviceContainer devices<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token comment\">/// interfaces used in the example</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  Ipv4InterfaceContainer interfaces<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token comment\">/// Create the nodes</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">CreateNodes</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token comment\">/// Create the devices</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">CreateDevices</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token comment\">/// Create the network</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">InstallInternetStack</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token comment\">/// Create the simulation applications</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">InstallApplications</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  AodvExample test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">Configure</span> <span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token function\">NS_FATAL_ERROR</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Configuration failed. Aborted.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  test<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  test<span class=\"token punctuation\">.</span><span class=\"token function\">Report</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token comment\">//-----------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AodvExample</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  <span class=\"token function\">size</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token function\">step</span> <span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  <span class=\"token function\">totalTime</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>  <span class=\"token function\">pcap</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  <span class=\"token function\">printRoutes</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token keyword\">bool</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Configure</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  <span class=\"token comment\">// Enable AODV logs by default. Comment this if too noisy</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token comment\">// LogComponentEnable(\"AodvRoutingProtocol\", LOG_LEVEL_ALL);</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>  <span class=\"token class-name\">SeedManager</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetSeed</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  CommandLine <span class=\"token function\">cmd</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"pcap\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Write PCAP traces.\"</span><span class=\"token punctuation\">,</span> pcap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"printRoutes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Print routing table dumps.\"</span><span class=\"token punctuation\">,</span> printRoutes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Number of nodes.\"</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Simulation time, s.\"</span><span class=\"token punctuation\">,</span> totalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"step\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Grid step, m\"</span><span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span> <span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\">//  Config::SetDefault (\"ns3::WifiRemoteStationManager::RtsCtsThreshold\", UintegerValue (1)); // enable rts cts all the time.</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  <span class=\"token function\">CreateNodes</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>  <span class=\"token function\">CreateDevices</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>  <span class=\"token function\">InstallInternetStack</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  <span class=\"token function\">InstallApplications</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Starting simulation for \"</span> <span class=\"token operator\">&lt;&lt;</span> totalTime <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" s ...\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>  <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Stop</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>  <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Destroy</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Report</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>ostream <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateNodes</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Creating \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">)</span>size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" nodes \"</span> <span class=\"token operator\">&lt;&lt;</span> step <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" m apart.\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>  nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>  <span class=\"token comment\">// Name nodes</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>      std<span class=\"token double-colon punctuation\">::</span>ostringstream os<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>      os <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"node-\"</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>      <span class=\"token class-name\">Names</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">str</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>  <span class=\"token comment\">// Create static grid</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>  MobilityHelper mobility<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>  mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetPositionAllocator</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::GridPositionAllocator\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                                 <span class=\"token string\">\"MinX\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>                                 <span class=\"token string\">\"MinY\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>                                 <span class=\"token string\">\"DeltaX\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>                                 <span class=\"token string\">\"DeltaY\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>                                 <span class=\"token string\">\"GridWidth\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>                                 <span class=\"token string\">\"LayoutType\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"RowFirst\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>  mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetMobilityModel</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantPositionMobilityModel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>  mobility<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateDevices</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>  WifiMacHelper wifiMac<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>  wifiMac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::AdhocWifiMac\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>  YansWifiPhyHelper wifiPhy <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>  YansWifiChannelHelper wifiChannel <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiChannelHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>  wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">SetChannel</span> <span class=\"token punctuation\">(</span>wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>  WifiHelper wifi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>  wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetRemoteStationManager</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantRateWifiManager\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"DataMode\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"OfdmRate6Mbps\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RtsCtsThreshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>  devices <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>wifiPhy<span class=\"token punctuation\">,</span> wifiMac<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"179\"></td><td><pre></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pcap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>      wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">EnablePcapAll</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">string</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"aodv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre></pre></td></tr><tr><td data-num=\"186\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InstallInternetStack</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>  AodvHelper aodv<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>  <span class=\"token comment\">// you can configure AODV attributes here using aodv.Set(name, value)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>  InternetStackHelper stack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>  stack<span class=\"token punctuation\">.</span><span class=\"token function\">SetRoutingHelper</span> <span class=\"token punctuation\">(</span>aodv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// has effect on the next Install ()</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>  stack<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>  Ipv4AddressHelper address<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>  address<span class=\"token punctuation\">.</span><span class=\"token function\">SetBase</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"10.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"255.0.0.0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>  interfaces <span class=\"token operator\">=</span> address<span class=\"token punctuation\">.</span><span class=\"token function\">Assign</span> <span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>printRoutes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span> routingStream <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"aodv.routes\"</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>      aodv<span class=\"token punctuation\">.</span><span class=\"token function\">PrintRoutingTableAllAt</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> routingStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre></pre></td></tr><tr><td data-num=\"205\"></td><td><pre><span class=\"token keyword\">void</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre><span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InstallApplications</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>  V4PingHelper <span class=\"token function\">ping</span> <span class=\"token punctuation\">(</span>interfaces<span class=\"token punctuation\">.</span><span class=\"token function\">GetAddress</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>  ping<span class=\"token punctuation\">.</span><span class=\"token function\">SetAttribute</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Verbose\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>  ApplicationContainer p <span class=\"token operator\">=</span> ping<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>  p<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>  p<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>  <span class=\"token comment\">// move node away</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">></span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span> <span class=\"token punctuation\">(</span>size<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> mob <span class=\"token operator\">=</span> node<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">GetObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>  <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Schedule</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span>totalTime<span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>MobilityModel<span class=\"token double-colon punctuation\">::</span>SetPosition<span class=\"token punctuation\">,</span> mob<span class=\"token punctuation\">,</span> <span class=\"token function\">Vector</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1e5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1e5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>从上述代码 <code>run</code>  函数中也可以很清晰的看出，实际上总共就分为几个步骤.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">CreateNodes</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建节点</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">CreateDevices</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建设备</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">InstallInternetStack</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 安装协议栈</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">InstallApplications</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置应用</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Starting simulation for \"</span> <span class=\"token operator\">&lt;&lt;</span> totalTime <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" s ...\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Stop</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Run</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Destroy</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"1创建节点过程\"><a class=\"anchor\" href=\"#1创建节点过程\">#</a> 1. 创建节点过程</h4>\n<p>创建了 <code>size</code>  个节点，并编号命名，</p>\n<p>然后节点采用了 <code>Grid</code>  布局，(0,0) 点开始，</p>\n<p>然后设置节点静止不动。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateNodes</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Creating \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">)</span>size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" nodes \"</span> <span class=\"token operator\">&lt;&lt;</span> step <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" m apart.\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// Name nodes</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      std<span class=\"token double-colon punctuation\">::</span>ostringstream os<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      os <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"node-\"</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token class-name\">Names</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Add</span> <span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">str</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">// Create static grid</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  MobilityHelper mobility<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetPositionAllocator</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::GridPositionAllocator\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                 <span class=\"token string\">\"MinX\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                 <span class=\"token string\">\"MinY\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                                 <span class=\"token string\">\"DeltaX\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                 <span class=\"token string\">\"DeltaY\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DoubleValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                 <span class=\"token string\">\"GridWidth\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                                 <span class=\"token string\">\"LayoutType\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"RowFirst\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  mobility<span class=\"token punctuation\">.</span><span class=\"token function\">SetMobilityModel</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantPositionMobilityModel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  mobility<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"2创建设备\"><a class=\"anchor\" href=\"#2创建设备\">#</a> 2. 创建设备</h4>\n<p>设置了 wifi 信道，wifi 的速率，pcap 设置一般没什么用，需要第三方软件分析可以采用。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateDevices</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  WifiMacHelper wifiMac<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  wifiMac<span class=\"token punctuation\">.</span><span class=\"token function\">SetType</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::AdhocWifiMac\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  YansWifiPhyHelper wifiPhy <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiPhyHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  YansWifiChannelHelper wifiChannel <span class=\"token operator\">=</span> <span class=\"token class-name\">YansWifiChannelHelper</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">SetChannel</span> <span class=\"token punctuation\">(</span>wifiChannel<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  WifiHelper wifi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  wifi<span class=\"token punctuation\">.</span><span class=\"token function\">SetRemoteStationManager</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"ns3::ConstantRateWifiManager\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"DataMode\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">StringValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"OfdmRate6Mbps\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RtsCtsThreshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">UintegerValue</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  devices <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>wifiPhy<span class=\"token punctuation\">,</span> wifiMac<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pcap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      wifiPhy<span class=\"token punctuation\">.</span><span class=\"token function\">EnablePcapAll</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">string</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"aodv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"3安装协议栈\"><a class=\"anchor\" href=\"#3安装协议栈\">#</a> 3. 安装协议栈</h4>\n<p>路由选择了 <code>aodv</code>  路由协议，设置了节点的 <code>Ipv4</code>  地址，设置是否需要打印路由表。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InstallInternetStack</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  AodvHelper aodv<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">// you can configure AODV attributes here using aodv.Set(name, value)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  InternetStackHelper stack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  stack<span class=\"token punctuation\">.</span><span class=\"token function\">SetRoutingHelper</span> <span class=\"token punctuation\">(</span>aodv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// has effect on the next Install ()</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  stack<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  Ipv4AddressHelper address<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  address<span class=\"token punctuation\">.</span><span class=\"token function\">SetBase</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"10.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"255.0.0.0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  interfaces <span class=\"token operator\">=</span> address<span class=\"token punctuation\">.</span><span class=\"token function\">Assign</span> <span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>printRoutes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      Ptr<span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span> routingStream <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">Create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>OutputStreamWrapper<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"aodv.routes\"</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ios<span class=\"token double-colon punctuation\">::</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      aodv<span class=\"token punctuation\">.</span><span class=\"token function\">PrintRoutingTableAllAt</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> routingStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"4设置应用\"><a class=\"anchor\" href=\"#4设置应用\">#</a> 4. 设置应用</h4>\n<p>设置了 <code>ping</code>  的应用程序，正常测网络性能，用的是 <code>OnOffHelper</code>  或者直接 <code>socket</code>  测试。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">AodvExample</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InstallApplications</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  V4PingHelper <span class=\"token function\">ping</span> <span class=\"token punctuation\">(</span>interfaces<span class=\"token punctuation\">.</span><span class=\"token function\">GetAddress</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  ping<span class=\"token punctuation\">.</span><span class=\"token function\">SetAttribute</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Verbose\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BooleanValue</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  ApplicationContainer p <span class=\"token operator\">=</span> ping<span class=\"token punctuation\">.</span><span class=\"token function\">Install</span> <span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  p<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  p<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span>totalTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// move node away</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">></span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span> <span class=\"token punctuation\">(</span>size<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  Ptr<span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span> mob <span class=\"token operator\">=</span> node<span class=\"token operator\">-></span><span class=\"token generic-function\"><span class=\"token function\">GetObject</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>MobilityModel<span class=\"token operator\">></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token class-name\">Simulator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Schedule</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Seconds</span> <span class=\"token punctuation\">(</span>totalTime<span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>MobilityModel<span class=\"token double-colon punctuation\">::</span>SetPosition<span class=\"token punctuation\">,</span> mob<span class=\"token punctuation\">,</span> <span class=\"token function\">Vector</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1e5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1e5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1e5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/3.waf%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4%E4%BB%A5%E5%8F%8A%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%A7%A3%E6%9E%90%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/",
            "url": "http://jluyeyu.com/ns3/3.waf%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4%E4%BB%A5%E5%8F%8A%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%A7%A3%E6%9E%90%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/",
            "title": "3.waf运行命令以及命令行解析的使用说明",
            "date_published": "2022-10-27T11:00:52.000Z",
            "content_html": "<h2 id=\"3waf运行命令以及命令行解析的使用说明\"><a class=\"anchor\" href=\"#3waf运行命令以及命令行解析的使用说明\">#</a> 3.waf 运行命令以及命令行解析的使用说明</h2>\n<p>在本节中，将介绍 <code>ns3</code>  中 <code>waf</code>  运行命令，及命令行解析</p>\n<h3 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<p><code>ns3</code>  使用了  <code>waf</code>  编译系统，在 <code>ubuntu</code>  环境下，打开终端，输入：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./waf --help</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>waf <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>即会出现大量的关于 waf 的命令行命令以及参数信息。</p>\n<p>命令行模式下运行程序，可设置参数。<br />\n参数设置有两行类型参数。一种是程序中的参数（<strong>程序参数</strong>），另一种是<strong>普通参数</strong>。</p>\n<p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./waf --run <span class=\"token string\">\"wifi-simple-learn-tcptest --help\"</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./waf --run <span class=\"token string\">\"code [Program Arguments] [General Arguments]\"</span></pre></td></tr></table></figure><p><strong>程序参数</strong></p>\n<p>这种参数通过在代码中设置的，通过 CommandLine 类完成解析，并设置参数的值。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Program Arguments:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    --phyMode:            Wifi Phy mode <span class=\"token punctuation\">[</span>OfdmRate6Mbps<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    --delta:              <span class=\"token function\">time</span> offset <span class=\"token punctuation\">(</span>microseconds<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> interfering signal <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    --PpacketSize:        size of application packet sent <span class=\"token punctuation\">[</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    --IpacketSize:        size of interfering packet sent <span class=\"token punctuation\">[</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    --verbose:            turn on all WifiNetDevice log components <span class=\"token punctuation\">[</span>false<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    --packetEnablePrint:  turn on print packet info <span class=\"token punctuation\">[</span>false<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>以上参数是在 <code>wifi-simple-learn-tcptest-debug</code>  代码文件中设置的，以上输出信息，<br />\n包含三部分：命令行参数名，参数说明，以及 [] 中括号中给出的参数默认值。</p>\n<p>用法：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./waf --run <span class=\"token string\">\"examples/wireless/wifi-simple-learn-tcptest --packetEnablePrint=true\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./waf --run <span class=\"token string\">\"examples/wireless/wifi-simple-learn-tcptest --packetEnablePrint=false\"</span><span class=\"token punctuation\">(</span>这样的设置，等于默认值<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>通用参数</strong></p>\n<p>这种参数用法：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./waf --run <span class=\"token string\">\"examples/wireless/wifi-simple-learn-tcptest --PrintHelp\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./waf --run <span class=\"token string\">\"examples/wireless/wifi-simple-learn-tcptest --PrintGroups\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//以wifi示例</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>./waf --run <span class=\"token string\">\"examples/wireless/wifi-simple-learn-tcptest --PrintGroup=wifi\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>./waf --run <span class=\"token string\">\"examples/wireless/wifi-simple-learn-tcptest --PrintTypeIds\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>//与PrintHelp相同</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>./waf --run <span class=\"token string\">\"examples/wireless/wifi-simple-learn-tcptest --help\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>//以ns3::AdhocWifiMac示例</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>./waf --run <span class=\"token string\">\"examples/wireless/wifi-simple-learn-tcptest --PrintAttributes=ns3::AdhocWifiMac\"</span></pre></td></tr></table></figure><p>通用参数有:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>--PrintGlobals:              Print the list of globals.     打印输出可以设置的全局变量</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>--PrintGroups:               Print the list of groups.      打印输出当前程序依赖的模块。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                                                                这些模块是在脚本配置文件中对当前程序的配置模块。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>--PrintGroup<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>group<span class=\"token punctuation\">]</span>:        Print all TypeIds of group.    打印输出指定模块的全部TypeId。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>--PrintTypeIds:              Print all TypeIds.             打印所有TypeId</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>--PrintAttributes<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>typeid<span class=\"token punctuation\">]</span>:  Print all attributes of typeid.打印指定TypeId的属性</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>--PrintHelp:                 Print this <span class=\"token builtin class-name\">help</span> message.       打印帮助信息</pre></td></tr></table></figure><h3 id=\"用法步骤\"><a class=\"anchor\" href=\"#用法步骤\">#</a> 用法步骤</h3>\n<p>第一步：<br />\n在代码中使用 Command 类，定义程序参数，并解析。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CommandLine cmd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Usage</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"CommandLine example program.\\n\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>             <span class=\"token string\">\"\\n\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>             <span class=\"token string\">\"This little program demonstrates how to use CommandLine.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"intArg\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"an int argument\"</span><span class=\"token punctuation\">,</span>       intArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"boolArg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a bool argument\"</span><span class=\"token punctuation\">,</span>       boolArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"strArg\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"a string argument\"</span><span class=\"token punctuation\">,</span>     strArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"anti\"</span><span class=\"token punctuation\">,</span>    attrPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"cbArg\"</span><span class=\"token punctuation\">,</span>   <span class=\"token string\">\"a string via callback\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span>SetCbArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span> <span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>Usage</code>  函数，输出参数信息。</p>\n<p><code>AddValue</code>  函数，有三个参数：<br />\n第一个参数：定义在命令行使用的字符串<br />\n第二个参数：对变量意义说明<br />\n第三个参数：将命令行设置的值，设置到对应的变量。</p>\n<p><code>Parse</code>  函数完成解析命令行参数。</p>\n<p>第二步：</p>\n<p>在命令行使用 <code>AddValue</code>  函数的第一个参数字符串，设置变量对应的值。<br />\n例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./waf --run<span class=\"token operator\">=</span><span class=\"token string\">\"command-line-example --intArg=2 --boolArg --strArg=Hello --cbArg=World --help\"</span></pre></td></tr></table></figure><h3 id=\"说明\"><a class=\"anchor\" href=\"#说明\">#</a> 说明</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CommandLine</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token operator\">&amp;</span>help<span class=\"token punctuation\">,</span>Callback<span class=\"token operator\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">></span> callback<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CommandLine</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token operator\">&amp;</span>attributePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CommandLine</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token operator\">&amp;</span>help<span class=\"token punctuation\">,</span>T <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>CommandLine</code>  类有这三个 <code>AddValue</code>  的函数可以添加，对参数值进行设定。</p>\n<p>第一个函数：对指定的参数设置回调函数。</p>\n<p>第二个函数：对指定的值参数设置属性。这里面的属性参数一般都是 <code>ns3</code>  本身的属性参数。</p>\n<p>第三个函数：对指定的参数设置值。最简单的一种参数值设置。</p>\n<p>示例代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string attrClass <span class=\"token operator\">=</span> <span class=\"token string\">\"ns3::RandomVariableStream\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string attrName  <span class=\"token operator\">=</span> <span class=\"token string\">\"Antithetic\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string attrPath  <span class=\"token operator\">=</span> attrClass <span class=\"token operator\">+</span> <span class=\"token string\">\"::\"</span> <span class=\"token operator\">+</span> attrName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// Cache the initial values.  Normally one wouldn't do this,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// but we want to demonstrate that CommandLine has changed them.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> intDef <span class=\"token operator\">=</span> intArg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">bool</span> boolDef <span class=\"token operator\">=</span> boolArg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string strDef <span class=\"token operator\">=</span> strArg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string cbDef  <span class=\"token operator\">=</span> g_cbArg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// Look up default value for attribute</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">const</span> TypeId tid <span class=\"token operator\">=</span> <span class=\"token class-name\">TypeId</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">LookupByName</span> <span class=\"token punctuation\">(</span>attrClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>string attrDef<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">TypeId</span><span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token class-name\">AttributeInformation</span> <span class=\"token class-name\">info</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    tid<span class=\"token punctuation\">.</span><span class=\"token function\">LookupAttributeByName</span> <span class=\"token punctuation\">(</span>attrName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    attrDef <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>originalInitialValue<span class=\"token operator\">-></span><span class=\"token function\">SerializeToString</span> <span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>checker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  CommandLine cmd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Usage</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"CommandLine example program.\\n\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>             <span class=\"token string\">\"\\n\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>             <span class=\"token string\">\"This little program demonstrates how to use CommandLine.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"intArg\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"an int argument\"</span><span class=\"token punctuation\">,</span>       intArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"boolArg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a bool argument\"</span><span class=\"token punctuation\">,</span>       boolArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token comment\">// 对参数值设定</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"strArg\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"a string argument\"</span><span class=\"token punctuation\">,</span>     strArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token comment\">// 对路径属性进行设置</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"anti\"</span><span class=\"token punctuation\">,</span>    attrPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token comment\">// 对参数设置回调函数</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"cbArg\"</span><span class=\"token punctuation\">,</span>   <span class=\"token string\">\"a string via callback\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span>SetCbArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<h3 id=\"实例\"><a class=\"anchor\" href=\"#实例\">#</a> 实例：</h3>\n<p>例如代码：（代码位置：/core/examples/command-line-example.cc）</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iomanip></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ns3/core-module.h\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> ns3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>string g_cbArg <span class=\"token operator\">=</span> <span class=\"token string\">\"cbArg default\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">SetCbArg</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>string val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  g_cbArg <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">int</span>         intArg  <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">bool</span>        boolArg <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>string strArg  <span class=\"token operator\">=</span> <span class=\"token string\">\"strArg default\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\">// Attribute path</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string attrClass <span class=\"token operator\">=</span> <span class=\"token string\">\"ns3::RandomVariableStream\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string attrName  <span class=\"token operator\">=</span> <span class=\"token string\">\"Antithetic\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string attrPath  <span class=\"token operator\">=</span> attrClass <span class=\"token operator\">+</span> <span class=\"token string\">\"::\"</span> <span class=\"token operator\">+</span> attrName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> intDef <span class=\"token operator\">=</span> intArg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">bool</span> boolDef <span class=\"token operator\">=</span> boolArg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string strDef <span class=\"token operator\">=</span> strArg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string cbDef  <span class=\"token operator\">=</span> g_cbArg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token comment\">// Look up default value for attribute</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">const</span> TypeId tid <span class=\"token operator\">=</span> <span class=\"token class-name\">TypeId</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">LookupByName</span> <span class=\"token punctuation\">(</span>attrClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>string attrDef<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">TypeId</span><span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token class-name\">AttributeInformation</span> <span class=\"token class-name\">info</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    tid<span class=\"token punctuation\">.</span><span class=\"token function\">LookupAttributeByName</span> <span class=\"token punctuation\">(</span>attrName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    attrDef <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>originalInitialValue<span class=\"token operator\">-></span><span class=\"token function\">SerializeToString</span> <span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>checker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  CommandLine cmd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Usage</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"CommandLine example program.\\n\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>             <span class=\"token string\">\"\\n\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>             <span class=\"token string\">\"This little program demonstrates how to use CommandLine.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"intArg\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"an int argument\"</span><span class=\"token punctuation\">,</span>       intArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"boolArg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a bool argument\"</span><span class=\"token punctuation\">,</span>       boolArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"strArg\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"a string argument\"</span><span class=\"token punctuation\">,</span>     strArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"anti\"</span><span class=\"token punctuation\">,</span>    attrPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">AddValue</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"cbArg\"</span><span class=\"token punctuation\">,</span>   <span class=\"token string\">\"a string via callback\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MakeCallback</span> <span class=\"token punctuation\">(</span>SetCbArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span> <span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token comment\">// 输出初始值：</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">GetName</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Initial values:\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>left <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"intArg:\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span>                    intDef</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"boolArg:\"</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>boolalpha  <span class=\"token operator\">&lt;&lt;</span> boolDef  <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>noboolalpha</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"strArg:\"</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span>            <span class=\"token operator\">&lt;&lt;</span> strDef   <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"anti:\"</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span>            <span class=\"token operator\">&lt;&lt;</span> attrDef  <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"cbArg:\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span>            <span class=\"token operator\">&lt;&lt;</span> cbDef    <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token comment\">// 输出最终值：</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Final values:\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>left <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"intArg:\"</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span>                    intArg</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"boolArg:\"</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>boolalpha  <span class=\"token operator\">&lt;&lt;</span> boolArg</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>noboolalpha</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"strArg:\"</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span>            <span class=\"token operator\">&lt;&lt;</span> strArg   <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  <span class=\"token comment\">// Look up new default value for attribute</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">TypeId</span><span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token operator\">:</span><span class=\"token class-name\">AttributeInformation</span> <span class=\"token class-name\">info</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    tid<span class=\"token punctuation\">.</span><span class=\"token function\">LookupAttributeByName</span> <span class=\"token punctuation\">(</span>attrName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>            <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"anti:\"</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> info<span class=\"token punctuation\">.</span>initialValue<span class=\"token operator\">-></span><span class=\"token function\">SerializeToString</span> <span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>checker<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>              <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setw</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>              <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"cbArg:\"</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span>            <span class=\"token operator\">&lt;&lt;</span> g_cbArg  <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>命令行运行代码：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./waf --run<span class=\"token operator\">=</span><span class=\"token string\">\"command-line-example\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./waf --run<span class=\"token operator\">=</span><span class=\"token string\">\"command-line-example --intArg=2 --boolArg --strArg=Hello --cbArg=World\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>./waf --run<span class=\"token operator\">=</span><span class=\"token string\">\"command-line-example --help\"</span></pre></td></tr></table></figure><p>第一行命令，不加参数运行代码</p>\n<p>第二行命令，加程序参数运行代码，其中 intArg=2，strArg=Hello，cbArg=World&quot;</p>\n<p>第三行命令，加通用参数运行代码</p>\n",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/2.ns3%E5%85%B3%E9%94%AE%E6%8A%BD%E8%B1%A1/",
            "url": "http://jluyeyu.com/ns3/2.ns3%E5%85%B3%E9%94%AE%E6%8A%BD%E8%B1%A1/",
            "title": "2.ns3关键抽象",
            "date_published": "2022-10-27T07:00:52.000Z",
            "content_html": "<h2 id=\"2ns3关键抽象\"><a class=\"anchor\" href=\"#2ns3关键抽象\">#</a> 2.ns3 关键抽象</h2>\n<p>在本节中，我们将总结一些在网络中常用的，但在 <code>ns3</code>  中有特定含义的术语。</p>\n<h3 id=\"node\"><a class=\"anchor\" href=\"#node\">#</a> Node</h3>\n<p>一个连接到网络的计算设备被称为主机，有时也被称为终端系统。因为 <code>ns3</code>  是一个网络模拟器，在 <code>ns3</code>  中，基本的计算设备抽象被称为 <code>Node</code> 。 <code>C++</code>  中由 <code>Node</code>  类实现。Node 类提供了管理模拟中计算设备的表示方法。人们会添加一些协议，如应用程序、协议栈和外围卡及其相关的驱动程序，以使计算机能够进行有用的工作。我们在 <code>ns-3</code>  中使用同样的基本模型。</p>\n<h3 id=\"application\"><a class=\"anchor\" href=\"#application\">#</a> Application</h3>\n<p><code>Application</code>  是指可以完成某成某些活动的用户程序。 <code>Application</code>  附着在 <code>Node</code>  上，用来模拟该应用运行在一个节点上的场景。在 <code>ns3</code>  中，应用被抽象为一个基类即 <code>Application</code>  类。目录位于 <code>ns-3.xx/src/applications</code>  下。后续自己创建 <code>customized application</code> , 都需要继承这个类。</p>\n<h3 id=\"channel\"><a class=\"anchor\" href=\"#channel\">#</a> Channel</h3>\n<p>通常把网络中数据流流过的媒介称为信道。当你把网线插入到路由器时，就是通过信道将计算机与以太网连接。在 ns3 的模拟环境中，你可以把节点连接到代表数据交换信道的对象上。在这里，基本的通信子网这一抽象概念被称为信道，使用 <code>Channel</code>  类描述。一个信道实例可以模拟一条简单的点对点，也可以模拟一个复杂的巨型以太网交换机，甚至是无线网络中充满障碍物的三维空间，同样的我们也可以自定义新的 <code>Channel</code> 。</p>\n<h3 id=\"netdevice\"><a class=\"anchor\" href=\"#netdevice\">#</a> NetDevice</h3>\n<p>计算机需要通过网络设备才能连接到网络上，如网卡（硬件设备）。而网卡需要软件驱动才能知道从何处取得需要发送至网络中的数据，以及将从网络中获取到的数据发送至计算机的哪个位置。</p>\n<p>​ 在 <code>ns3</code>  中，网络设备这一抽象概念相当于硬件设备和软件驱动的综合。 <code>ns3</code>  仿真环境中，网络设备安装在节点上，使得节点通过信道和其他节点通信。像真实计算机一样，一个节点可以通过多个网络设备同时连接到多条信道上。网络设备使用 <code>NetDevice</code>  类描述， <code>NetDevice</code>  类提供管理连接其他节点和信道对象的各种方法，并且允许开发者以面向对象的方法来自定义。几个特定的网络设备有： <code>CsmaNetDevice</code> 、 <code>PointToPointNetDevice</code>  和 <code>Wi-FiNetDevice</code> 。正如以太网卡被设计在以太网中工作一样， <code>CamsNetDevice</code>  被设计在 CSMA 信道中工作，而 <code>PointToPointNetDevice</code>  在 <code>PointToPoint</code>  信道中工作， <code>Wi-FiNetDevice</code>  在 Wi-Fi 信道中工作。</p>\n<h3 id=\"topology-helpers\"><a class=\"anchor\" href=\"#topology-helpers\">#</a> Topology Helpers</h3>\n<p>如同现实网络中的主机都默认装有内置网卡一样，把网络设备连接到节点、信道、配置 IP 地址等在 ns3 是很普遍的任务，那么干脆提供 “拓扑生成器” 来使这个工作变得尽可能的容易。举例来说：创建一个网络设备，配置一个 MAC 地址，把此网络设备装载到节点上，设置节点的协议栈以及连接网络设备到一个信道，这些事情都需要许多分立的 ns-3 核心操作。而当需要把许多设备连接到多点信道，在网际间将单个网络设备进行连接时，则需要对 ns-3 核心进行更多的分立操作。此时提供拓扑生成器来整合这些大量分立的步骤，使其成为一个简单易用的操作。</p>\n<p>​ 很明显， <code>Helper</code>  类可以极大地方便用户。例如 <code>TopologyReaderHelper</code>  类可以使得更容易配置和使用通用的 <code>TopologyReader</code> 。再如类 <code>InternetStackHelper</code>  是一个安装 <code>PointToPointHelper</code>  对象和点到点网络设备的网络协议栈的拓扑生成器，它会为每一个节点容器中的节点安装一个网络协议栈（如 TCP、UDP 和 IP 等）。</p>\n",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/ns3/1.ns3%E5%88%9D%E8%AF%86/",
            "url": "http://jluyeyu.com/ns3/1.ns3%E5%88%9D%E8%AF%86/",
            "title": "1.ns3初识",
            "date_published": "2022-10-23T09:00:52.000Z",
            "content_html": "<h2 id=\"1ns3初识\"><a class=\"anchor\" href=\"#1ns3初识\">#</a> 1.ns3 初识</h2>\n<h3 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h3>\n<p><code>ns3</code>  是一个<strong>离散事件驱动的网络模拟器</strong>，意在满足学术和教学要求。它是由 C++/Python 编写的开源项目，主要运行平台是 GUL/Linux（如 Ubuntu 等）。对于 Windows 系统，可以通过安装虚拟机来运行。  NS3 主要用来模拟计算机网络，可以在模拟现实世界中的各种类型的网络通信。</p>\n<h3 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h3>\n<h4 id=\"1环境\"><a class=\"anchor\" href=\"#1环境\">#</a> 1. 环境</h4>\n<p>系统：Ubuntu18.04<br />\n 版本：ns3.xx（实例用的 3.31，推荐 3.27）</p>\n<h4 id=\"2换源\"><a class=\"anchor\" href=\"#2换源\">#</a> 2. 换源</h4>\n<p>将源换成国内的源，比较好，之前用的自带的源，安装可视化的模块时死活装不上，换成国内的源之后，装上了。所以推荐换华为的源<br />\n System setting-&gt;software&amp;update<br />\n<img data-src=\"https://leanote.com/api/file/getImage?fileId=5fb0ddf8ab644104210000f3\" alt=\"图片标题\" /></p>\n<h4 id=\"3安装一些包\"><a class=\"anchor\" href=\"#3安装一些包\">#</a> 3. 安装一些包</h4>\n<p>将下面的代码拷贝到 download.sh 中，批下载</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gedit download.sh</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#python 环境</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gcc g++ python python3 python3-dev</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#安装 Netanim animator 关联库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> qt5-default mercurial</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#安装 ns-3-pyviz visualizer 关联库</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gir1.2-goocanvas-2.0 python-gi python-gi-cairo python-pygraphviz python3-gi python3-gi-cairo python3-pygraphviz gir1.2-gtk-3.0 ipython ipython3  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#其他关联库</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> openmpi-bin openmpi-common openmpi-doc libopenmpi-dev </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gdb valgrind uncrustify</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> python3-sphinx dia gsl-bin libgsl-dev libgsl23 libgslcblas0 tcpdump sqlite sqlite3 libsqlite3-dev libxml2 libxml2-dev</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libgtk2.0-0 libgtk2.0-dev vtun lxc uml-utilities libboost-signals-dev libboost-filesystem-dev</pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1kb3dubG9hZC1sbzl3eTM2Yy5zaA==\">运行 download.sh</span></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sh</span> download.sh</pre></td></tr></table></figure><h4 id=\"4下载ns-3源码\"><a class=\"anchor\" href=\"#4下载ns-3源码\">#</a> 4. 下载 ns-3 源码</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> workspace</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> workspace</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">wget</span> https://www.nsnam.org/release/ns-allinone-3.31.tar.bz2 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">tar</span> xjf ns-allinone-3.31.tar.bz2</pre></td></tr></table></figure><h4 id=\"5编译ns-3\"><a class=\"anchor\" href=\"#5编译ns-3\">#</a> 5. 编译 ns-3</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ns-allinone-3.31/ns-3.31/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./waf clean</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./waf configure --build-profile<span class=\"token operator\">=</span>debug --enable-examples --enable-tests</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>./waf</pre></td></tr></table></figure><h4 id=\"6测试\"><a class=\"anchor\" href=\"#6测试\">#</a> 6. 测试</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./test.py -c core</pre></td></tr></table></figure><p><img data-src=\"https://leanote.com/api/file/getImage?fileId=5fb0ba5cab6441020a00009d\" alt=\"图片标题\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./waf --run hello-simulator</pre></td></tr></table></figure><p><img data-src=\"https://leanote.com/api/file/getImage?fileId=5fb0ba8fab6441020a0000aa\" alt=\"图片标题\" /></p>\n",
            "tags": [
                "ns3",
                "ns3"
            ]
        },
        {
            "id": "http://jluyeyu.com/javascript/%E6%8E%A8%E8%8D%90%E6%89%8B%E5%86%99%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A0%E7%BD%91%E7%AB%99/",
            "url": "http://jluyeyu.com/javascript/%E6%8E%A8%E8%8D%90%E6%89%8B%E5%86%99%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A0%E7%BD%91%E7%AB%99/",
            "title": "推荐一个前端js练习网站",
            "date_published": "2022-10-21T02:00:00.000Z",
            "content_html": "<h2 id=\"推荐一个前端js练习网站\"><a class=\"anchor\" href=\"#推荐一个前端js练习网站\">#</a> 推荐一个前端 js 练习网站</h2>\n<h3 id=\"1-背景\"><a class=\"anchor\" href=\"#1-背景\">#</a> 1. 背景</h3>\n<p>通常面试的时候，面试官会提一些 <code>JavaScript</code>  手写的面试题，主要是为了考察面试者 <code>JavaScript</code>  基础的掌握程度。这些题目一般包含一些常用 api 或者功能的简单实现。练习的时候虽然也能写出来，但是因为并不能确定是否满足所有情况，对于正确性无法确定。</p>\n<p>基于上述背景，推荐一个很好用的前端 js 练习网站<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaWdmcm9udGVuZC5kZXYvcHJvYmxlbQ==\"> Front-End Interview Coding Problems | BFE.dev - prepare for Front-End job interviews.</span></p>\n<h3 id=\"2介绍\"><a class=\"anchor\" href=\"#2介绍\">#</a> 2. 介绍</h3>\n<p>该网站包含 175 道题，大部分是前端 <code>CSS</code>  和 <code>JavaScript</code>  题目，题目质量感觉不错。</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/js-question-all.jpg\" alt=\"题目列表\" /></p>\n<p>和 leetcode 一样，每道题目都包含多个用例，所有用例通过就算完成。也包含讨论区等，可以查看各位 dalao 的写法。</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/js-promise.all.jpg\" alt=\"编写环境展示\" /></p>\n<h3 id=\"3总结\"><a class=\"anchor\" href=\"#3总结\">#</a> 3. 总结</h3>\n<p>这是一个非常好的网站，十分适合新手练习和熟悉常用 api 的写法。</p>\n",
            "tags": [
                "javascript",
                "javascript"
            ]
        },
        {
            "id": "http://jluyeyu.com/hello-blog/",
            "url": "http://jluyeyu.com/hello-blog/",
            "title": "本站说明",
            "date_published": "2022-10-21T01:51:50.462Z",
            "content_html": "<p>​\t本网站主要是分享前端的知识，包括 leetcode 算法题、面试经验、javascript、html、css、前端小技巧、常见框架 (vue、react)、第三方库等使用，也会分享一些自己的学习成长过程、和项目学习经验，以上。</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/headicons/m8.jpg\" alt=\"图1\" /></p>\n",
            "tags": []
        },
        {
            "id": "http://jluyeyu.com/javascript/GA%20tracking/",
            "url": "http://jluyeyu.com/javascript/GA%20tracking/",
            "title": "在 React JS 应用程序中借助Google Tag Manager实现 Google Analytics",
            "date_published": "2022-07-10T10:34:52.000Z",
            "content_html": "<h1 id=\"在-react-js-应用程序中借助google-tag-manager实现-google-analytics\"><a class=\"anchor\" href=\"#在-react-js-应用程序中借助google-tag-manager实现-google-analytics\">#</a> 在 React JS 应用程序中借助 Google Tag Manager 实现 Google Analytics</h1>\n<h2 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h2>\n<p>几乎每个网站都会统计自身的浏览状况：日 IP、PV、跳出率、转换率、浏览者属性等等。了解这些数据有助于更好地改进服务。 <code>Google Analytics</code>  是一个非常好用的用户活动追踪工具，可以满足大多数需求，接下来会介绍一些如何在 <code>React JS</code>  应用程序中实现  <code>Google Analytics(GA)</code>  和  <code>Google Tag Manager(GTM)</code> 。</p>\n<h2 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h2>\n<h3 id=\"gtm\"><a class=\"anchor\" href=\"#gtm\">#</a> GTM</h3>\n<p><code>GTM</code>  是谷歌开发的跟踪代码管理器，可以在平台上添加和更新代码，用于转化跟踪、网站分析、再营销等用途。其优点是灵活性，无需修改项目源代码就可以部署更新，<br />\n并且网站统计分析的代码可以统一管理，可以添加 js,html, 图片等模板，与第三方工具高度集成 (其中就包括 <code>GA</code> ), 方便调试。</p>\n<p>个人感觉在跟踪的过程中起到的是中介的作用，数据从本地代码先经过 <code>GTM</code>  再传到 <code>GA</code></p>\n<h3 id=\"ga\"><a class=\"anchor\" href=\"#ga\">#</a> GA</h3>\n<p><code>GA</code>  是谷歌提供的一种网络分析服务，用于跟踪和报告网站流量，目前是谷歌营销平台品牌内的一个平台</p>\n<h2 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h2>\n<h3 id=\"1-将-gtm-容器添加到应用程序中\"><a class=\"anchor\" href=\"#1-将-gtm-容器添加到应用程序中\">#</a> 1. 将 GTM 容器添加到应用程序中</h3>\n<ul>\n<li>方法一：通过 <code>Package</code>  添加 <code>GTM Container Code</code>  (推荐)</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i react-gtm-module</pre></td></tr></table></figure><p>要使用此方法初始化  <code>GTM</code> ，我们需要在  <code>app.js</code>  中引入该包并提供 <code>GTM ID</code> 。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> TagManager <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-gtm-module\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> tagManagerArgs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  gtmId<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;YOUR GTM ID>\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>TagManager<span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>tagManagerArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>方法二<br />\n将此代码粘贴到 <code>index.html</code>  中 &lt;head&gt; 靠前位置，</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- Google Tag Manager --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">w<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    w<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> w<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    w<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"gtm.start\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token operator\">:</span> <span class=\"token string\">\"gtm.js\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      j <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      dl <span class=\"token operator\">=</span> l <span class=\"token operator\">!=</span> <span class=\"token string\">\"dataLayer\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"&amp;l=\"</span> <span class=\"token operator\">+</span> l <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    j<span class=\"token punctuation\">.</span>async <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    j<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.googletagmanager.com/gtm.js?id=\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> dl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    f<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">,</span> <span class=\"token string\">\"script\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dataLayer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;YOUR GTM ID>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">&lt;!-- End Google Tag Manager --></span></pre></td></tr></table></figure><p>然后在 <code>&lt;body&gt;</code>  中粘贴此代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 谷歌标签管理器 (noscript) --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>noscript</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> https://www.googletagmanager.com/ns.html?id= &lt;YOUR GTM ID><span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span><span class=\"token property\">visibility</span><span class=\"token punctuation\">:</span>hidden</span><span class=\"token punctuation\">\"</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>noscript</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">&lt;!-- 结束 Google Tag Manager (noscript) --></span></pre></td></tr></table></figure><p>例子如下:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%PUBLIC_URL%/favicon.ico<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>theme-color<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#000000<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Web site created using create-react-app<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>apple-touch-icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%PUBLIC_URL%/logo192.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%PUBLIC_URL%/manifest.json<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>React App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">&lt;!-- Google Tag Manager --></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">w<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        w<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> w<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        w<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"gtm.start\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token operator\">:</span> <span class=\"token string\">\"gtm.js\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          j <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          dl <span class=\"token operator\">=</span> l <span class=\"token operator\">!=</span> <span class=\"token string\">\"dataLayer\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"&amp;l=\"</span> <span class=\"token operator\">+</span> l <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        j<span class=\"token punctuation\">.</span>async <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        j<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.googletagmanager.com/gtm.js?id=\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> dl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        f<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">,</span> <span class=\"token string\">\"script\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dataLayer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;YOUR GTM ID>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">&lt;!-- End Google Tag Manager --></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">&lt;!-- Google Tag Manager (noscript) --></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>noscript</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.googletagmanager.com/ns.html?id=&lt;YOUR GTM ID><span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span><span class=\"token property\">visibility</span><span class=\"token punctuation\">:</span>hidden</span><span class=\"token punctuation\">\"</span></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>noscript</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">&lt;!-- End Google Tag Manager (noscript) --></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>noscript</span><span class=\"token punctuation\">></span></span>You need to enable JavaScript to run this app.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>noscript</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>验证是否成功：<br />\n可以直接在开发者工具 &gt; 网络，搜索是否存在 gtm 相关的数据<br />\n<img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/others/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%283%29/gtm%E9%85%8D%E7%BD%AE.png\" alt=\"\" /></p>\n<h3 id=\"添加-datalayer-数据事件\"><a class=\"anchor\" href=\"#添加-datalayer-数据事件\">#</a> 添加 dataLayer 数据 / 事件</h3>\n<p>在合适的地点添加类似如下的代码即可</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>TagManager<span class=\"token punctuation\">.</span><span class=\"token function\">dataLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  dataLayer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    event<span class=\"token operator\">:</span> <span class=\"token string\">\"your event\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    userActionProps<span class=\"token operator\">:</span> <span class=\"token string\">\"your value\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>验证方法是在控制台输出 dataLayer<br />\n<img data-src=\"https://miro.medium.com/max/1400/0*Z5lmp18jGPRzt3hC.png\" alt=\"事件验证\" /></p>\n<h3 id=\"2-设置-gtm-的变量触发器代码\"><a class=\"anchor\" href=\"#2-设置-gtm-的变量触发器代码\">#</a> 2. 设置  <code>GTM</code>  的变量 / 触发器 / 代码</h3>\n<p>首先设置数据层的变量，该变量应该和 dataLayer 设置时名称是一样的。<br />\n<img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/others/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%283%29/gtm%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE.png\" alt=\"\" /></p>\n<p>然后设置触发器</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/others/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%283%29/gtm%E8%A7%A6%E5%8F%91%E5%99%A8%E9%85%8D%E7%BD%AE.png\" alt=\"\" /></p>\n<p>之后设置 tag 和 GA 进行关联，可以选择 GA4 配置和 GA4 事件</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/others/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%283%29/gtm%20GA4%E4%BB%A3%E7%A0%81%E7%B1%BB%E5%9E%8B%E9%85%8D%E7%BD%AE.png\" alt=\"\" /></p>\n<p>输入 id-&gt;GA 数据流的 ID，和触发条件的事件。</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/others/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%283%29/gtm%20GA4%E9%85%8D%E7%BD%AE.png\" alt=\"\" /></p>\n<p>然后配置 GA4 事件，该事件触发时，GA 会接受到事件</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/others/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%283%29/gtm%20GA4%E4%BA%8B%E4%BB%B6%E9%85%8D%E7%BD%AE.png\" alt=\"\" /></p>\n",
            "tags": [
                "javascript",
                "javascript"
            ]
        },
        {
            "id": "http://jluyeyu.com/react/react%E8%87%AA%E5%AE%9A%E4%B9%89hook/",
            "url": "http://jluyeyu.com/react/react%E8%87%AA%E5%AE%9A%E4%B9%89hook/",
            "title": "react自定义hook",
            "date_published": "2022-06-13T12:20:52.000Z",
            "content_html": "<h1 id=\"react自定义hook\"><a class=\"anchor\" href=\"#react自定义hook\">#</a> react 自定义 hook</h1>\n<h3 id=\"1-什么是自定义hook\"><a class=\"anchor\" href=\"#1-什么是自定义hook\">#</a> 1. 什么是自定义 hook</h3>\n<p>自定义 Hook 是一个函数，其名称以 “use” 开头，函数内部可以调用其他的 Hook。</p>\n<p><code>函数名</code> ：以 “use” 开头，比如 useState。为什么要以 “use” 开头。这是因为，如果不以 “use” 开头的话，无法判断这个函数是否包含对其内部 Hook 的调用，React 将无法自动检查这个自定义 Hook 是否违反了 Hook 的规则。</p>\n<p><code>参数</code> ：并没有特殊要求，只是 React 官网中有提到过，可以接收另一个 Hook 的返回值作为参数，实现在多个 Hook 之间传递信息的功能。</p>\n<p><code>函数内部</code> ：在函数内部可以调用其他的 Hook，但是要遵循两个规则：</p>\n<ul>\n<li>\n<p>只在最顶层使用 Hook ，不要在循环，条件或嵌套函数中调用 Hook，这是因为 React 是靠 Hook 调用的顺序来知道哪个 state 对于哪个 useState 的。</p>\n</li>\n<li>\n<p>自定义 hooks 由 React 内置的 hook 或其他的自定义 hook 组成。因此一个自定义 hook 本质是一个或多个 hook 构成的新组合。如果一个自定义 hook 没有使用任何的内部 hook，那它就不是一个自定义 hook，也不应该以 &quot;use&quot; 为前缀。</p>\n</li>\n</ul>\n<h3 id=\"2-使用场景\"><a class=\"anchor\" href=\"#2-使用场景\">#</a> 2. 使用场景</h3>\n<p>让组件的通用逻辑复用更简单，可以把包含状态和事件处理的所有实现细节，移动到这个自定义 hook 中。另外，这个自定义 hook 返回一个数组，包含状态和一些更新状态函数。</p>\n<h3 id=\"3-如何使用\"><a class=\"anchor\" href=\"#3-如何使用\">#</a> 3. 如何使用</h3>\n<p>自定义 hook 是定义在一个 js 或 ts 文件中，最后用 export 导出，故用 import 引入使用：</p>\n<p>React 提供了多个内部 Hook，在自定义 Hook 的内部，一般都是利用内部 Hook，进行组装和扩展，来自定义各种功能的 Hook。<br />\n其中比较常见使用的 hooks 是<br />\n <code>useState</code> , <code>useRef</code> , <code>useEffect/useLayoutEffect</code> 。</p>\n<p>而从一个自定义 hook 中需要返回多个值时最佳的做法是返回一个数组，并利用数组进行解构。</p>\n<h3 id=\"4-案例\"><a class=\"anchor\" href=\"#4-案例\">#</a> 4. 案例</h3>\n<p>实现一个检测 React 组件外部点击事件的 <code>useOutsideClick</code> ，其使用方式大致如下所示</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClickOutside</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">//dosomething</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useOutsideClick</span><span class=\"token punctuation\">(</span>handleClickOutside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">//dosomething</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token operator\">&lt;</span>button ref<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">&#125;</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>handleClick<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Count<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>count<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>从上述的使用方式上，可以首先写出如下的代码，输入 <code>callback</code> ，输出一个 <code>ref</code></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>t</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useOutsideClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">// 具体代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>由于这个 <code>hook</code>  主要是处理点击事件的，所以首先需要添加点击事件，并且在销毁时移除添加的事件，为了能监听所有的点击事件，是在 document 上添加。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>t</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useOutsideClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  React<span class=\"token punctuation\">.</span><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>目前版本所有点击都会触发 <code>callback</code> ，所以接下来就是过滤掉自身触发的 <code>onclick</code>  事件。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>t</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useOutsideClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  React<span class=\"token punctuation\">.</span><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ref<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>上述的代码已经满足了要求，但是还有一点可以改进的，就是可能某些场景下，存在一个触发事件的边界，即外部可以通过 <code>stopPropagation</code>  来停止事件的传播。如下所示：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>t</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClickOutside</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">//dosomething</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useOutsideClick</span><span class=\"token punctuation\">(</span>handleClickOutside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">//dosomething</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleHeaderClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// do something</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    event<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>handleHeaderClick<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token operator\">&lt;</span>button ref<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">&#125;</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>handleClick<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Count<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>count<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>目前的版本并不适用与当前情况，因为事件中途停止冒泡了，所以无法触发在 <code>document</code>  上的 <code>callback</code></p>\n<p>为了实现上述功能，可以将冒泡阶段的事件处理放在捕获阶段进行处理。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>t</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useOutsideClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  React<span class=\"token punctuation\">.</span><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleClick<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleClick<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ref<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"5-参考\"><a class=\"anchor\" href=\"#5-参考\">#</a> 5. 参考</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9iaW53aWVydWNoLmRlL3JlYWN0LWhvb2stZGV0ZWN0LWNsaWNrLW91dHNpZGUtY29tcG9uZW50Lw==\">React Hook: Detect click outside of Component</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9iaW53aWVydWNoLmRlL3JlYWN0LXVzZWxvY2Fsc3RvcmFnZS1ob29rLw==\">React Hook: Using the Local Storage</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9iaW53aWVydWNoLmRlL3JlYWN0LWN1c3RvbS1ob29rLWNoZWNrLWlmLW92ZXJmbG93Lw==\">React Hook: Check if Overflow</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9iaW53aWVydWNoLmRlL3JlYWN0LWhvb2stc2Nyb2xsLWRpcmVjdGlvbi8=\">React Hook: Get Scroll Direction</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucm9iaW53aWVydWNoLmRlL3JlYWN0LWhvb2stc2Nyb2xsYmFyLXdpZHRoLw==\">React Hook: Get Scrollbar Width</span></li>\n</ul>\n",
            "tags": [
                "react",
                "react"
            ]
        },
        {
            "id": "http://jluyeyu.com/javascript/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/",
            "url": "http://jluyeyu.com/javascript/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/",
            "title": "服务端渲染",
            "date_published": "2022-03-17T09:25:52.000Z",
            "content_html": "<h4 id=\"js中的事件委托\"><a class=\"anchor\" href=\"#js中的事件委托\">#</a> js 中的事件委托</h4>\n<h2 id=\"服务端渲染与客户端渲染\"><a class=\"anchor\" href=\"#服务端渲染与客户端渲染\">#</a> 服务端渲染与客户端渲染</h2>\n<h3 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念：</h3>\n<ol>\n<li><strong>服务端渲染 (SSR):</strong></li>\n</ol>\n<p>​\t在服务器端完成把数据和模板转换成最终的  <code>HTML</code>  文件，然后浏览器接收到这个文件，就可以直接解析展示。</p>\n<ol start=\"2\">\n<li><strong>客户端渲染 (CSR)</strong></li>\n</ol>\n<p>​\t一个网页是由  <code>JS</code>  在客户端渲染出来的，而不是服务器直接返回回来的。</p>\n<h3 id=\"服务端渲染优缺点\"><a class=\"anchor\" href=\"#服务端渲染优缺点\">#</a> 服务端渲染优缺点</h3>\n<h4 id=\"优点\"><a class=\"anchor\" href=\"#优点\">#</a> 优点：</h4>\n<ul>\n<li>不占用前端的资源，前端耗时少，尤其是移动端，也可以更省电。</li>\n<li>有利于 SEO。因为在后端有完整的 html 页面，所以爬虫更容易爬取获得信息</li>\n<li>使用服务器页面缓存，这样就可以减少数据库查询浪费的时间了，且对于数据变化不大的页面非常高效 。</li>\n</ul>\n<h4 id=\"缺点\"><a class=\"anchor\" href=\"#缺点\">#</a> 缺点：</h4>\n<ul>\n<li>不利于前后端分离，开发效率低。</li>\n<li>占用服务器端资源，对 html 的解析，对前端来说加快了速度，但是加大了服务器的压力。</li>\n</ul>\n<h3 id=\"客户端渲染优缺点\"><a class=\"anchor\" href=\"#客户端渲染优缺点\">#</a> 客户端渲染优缺点</h3>\n<h4 id=\"优点-2\"><a class=\"anchor\" href=\"#优点-2\">#</a> 优点：</h4>\n<ul>\n<li>不占用前端的资源，前端耗时少，尤其是移动端，也可以更省电。</li>\n<li>有利于 SEO。因为在后端有完整的 html 页面，所以爬虫更容易爬取获得信息</li>\n<li>使用服务器页面缓存，这样就可以减少数据库查询浪费的时间了，且对于数据变化不大的页面非常高效 。</li>\n</ul>\n<h4 id=\"缺点-2\"><a class=\"anchor\" href=\"#缺点-2\">#</a> 缺点：</h4>\n<ul>\n<li>前后端分离，开发效率高。</li>\n<li>用户体验更好，网站做成 SPA（单页面应用）或者部分内容做成 SPA，当用户点击时，不会形成频繁的跳转。</li>\n</ul>\n",
            "tags": [
                "javascript",
                "javascript"
            ]
        },
        {
            "id": "http://jluyeyu.com/javascript/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/",
            "url": "http://jluyeyu.com/javascript/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/",
            "title": "事件委托",
            "date_published": "2022-03-13T09:25:52.000Z",
            "content_html": "<h4 id=\"js中的事件委托\"><a class=\"anchor\" href=\"#js中的事件委托\">#</a> js 中的事件委托</h4>\n<p>​\t那什么叫事件委托呢？它还有一个名字叫事件代理， <code>JavaScript</code>  高级程序设计上讲：事件委托就是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。那这是什么意思呢？网上的各位大牛们讲事件委托基本上都用了同一个例子，就是取快递来解释这个现象，我仔细揣摩了一下，这个例子还真是恰当，我就不去想别的例子来解释了，借花献佛，我摘过来，大家认真领会一下事件委托到底是一个什么原理：</p>\n<p>​\t有三个同事预计会在周一收到快递。为签收快递，有两种办法：一是三个人在公司门口等快递；二是委托给前台 MM 代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台也会在收到寄给新员工的快递后核实并代为签收。</p>\n<p>​\t这里其实还有 2 层意思的：</p>\n<ul>\n<li>\n<p>第一，现在委托前台的同事是可以代为签收的，即程序中的现有的 <code>dom</code>  节点是有事件的；</p>\n</li>\n<li>\n<p>第二，新员工也是可以被前台代为签收的，即程序中新添加的 <code>dom</code>  节点也是有事件的。</p>\n</li>\n</ul>\n<h4 id=\"为什么要用事件委托\"><a class=\"anchor\" href=\"#为什么要用事件委托\">#</a> 为什么要用事件委托：</h4>\n<p>一般来说， <code>dom</code>  需要有事件处理程序，我们都会直接给它设事件处理程序就好了，那如果是很多的 <code>dom</code>  需要添加事件处理呢？比如我们有 100 个 <code>li</code> ，每个 <code>li</code>  都有相同的 <code>click</code>  点击事件，可能我们会用 <code>for</code>  循环的方法，来遍历所有的 <code>li</code> ，然后给它们添加事件，那这么做会存在什么影响呢？</p>\n<p>在 JavaScript 中，添加到页面上的事件处理程序数量将直接关系到页面的整体运行性能，因为需要不断的与 <code>dom</code>  节点进行交互，访问 <code>dom</code>  的次数越多，引起浏览器重绘与重排的次数也就越多，就会延长整个页面的交互就绪时间，这就是为什么性能优化的主要思想之一就是减少 <code>dom</code>  操作的原因；如果要用事件委托，就会将所有的操作放到 <code>js</code>  程序里面，与 <code>dom</code>  的操作就只需要交互一次，这样就能大大的减少与 <code>dom</code>  的交互次数，提高性能；</p>\n<p>每个函数都是一个对象，是对象就会占用内存，对象越多，内存占用率就越大，自然性能就越差了（内存不够用，是硬伤，哈哈），比如上面的 100 个 <code>li</code> ，就要占用 100 个内存空间，如果是 1000 个，10000 个呢，那只能说呵呵了，如果用事件委托，那么我们就可以只对它的父级（如果只有一个父级）这一个对象进行操作，这样我们就需要一个内存空间就够了，是不是省了很多，自然性能就会更好。</p>\n<h4 id=\"事件委托的原理\"><a class=\"anchor\" href=\"#事件委托的原理\">#</a> 事件委托的原理：</h4>\n<p>事件委托是利用事件的冒泡原理来实现的，何为事件冒泡呢？就是事件从最深的节点开始，然后逐步向上传播事件，举个例子：页面上有这么一个节点树， <code>div&gt;ul&gt;li&gt;a</code> ; 比如给最里面的 <code>a</code>  加一个 <code>click</code>  点击事件，那么这个事件就会一层一层的往外执行，执行顺序 <code>a&gt;li&gt;ul&gt;div</code> ，有这样一个机制，那么我们给最外面的 <code>div</code>  加点击事件，那么里面的 <code>ul，li，a</code>  做点击事件的时候，都会冒泡到最外层的 <code>div</code>  上，所以都会触发，这就是事件委托，委托它们父级代为执行事件。</p>\n<h4 id=\"事件委托怎么实现\"><a class=\"anchor\" href=\"#事件委托怎么实现\">#</a> 事件委托怎么实现：</h4>\n<p>终于到了本文的核心部分了，哈哈，在介绍事件委托的方法之前，我们先来看一段一般方法的例子：</p>\n<p>子节点实现相同的功能：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>ul id<span class=\"token operator\">=</span><span class=\"token string\">\"ul1\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token number\">111</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token number\">222</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token number\">333</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token number\">444</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></pre></td></tr></table></figure><p>实现功能是点击 <code>li</code> ，弹出 123：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> oUl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> aLi <span class=\"token operator\">=</span> oUl<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>aLi<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        aLi<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面的代码的意思很简单，相信很多人都是这么实现的，我们看看有多少次的 <code>dom</code>  操作，首先要找到 <code>ul</code> ，然后遍历 <code>li</code> ，然后点击 <code>li</code>  的时候，又要找一次目标的 <code>li</code>  的位置，才能执行最后的操作，每次点击都要找一次 <code>li</code> ；</p>\n<p>那么我们用事件委托的方式做又会怎么样呢？</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> oUl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   oUl<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里用父级 ul 做事件处理，当 li 被点击时，由于冒泡原理，事件就会冒泡到 ul 上，因为 ul 上有点击事件，所以事件就会触发，当然，这里当点击 ul 的时候，也是会触发的，那么问题就来了，如果我想让事件代理的效果跟直接给节点的事件效果一样怎么办，比如说只有点击 li 才会触发，不怕，我们有绝招：</p>\n<p><code>Event</code>  对象提供了一个属性叫 <code>target</code> ，可以返回事件的目标节点，我们成为事件源，也就是说， <code>target</code>  就可以表示为当前的事件操作的 <code>dom</code> ，但是不是真正操作 <code>dom</code> ，当然，这个是有兼容性的，标准浏览器用 ev.target，IE 浏览器用 event.srcElement，此时只是获取了当前节点的位置，并不知道是什么节点名称，这里我们用 <code>nodeName</code>  来获取具体是什么标签名，这个返回的是一个大写的，我们需要转成小写再做比较（习惯问题）：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>　　<span class=\"token keyword\">var</span> oUl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>　　oUl<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>　　　　<span class=\"token keyword\">var</span> ev <span class=\"token operator\">=</span> ev <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>　　　　<span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>target <span class=\"token operator\">||</span> ev<span class=\"token punctuation\">.</span>srcElement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>　　　　<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>　 　　　　　　 <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>　　　　　　　  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>　　　　<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>　　<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这样改下就只有点击 <code>li</code>  会触发事件了，且每次只执行一次 <code>dom</code>  操作，如果 <code>li</code>  数量很多的话，将大大减少 <code>dom</code>  的操作，优化的性能可想而知！</p>\n<p>上面的例子是说 <code>li</code>  操作的是同样的效果，要是每个 <code>li</code>  被点击的效果都不一样，那么用事件委托还有用吗？</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"box\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"add\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"添加\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"remove\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"删除\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"move\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"移动\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"select\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"选择\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">var</span> Add <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">var</span> Remove <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"remove\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">var</span> Move <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"move\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">var</span> Select <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            Add<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'添加'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            Remove<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'删除'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Move<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'移动'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            Select<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面实现的效果我就不多说了，很简单，4 个按钮，点击每一个做不同的操作，那么至少需要 4 次 <code>dom</code>  操作，如果用事件委托，能进行优化吗？</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">var</span> oBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"box\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            oBox<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">var</span> ev <span class=\"token operator\">=</span> ev <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>target <span class=\"token operator\">||</span> ev<span class=\"token punctuation\">.</span>srcElement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                        <span class=\"token keyword\">case</span> <span class=\"token string\">'add'</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'添加'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        <span class=\"token keyword\">case</span> <span class=\"token string\">'remove'</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'删除'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token keyword\">case</span> <span class=\"token string\">'move'</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'移动'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                        <span class=\"token keyword\">case</span> <span class=\"token string\">'select'</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>用事件委托就可以只用一次 <code>dom</code>  操作就能完成所有的效果，比上面的性能肯定是要好一些的</p>\n<p>现在讲的都是 <code>document</code>  加载完成的现有 <code>dom</code>  节点下的操作，那么如果是新增的节点，新增的节点会有事件吗？也就是说，一个新员工来了，他能收到快递吗？</p>\n<p>看一下正常的添加节点的方法：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"btn\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"添加\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>ul id<span class=\"token operator\">=</span><span class=\"token string\">\"ul1\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token number\">111</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token number\">222</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token number\">333</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token number\">444</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></pre></td></tr></table></figure><p>现在是移入 <code>li</code> ， <code>li</code>  变红，移出 <code>li</code> ， <code>li</code>  变白，这么一个效果，然后点击按钮，可以向 <code>ul</code>  中添加一个 <code>li</code>  子节点</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">var</span> oBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">var</span> oUl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">var</span> aLi <span class=\"token operator\">=</span> oUl<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">// 鼠标移入变红，移出变白</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>aLi<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                aLi<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseover</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                aLi<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 添加新节点</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            oBtn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">var</span> oLi <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                oLi<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token number\">111</span><span class=\"token operator\">*</span>num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                oUl<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>oLi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这是一般的做法，但是你会发现，新增的 <code>li</code>  是没有事件的，说明添加子节点的时候，事件没有一起添加进去，这不是我们想要的结果，那怎么做呢？一般的解决方案会是这样，将 for 循环用一个函数包起来，命名为 <code>mHover</code> ，如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">var</span> oBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">var</span> oUl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">var</span> aLi <span class=\"token operator\">=</span> oUl<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">function</span> <span class=\"token function\">mHover</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token comment\">// 鼠标移入变红，移出变白</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>aLi<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    aLi<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseover</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    aLi<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token function\">mHover</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 添加新节点</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            oBtn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">var</span> oLi <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                oLi<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token number\">111</span><span class=\"token operator\">*</span>num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                oUl<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>oLi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token function\">mHover</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>虽然功能实现了，看着还挺好，但实际上无疑是又增加了一个 <code>dom</code>  操作，在优化性能方面是不可取的，那么有事件委托的方式，能做到优化吗？</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">var</span> oBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">var</span> oUl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">var</span> aLi <span class=\"token operator\">=</span> oUl<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">// 事件委托，添加的子元素也有事件</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            oUl<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseover</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">var</span> ev <span class=\"token operator\">=</span> ev <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>target <span class=\"token operator\">||</span> ev<span class=\"token punctuation\">.</span>srcElement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            oUl<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">var</span> ev <span class=\"token operator\">=</span> ev <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>target <span class=\"token operator\">||</span> ev<span class=\"token punctuation\">.</span>srcElement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// 添加新节点</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            oBtn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">var</span> oLi <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                oLi<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token number\">111</span><span class=\"token operator\">*</span>num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                oUl<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>oLi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>看，上面是用事件委托的方式，新添加的子元素是带有事件效果的，我们可以发现，当用事件委托的时候，根本就不需要去遍历元素的子节点，只需要给父级元素添加事件就好了，其他的都是在 <code>js</code>  里面的执行，这样可以大大的减少 <code>dom</code>  操作，这才是事件委托的精髓所在。</p>\n",
            "tags": [
                "javascript",
                "javascript"
            ]
        },
        {
            "id": "http://jluyeyu.com/leetcode/6.%20Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/",
            "url": "http://jluyeyu.com/leetcode/6.%20Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/",
            "title": "Z字形变换",
            "date_published": "2022-02-28T04:00:52.000Z",
            "content_html": "<h2 id=\"6-z字形变换\"><a class=\"anchor\" href=\"#6-z字形变换\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvemlnemFnLWNvbnZlcnNpb24v\">6. Z 字形变换</span></h2>\n<p>难度：中等</p>\n<h3 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目：</h3>\n<p>将一个给定字符串  <code>s</code>  根据给定的行数  <code>numRows</code>  ，以从上往下、从左到右进行  <code>Z</code>  字形排列。</p>\n<p>比如输入字符串为  <code>&quot;PAYPALISHIRING&quot;</code>  行数为 3 时，排列如下：</p>\n<pre><code>P   A   H   N\nA P L S I I G\nY   I   R\n</code></pre>\n<p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如： <code>&quot;PAHNAPLSIIGYIR&quot;。</code></p>\n<p>请你实现这个将字符串进行指定行数变换的函数：</p>\n<p><code>string convert(string s, int numRows);</code></p>\n<p>示例 1：</p>\n<pre><code>输入：s = &quot;PAYPALISHIRING&quot;, numRows = 3\n输出：&quot;PAHNAPLSIIGYIR&quot;\n</code></pre>\n<p>示例 2：</p>\n<pre><code>输入：s = &quot;PAYPALISHIRING&quot;, numRows = 4\n输出：&quot;PINALSIGYAHRPI&quot;\n</code></pre>\n<p>解释：</p>\n<pre><code>P     I    N\nA   L S  I G\nY A   H R\nP     I\n</code></pre>\n<p>示例 3：</p>\n<pre><code>输入：s = &quot;A&quot;, numRows = 1\n输出：&quot;A&quot;\n</code></pre>\n<p>提示：</p>\n<pre><code>1 &lt;= s.length &lt;= 1000\ns 由英文字母（小写和大写）、',' 和 '.' 组成\n1 &lt;= numRows &lt;= 1000\n</code></pre>\n<h3 id=\"想法\"><a class=\"anchor\" href=\"#想法\">#</a> 想法：</h3>\n<h4 id=\"1-数学模拟解法\"><a class=\"anchor\" href=\"#1-数学模拟解法\">#</a> 1. 数学模拟解法</h4>\n<p>对于一个 Z 字形变换，可以很明显的观察出，第一行和最后一行每个元素之间的间隔是 <code>2*numRows-2</code> ，而每一行第一个元素我们又是已知的。那么很容易就会想到遍历行进行模拟。</p>\n<pre><code>0  6    12\n1 57  1113\n24 810 \n3  9\n</code></pre>\n<p>那么如何确定当前行结束呢，这里采用的是轮数来决定。对于上述例子，第一轮指的是</p>\n<pre><code>0   \n1  5\n24\n3\n</code></pre>\n<p>因此可以计算出最大轮数是 <code>Math.ceil(s.length/(2*(numRows)-2));</code></p>\n<p>接下来就是中间行的处理，对于每一轮来说，一行会有两个元素，且每个元素之间的索引差是 <code>2*(numRows-row)-2</code> , 其中 <code>row</code>  表示的就是当前行。那么只需要计算出每一轮第一个元素的索引即可。<br />\n这个也很好计算，因为每行第一个元素就是 <code>row</code> ，而每轮之间的索引差也是固定的，所以可以算出，中间行每轮的第一个元素索引是 <code>row+(2*(numRows)-2)*(count);</code> <br />\n 因此，整个代码就很简单了。</p>\n<h5 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>s</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">convert</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> numRows</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numRows<span class=\"token operator\">===</span><span class=\"token number\">1</span><span class=\"token operator\">||</span>numRows<span class=\"token operator\">>=</span>s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">let</span> res<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fill</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">row<span class=\"token punctuation\">,</span>s</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">let</span> count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">let</span> max<span class=\"token operator\">=</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>length<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>numRows<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span>row<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">++</span><span class=\"token operator\">&lt;</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 中间行需要特别注意</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>row<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;&amp;</span>row<span class=\"token operator\">!=</span>numRows<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>numRows<span class=\"token operator\">-</span>row<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                res<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            i<span class=\"token operator\">=</span>row<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>numRows<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>numRows<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"2直接模拟法\"><a class=\"anchor\" href=\"#2直接模拟法\">#</a> 2. 直接模拟法</h4>\n<p>上述的模拟还是比较麻烦的，更近一步的，我们会注意到，在 Z 字形变换的时候，填入时行序列是从 <code>0</code>  到 <code>numRows</code> , 再从 <code>numRows</code>  到 <code>0</code> ，我们只要模拟这个行索引的变换过程就可以快速解答出来。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>s</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">convert</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> numRows</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numRows<span class=\"token operator\">===</span><span class=\"token number\">1</span><span class=\"token operator\">||</span>numRows<span class=\"token operator\">></span>s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">let</span> res<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>numRows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">let</span> flag <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> c <span class=\"token keyword\">of</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        res<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> c</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> i <span class=\"token operator\">==</span> numRows <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> flag <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            i <span class=\"token operator\">+=</span> flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "每日一题",
                "leetcode"
            ]
        },
        {
            "id": "http://jluyeyu.com/leetcode/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97js%E5%86%99%E6%B3%95/",
            "url": "http://jluyeyu.com/leetcode/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97js%E5%86%99%E6%B3%95/",
            "title": "优先队列js写法",
            "date_published": "2022-02-28T04:00:52.000Z",
            "content_html": "<h3 id=\"优先队列js写法\"><a class=\"anchor\" href=\"#优先队列js写法\">#</a> 优先队列 js 写法</h3>\n<p>​\t普通的队列是一种先进先出的数据结构，元素在队列尾追加，而从队列头删除。</p>\n<p>而在优先队列中，元素被赋予优先级。当访问元素时，具有最高优先级的元素最先删除。优先队列具有最高级先出的行为特征。实际上采用的是二叉堆的形式进行存储。由于 <code>js</code>  没有提供现成的优先队列，所以记录一下其 js 的实现过程。</p>\n<h4 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路：</h4>\n<p>​\t对于一个完全二叉树来说，一个节点的编号为 <code>i</code> （从 0 开始计算），则其父节点的编号为 <code>Math.floor((i-1)/2</code> , 其左右子节点的编号为 <code>2*i+1</code> 、 <code>2*i+2</code> 。此外对于一个堆来说最重要的就是插入和删除操作。</p>\n<h4 id=\"插入\"><a class=\"anchor\" href=\"#插入\">#</a> 插入</h4>\n<p>举个例子，假如要在下面的二叉堆（小顶堆）中，再插入 2：</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/%E4%BA%8C%E5%8F%89%E5%A0%86%E6%8F%92%E5%85%A51%20.png\" alt=\"二叉堆插入演示1\" /><br />\n 首先现在最后插入节点 2</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/%E4%BA%8C%E5%8F%89%E5%A0%86%E6%8F%92%E5%85%A52.png\" alt=\"二叉堆插入演示2\" /></p>\n<p>然后因为 2 小于 5，不满足堆的性质，上浮</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/%E4%BA%8C%E5%8F%89%E5%A0%86%E6%8F%92%E5%85%A53.png\" alt=\"二叉堆插入演示2\" /></p>\n<p>然后因为 2 小于 3，不满足堆的性质，继续上浮。最后到顶</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/%E4%BA%8C%E5%8F%89%E5%A0%86%E6%8F%92%E5%85%A54.png\" alt=\"二叉堆插入演示2\" /></p>\n<h4 id=\"删除\"><a class=\"anchor\" href=\"#删除\">#</a> 删除</h4>\n<p>​\t删除与插入相反，删除的是堆顶元素，我们需要找到一个元素来替代堆顶的位置，以保证堆的性质不被破坏。因此进行如下的操作：</p>\n<p>还是以前面建立的二叉堆为例，假如要删除堆顶的 2。则直接先把 2 删除，那么 2 的位置就有一个空穴。</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/%E4%BA%8C%E5%8F%89%E5%A0%86%E5%88%A0%E9%99%A41%20.png\" alt=\"二叉堆删除演示1\" /></p>\n<p>然后将 <code>5</code>  替换到空穴的位置，然后因为 <code>5&gt;4&gt;3</code>  不满足小顶堆的性质，所以将 5 和 3 交换。</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/%E4%BA%8C%E5%8F%89%E5%A0%86%E5%88%A0%E9%99%A42%20.png\" alt=\"二叉堆删除2\" /></p>\n<h4 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PriorityQueue</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sortBy</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 先把排序方式定下来， 默认值是按从小到大排序</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sortBy <span class=\"token operator\">=</span> sortBy <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 一开始队列的样子，js 中用数组直接表示</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">siftUp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">let</span> parentIndex <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前\"</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> <span class=\"token string\">\"父\"</span><span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token comment\">// 进行上浮</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortBy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>parentIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> parentIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        index<span class=\"token operator\">=</span>parentIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 终止</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token function\">siftDown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">let</span> left <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">let</span> right <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">let</span> maxIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token comment\">// 左节点是最值的话</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        left <span class=\"token operator\">&lt;=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortBy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>maxIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        maxIndex <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token comment\">// 右节点是最值的话</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        right <span class=\"token operator\">&lt;=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sortBy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>maxIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        maxIndex <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token comment\">// 如果当前节点不是最值，那么当前节点的值要往下传递，让下面的最值冒泡上来</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maxIndex <span class=\"token operator\">!==</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> maxIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">siftDown</span><span class=\"token punctuation\">(</span>maxIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token comment\">// 入队 -- 插入元素</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token function\">enQueue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">siftUp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token comment\">// 出队 -- 获取最值</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token function\">deQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">const</span> top <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">siftDown</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token comment\">// 获取最值 -- 不移除</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token comment\">// 获取队列中的元素总数</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  <span class=\"token comment\">// 判断当前优先队列是否为空</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>  <span class=\"token comment\">// 清空当前队列中的所有元素</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  <span class=\"token comment\">// 交换节点的值</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">const</span> temp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>queue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PriorityQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>演示地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlcGVuLmlvL21lbW9yeW9mbG92ZS9wZW4vak9hZVZ4WQ==\">https://codepen.io/memoryoflove/pen/jOaeVxY</span></p>\n",
            "tags": [
                "每日一题",
                "leetcode"
            ]
        },
        {
            "id": "http://jluyeyu.com/react/react%20%E7%AE%80%E6%98%93%E7%89%88useState%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/",
            "url": "http://jluyeyu.com/react/react%20%E7%AE%80%E6%98%93%E7%89%88useState%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/",
            "title": "react 简易版useState实现方式",
            "date_published": "2022-02-27T10:20:52.000Z",
            "content_html": "<h1 id=\"react简易版usestate实现方式\"><a class=\"anchor\" href=\"#react简易版usestate实现方式\">#</a> react 简易版 useState 实现方式</h1>\n<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言：</h3>\n<p>​\t <code>react</code>  的 <code>hooks</code>  是应用的很常见的一个技术，而 <code>useState</code>  更是一个很常见的 <code>hook</code> , 这里介绍其实现方式。写法实际上是 react 源码的简化版。</p>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路：</h3>\n<p>​\t那么首先我们需要知道 <code>hooks</code>  的基础用法。对于 <code>useState</code>  来说比较常见的用法是</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token constant\">APP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">,</span>setVal<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">setVal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>​\t为了方便起见，我们采用了简单的 <code>isMount</code>  来记录组件是初次加载还是重新渲染，利用 <code>workInProgressHook</code>  来记录当前工作的 <code>hooks</code> , 利用 <code>schedule</code>  函数来进行调度重新渲染</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> isMount <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> workInProgressHook <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> fiber <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  stateNode<span class=\"token operator\">:</span> <span class=\"token constant\">APP</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 保存函数组件 hooks 上的 state,class 组件中上的 (链表)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  memoizedState<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  workInProgressHook <span class=\"token operator\">=</span> fiber<span class=\"token punctuation\">.</span>memoizedState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">const</span> testRes <span class=\"token operator\">=</span> fiber<span class=\"token punctuation\">.</span><span class=\"token function\">stateNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  isMount <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 便于看结果将其返回</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">return</span> testRes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token constant\">APP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">,</span>setNum<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>isMount<span class=\"token operator\">?</span><span class=\"token string\">'APP初始化'</span><span class=\"token operator\">:</span><span class=\"token string\">'重新加载'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'count对应的值是'</span><span class=\"token punctuation\">,</span>count<span class=\"token punctuation\">,</span><span class=\"token string\">'num对应的值是'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">addOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token parameter\">count</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>       <span class=\"token keyword\">return</span>  count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">addTen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">setNum</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>         <span class=\"token keyword\">return</span>  num <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">//TODO 补全内容。</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>window<span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>​\t由于 <code>useState</code>  可能会调用多次，所以必须要将其存储起来，才能保证每次获得的值是一一对应。 <code>react</code>  采用的是链表的方式进行存储的，每个组件都有一个 <code>fiber</code>  与之对应， <code>fiber</code>  上的 <code>memoizedState</code>  就是对应存储的 <code>state</code> 。</p>\n<p>​\t对于 <code>useState</code>  来说，需要返回当前的值，为了记录这个值，采用了 <code>memoizedState</code>  进行记录，当初次加载时创建一个 <code>hook</code> , 其中包含初始值，和修改操作列表。</p>\n<p>​\t然后将其挂在 <code>fiber.memoizedState</code>  的尾部。需要读取的时候，遍历链表获取对应的值。</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">let</span> hook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    hook <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      memoizedState<span class=\"token operator\">:</span> initialState<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 初始值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      next<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      queue<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\t\t\t\t\t   <span class=\"token comment\">// 对应的更改的操作</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          pending<span class=\"token operator\">:</span><span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 是第一个 hook 的话，进行赋值</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fiber<span class=\"token punctuation\">.</span>memoizedState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      fiber<span class=\"token punctuation\">.</span>memoizedState <span class=\"token operator\">=</span> hook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token comment\">// 记录到尾部</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      workInProgressHook<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> hook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 记录当前链表的尾部</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    workInProgressHook <span class=\"token operator\">=</span> hook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    hook <span class=\"token operator\">=</span> workInProgressHook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    workInProgressHook <span class=\"token operator\">=</span> workInProgressHook<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\">// 获取初始状态</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">let</span> baseState<span class=\"token operator\">=</span>hook<span class=\"token punctuation\">.</span>memoizedState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">//TODO , 返回修改值的函数</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>baseState<span class=\"token punctuation\">,</span><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>然后就是具体修改值的函数，如下所示，因为修改的函数可能会多次执行，所以其存储结构采用的是环状列表来实现。对应于上面的 <code>queue</code></p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hook <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      memoizedState<span class=\"token operator\">:</span> initialState<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 初始值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      next<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      queue<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\t\t\t\t\t   <span class=\"token comment\">// 对应的更改的操作</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          pending<span class=\"token operator\">:</span><span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其每一项都包含一个我们传入的 <code>action</code> 。</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">dispatchAction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">queue<span class=\"token punctuation\">,</span>action</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 环状链表实现</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> update<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        action<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        next<span class=\"token operator\">:</span><span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">.</span>pending<span class=\"token operator\">===</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        update<span class=\"token punctuation\">.</span>next<span class=\"token operator\">=</span>update<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>              </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        update<span class=\"token punctuation\">.</span>next<span class=\"token operator\">=</span>queue<span class=\"token punctuation\">.</span>pending<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        queue<span class=\"token punctuation\">.</span>pending<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">.</span>next<span class=\"token operator\">=</span>update<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 指向该链表的最后一个元素</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    queue<span class=\"token punctuation\">.</span>pending<span class=\"token operator\">=</span>update<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 触发更新</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>完整的代码如下图所示</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> isMount <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> workInProgressHook <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> fiber <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  stateNode<span class=\"token operator\">:</span> <span class=\"token constant\">APP</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// 保存函数组件 hooks 上的 state,class 组件中上的 (链表)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  memoizedState<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  workInProgressHook <span class=\"token operator\">=</span> fiber<span class=\"token punctuation\">.</span>memoizedState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">const</span> testRes <span class=\"token operator\">=</span> fiber<span class=\"token punctuation\">.</span><span class=\"token function\">stateNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  isMount <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">// 便于看结果给一个返回值</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">return</span> testRes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token constant\">APP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">,</span>setNum<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>isMount<span class=\"token operator\">?</span><span class=\"token string\">'APP初始化'</span><span class=\"token operator\">:</span><span class=\"token string\">'重新加载'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'count对应的值是'</span><span class=\"token punctuation\">,</span>count<span class=\"token punctuation\">,</span><span class=\"token string\">'num对应的值是'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">addOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token parameter\">count</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>       <span class=\"token keyword\">return</span>  count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">addTen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">setNum</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>         <span class=\"token keyword\">return</span>  num <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">let</span> hook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    hook <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      memoizedState<span class=\"token operator\">:</span> initialState<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      next<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      queue<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          pending<span class=\"token operator\">:</span><span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">// 是第一个 hook 的话，进行赋值</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fiber<span class=\"token punctuation\">.</span>memoizedState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      fiber<span class=\"token punctuation\">.</span>memoizedState <span class=\"token operator\">=</span> hook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token comment\">// 记录到尾部</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      workInProgressHook<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> hook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\">// 记录当前链表的尾部</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    workInProgressHook <span class=\"token operator\">=</span> hook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    hook <span class=\"token operator\">=</span> workInProgressHook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    workInProgressHook <span class=\"token operator\">=</span> workInProgressHook<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token comment\">// 获取初始状态</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token keyword\">let</span> baseState<span class=\"token operator\">=</span>hook<span class=\"token punctuation\">.</span>memoizedState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token comment\">// 如果存在更新</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hook<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span>pending<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">let</span> firstUpdate<span class=\"token operator\">=</span>hook<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span>pending<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\">// 遍历链表进行更新</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">const</span> firstAction<span class=\"token operator\">=</span>firstUpdate<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'baseState'</span><span class=\"token punctuation\">,</span>baseState<span class=\"token punctuation\">,</span>firstAction<span class=\"token punctuation\">,</span><span class=\"token function\">firstAction</span><span class=\"token punctuation\">(</span>baseState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        baseState<span class=\"token operator\">=</span><span class=\"token function\">firstAction</span><span class=\"token punctuation\">(</span>baseState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        firstUpdate<span class=\"token operator\">=</span>firstUpdate<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">// 环装链表的终止条件，不等于自身</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>firstUpdate<span class=\"token operator\">!==</span>hook<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span>pending<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    hook<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span>pending<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  hook<span class=\"token punctuation\">.</span>memoizedState<span class=\"token operator\">=</span>baseState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>baseState<span class=\"token punctuation\">,</span><span class=\"token function\">dispatchAction</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>hook<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">dispatchAction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">queue<span class=\"token punctuation\">,</span>action</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token comment\">// 环状链表实现</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">const</span> update<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        action<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        next<span class=\"token operator\">:</span><span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">.</span>pending<span class=\"token operator\">===</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        update<span class=\"token punctuation\">.</span>next<span class=\"token operator\">=</span>update<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>              </pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        update<span class=\"token punctuation\">.</span>next<span class=\"token operator\">=</span>queue<span class=\"token punctuation\">.</span>pending<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        queue<span class=\"token punctuation\">.</span>pending<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">.</span>next<span class=\"token operator\">=</span>update<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token comment\">// 指向该链表的最后一个元素</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    queue<span class=\"token punctuation\">.</span>pending<span class=\"token operator\">=</span>update<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token comment\">// 触发更新</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>window<span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/%E7%AE%80%E6%98%93%E7%89%88useState.gif\" alt=\"简易版useState演示\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlcGVuLmlvL21lbW9yeW9mbG92ZS9wZW4vd3ZQRUxSTj9lZGl0b3JzPTAwMTE=\">useState 演示地址</span></p>\n",
            "tags": [
                "react",
                "react"
            ]
        },
        {
            "id": "http://jluyeyu.com/react/react%20%E7%AE%80%E6%98%93%E6%8A%98%E5%8F%A0%E9%9D%A2%E6%9D%BF/",
            "url": "http://jluyeyu.com/react/react%20%E7%AE%80%E6%98%93%E6%8A%98%E5%8F%A0%E9%9D%A2%E6%9D%BF/",
            "title": "react简易折叠面板实现",
            "date_published": "2022-02-17T10:20:52.000Z",
            "content_html": "<h1 id=\"react简易折叠面板实现\"><a class=\"anchor\" href=\"#react简易折叠面板实现\">#</a> react 简易折叠面板实现</h1>\n<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言：</h3>\n<p>​\t折叠面板应该是日常开发中用的很多的一个效果，之前也没太接触过，看了下<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbnQuZGVzaWduL2NvbXBvbmVudHMvY29sbGFwc2UtY24v\"> antd</span> 的折叠面板，但是感觉面板 header 部分可能有些简洁，如果想在头部多加一些东西的话，可能有些麻烦，于是乎就决定自己搞一个。</p>\n<p>​\t为了更加灵活的控制面板是否折叠，只考虑实现一个面板组件，其折叠状态的方法通过 props 进行传递。</p>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路：</h3>\n<p>​\t每个面板折叠、展开的动画效果其实就是去控制 <code>collapse-panel</code>  的 <code>height</code>  变化，并通过 <code>transform</code>  展示动画，所以在一开始就需要记录下每个面板的原始高度，否则在折叠面板后，高度就变为 0 了，这时候计算出来的值也为 0，就无法还原为初始高度了。</p>\n<p>​\t那么怎么计算初始高度呢？react 提供了一个 <code>useRef</code>  可以获取到组件的实例，其 <code>current</code>  上的 <code>scrollheight</code>  就是对应的高度，我们可以在初始化的时候获取并记录它。</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> collapsePanel <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>collapseOriginalHeight<span class=\"token punctuation\">,</span>setCollapseOriginalHeight<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'auto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">setCollapseOriginalHeight</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>collapsePanel<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>那么接下来根据折叠 ( <code>collapse</code> ) 来动态的改变对应面板的高度就可以了</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> collapseStyle<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    height<span class=\"token operator\">:</span>collapse<span class=\"token operator\">?</span><span class=\"token string\">'0px'</span><span class=\"token operator\">:</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>collapseOriginalHeight<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> body<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>bodyClass<span class=\"token punctuation\">&#125;</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>bodyStyle<span class=\"token punctuation\">,</span>collapseStyle<span class=\"token punctuation\">&#125;</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>collapsePanel<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      </span><span class=\"token punctuation\">&#123;</span>children<span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>最后加一个 <code>transition</code>  效果</p>\n<figure class=\"highlight less\"><figcaption data-lang=\"less\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.MyCollapsePanel</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token selector\">&amp;-body</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> height 500ms<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">MyCollapsePanel</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    prefixCls <span class=\"token operator\">=</span> <span class=\"token string\">\"MyCollapsePanel\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    className<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    extra<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    children<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    collapse<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    bodyStyle<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    bordered <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token operator\">...</span>others</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">const</span> collapsePanel <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>collapseOriginalHeight<span class=\"token punctuation\">,</span>setCollapseOriginalHeight<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'auto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">setCollapseOriginalHeight</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>collapsePanel<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">const</span> bodyClass<span class=\"token operator\">=</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">-body</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">const</span> collapseStyle<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    height<span class=\"token operator\">:</span>collapse<span class=\"token operator\">?</span><span class=\"token string\">'0px'</span><span class=\"token operator\">:</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>collapseOriginalHeight<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">const</span> body<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>bodyClass<span class=\"token punctuation\">&#125;</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>bodyStyle<span class=\"token punctuation\">,</span>collapseStyle<span class=\"token punctuation\">&#125;</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>collapsePanel<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      </span><span class=\"token punctuation\">&#123;</span>children<span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      </span><span class=\"token punctuation\">&#123;</span>body<span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用：</p>\n<p>父组件通过控制 <code>collapse</code>  来显示或折叠面板</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>collapse<span class=\"token punctuation\">,</span> setCollapse<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleCollapse</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">setCollapse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyCollapsePanel</span></span> <span class=\"token attr-name\">collapse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>collapse<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">//...具体内容&lt;/div></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyCollapsePanel</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">;</span></pre></td></tr></table></figure><p>效果展示</p>\n<p><img data-src=\"https://yeyu-blog.oss-cn-beijing.aliyuncs.com/article_images/%E7%AE%80%E5%8D%95%E6%8A%98%E5%8F%A0%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%B5%8B%E8%AF%95.gif\" alt=\"折叠面板效果展示\" /></p>\n",
            "tags": [
                "react",
                "react"
            ]
        }
    ]
}